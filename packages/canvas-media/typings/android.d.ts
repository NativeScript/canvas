declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export abstract class AbstractConcatenatedTimeline extends com.google.android.exoplayer2.Timeline {
					public static class: java.lang.Class<com.google.android.exoplayer2.AbstractConcatenatedTimeline>;
					public constructor(param0: boolean, param1: com.google.android.exoplayer2.source.ShuffleOrder);
					public getNextWindowIndex(param0: number, param1: number, param2: boolean): number;
					public getPreviousWindowIndex(param0: number, param1: number, param2: boolean): number;
					public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period, param2: boolean): com.google.android.exoplayer2.Timeline.Period;
					public static getChildTimelineUidFromConcatenatedUid(param0: any): any;
					public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
					public getPeriodByUid(param0: any, param1: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
					public getUidOfPeriod(param0: number): any;
					public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: number): com.google.android.exoplayer2.Timeline.Window;
					public getLastWindowIndex(param0: boolean): number;
					public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
					public static getConcatenatedUid(param0: any, param1: any): any;
					public getChildIndexByPeriodIndex(param0: number): number;
					public getChildIndexByWindowIndex(param0: number): number;
					public getChildIndexByChildUid(param0: any): number;
					public getTimelineByChildIndex(param0: number): com.google.android.exoplayer2.Timeline;
					public getChildUidByChildIndex(param0: number): any;
					public constructor();
					/** @deprecated */
					public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: boolean): com.google.android.exoplayer2.Timeline.Window;
					public static getChildPeriodUidFromConcatenatedUid(param0: any): any;
					public getFirstWindowIndex(param0: boolean): number;
					public getFirstPeriodIndexByChildIndex(param0: number): number;
					public getIndexOfPeriod(param0: any): number;
					public getFirstWindowIndexByChildIndex(param0: number): number;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class AudioBecomingNoisyManager {
					public static class: java.lang.Class<com.google.android.exoplayer2.AudioBecomingNoisyManager>;
					public setEnabled(param0: boolean): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: com.google.android.exoplayer2.AudioBecomingNoisyManager.EventListener);
				}
				export module AudioBecomingNoisyManager {
					export class AudioBecomingNoisyReceiver {
						public static class: java.lang.Class<com.google.android.exoplayer2.AudioBecomingNoisyManager.AudioBecomingNoisyReceiver>;
						public onReceive(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): void;
						public run(): void;
						public constructor(param0: com.google.android.exoplayer2.AudioBecomingNoisyManager, param1: globalAndroid.os.Handler, param2: com.google.android.exoplayer2.AudioBecomingNoisyManager.EventListener);
					}
					export class EventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.AudioBecomingNoisyManager.EventListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.AudioBecomingNoisyManager$EventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onAudioBecomingNoisy(): void;
						});
						public constructor();
						public onAudioBecomingNoisy(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class AudioFocusManager {
					public static class: java.lang.Class<com.google.android.exoplayer2.AudioFocusManager>;
					public static PLAYER_COMMAND_DO_NOT_PLAY: number;
					public static PLAYER_COMMAND_WAIT_FOR_CALLBACK: number;
					public static PLAYER_COMMAND_PLAY_WHEN_READY: number;
					public updateAudioFocus(param0: boolean, param1: number): number;
					public getVolumeMultiplier(): number;
					public release(): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: com.google.android.exoplayer2.AudioFocusManager.PlayerControl);
					public setAudioAttributes(param0: com.google.android.exoplayer2.audio.AudioAttributes): void;
				}
				export module AudioFocusManager {
					export class AudioFocusListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.AudioFocusManager.AudioFocusListener>;
						public constructor(param0: com.google.android.exoplayer2.AudioFocusManager, param1: globalAndroid.os.Handler);
						public onAudioFocusChange(param0: number): void;
					}
					export class PlayerCommand {
						public static class: java.lang.Class<com.google.android.exoplayer2.AudioFocusManager.PlayerCommand>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.AudioFocusManager$PlayerCommand interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class PlayerControl {
						public static class: java.lang.Class<com.google.android.exoplayer2.AudioFocusManager.PlayerControl>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.AudioFocusManager$PlayerControl interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setVolumeMultiplier(param0: number): void;
							executePlayerCommand(param0: number): void;
						});
						public constructor();
						public executePlayerCommand(param0: number): void;
						public setVolumeMultiplier(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export abstract class BasePlayer extends com.google.android.exoplayer2.Player {
					public static class: java.lang.Class<com.google.android.exoplayer2.BasePlayer>;
					public window: com.google.android.exoplayer2.Timeline.Window;
					public isCurrentWindowDynamic(): boolean;
					public getPlayWhenReady(): boolean;
					public getRendererCount(): number;
					public addListener(param0: com.google.android.exoplayer2.Player.EventListener): void;
					public setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>, param1: number, param2: number): void;
					public addMediaItem(param0: com.google.android.exoplayer2.MediaItem): void;
					/** @deprecated */
					public getPlaybackError(): com.google.android.exoplayer2.ExoPlaybackException;
					public hasNext(): boolean;
					public seekTo(param0: number): void;
					/** @deprecated */
					public getCurrentTag(): any;
					public getContentPosition(): number;
					public constructor();
					public pause(): void;
					public getDeviceComponent(): com.google.android.exoplayer2.Player.DeviceComponent;
					public clearMediaItems(): void;
					public moveMediaItem(param0: number, param1: number): void;
					public getPlaybackSuppressionReason(): number;
					public getCurrentAdGroupIndex(): number;
					public setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>, param1: boolean): void;
					public getCurrentPeriodIndex(): number;
					public setMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
					public prepare(): void;
					public next(): void;
					public getMetadataComponent(): com.google.android.exoplayer2.Player.MetadataComponent;
					public moveMediaItems(param0: number, param1: number, param2: number): void;
					public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
					public removeMediaItem(param0: number): void;
					public getShuffleModeEnabled(): boolean;
					public getCurrentWindowIndex(): number;
					public previous(): void;
					public getMediaItemAt(param0: number): com.google.android.exoplayer2.MediaItem;
					public addMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public release(): void;
					public getCurrentAdIndexInAdGroup(): number;
					public getPreviousWindowIndex(): number;
					public isCurrentWindowSeekable(): boolean;
					public getAudioComponent(): com.google.android.exoplayer2.Player.AudioComponent;
					public getCurrentLiveOffset(): number;
					public getPlayerError(): com.google.android.exoplayer2.ExoPlaybackException;
					public seekToDefaultPosition(param0: number): void;
					public getContentBufferedPosition(): number;
					public setShuffleModeEnabled(param0: boolean): void;
					public stop(): void;
					public play(): void;
					public addMediaItems(param0: number, param1: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public setRepeatMode(param0: number): void;
					public setMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: boolean): void;
					public removeMediaItems(param0: number, param1: number): void;
					public getPlaybackState(): number;
					public getCurrentTimeline(): com.google.android.exoplayer2.Timeline;
					public isLoading(): boolean;
					public setPlayWhenReady(param0: boolean): void;
					public getRepeatMode(): number;
					public setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public getApplicationLooper(): globalAndroid.os.Looper;
					public getTextComponent(): com.google.android.exoplayer2.Player.TextComponent;
					public getDuration(): number;
					public isPlaying(): boolean;
					public hasPrevious(): boolean;
					public seekTo(param0: number, param1: number): void;
					public getCurrentStaticMetadata(): java.util.List<com.google.android.exoplayer2.metadata.Metadata>;
					public removeListener(param0: com.google.android.exoplayer2.Player.EventListener): void;
					public getCurrentPosition(): number;
					public getCurrentTrackSelections(): com.google.android.exoplayer2.trackselection.TrackSelectionArray;
					public setMediaItem(param0: com.google.android.exoplayer2.MediaItem): void;
					public getNextWindowIndex(): number;
					public getCurrentMediaItem(): com.google.android.exoplayer2.MediaItem;
					public getMediaItemCount(): number;
					public getVideoComponent(): com.google.android.exoplayer2.Player.VideoComponent;
					public getTotalBufferedDuration(): number;
					public isCurrentWindowLive(): boolean;
					public isPlayingAd(): boolean;
					public getBufferedPercentage(): number;
					public seekToDefaultPosition(): void;
					/** @deprecated */
					public stop(param0: boolean): void;
					public addMediaItem(param0: number, param1: com.google.android.exoplayer2.MediaItem): void;
					public getBufferedPosition(): number;
					public getRendererType(param0: number): number;
					public setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
					public getCurrentManifest(): any;
					public getCurrentTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
					public getContentDuration(): number;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export abstract class BaseRenderer implements com.google.android.exoplayer2.Renderer, com.google.android.exoplayer2.RendererCapabilities {
					public static class: java.lang.Class<com.google.android.exoplayer2.BaseRenderer>;
					public isReady(): boolean;
					public onStopped(): void;
					public render(param0: number, param1: number): void;
					public static getTunnelingSupport(param0: number): number;
					public getStreamFormats(): androidNative.Array<com.google.android.exoplayer2.Format>;
					public getFormatHolder(): com.google.android.exoplayer2.FormatHolder;
					public getStream(): com.google.android.exoplayer2.source.SampleStream;
					public supportsFormat(param0: com.google.android.exoplayer2.Format): number;
					public static create(param0: number): number;
					public disable(): void;
					public getIndex(): number;
					public setCurrentStreamFinal(): void;
					public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
					public setIndex(param0: number): void;
					public replaceStream(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: com.google.android.exoplayer2.source.SampleStream, param2: number, param3: number): void;
					public hasReadStreamToEnd(): boolean;
					public isCurrentStreamFinal(): boolean;
					public supportsMixedMimeTypeAdaptation(): number;
					public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
					public stop(): void;
					public static getFormatSupport(param0: number): number;
					public onStarted(): void;
					public getState(): number;
					public getLastResetPositionUs(): number;
					public createRendererException(param0: java.lang.Throwable, param1: com.google.android.exoplayer2.Format, param2: boolean): com.google.android.exoplayer2.ExoPlaybackException;
					public getConfiguration(): com.google.android.exoplayer2.RendererConfiguration;
					public isSourceReady(): boolean;
					public static create(param0: number, param1: number, param2: number): number;
					public start(): void;
					public onReset(): void;
					public onDisabled(): void;
					public enable(param0: com.google.android.exoplayer2.RendererConfiguration, param1: androidNative.Array<com.google.android.exoplayer2.Format>, param2: com.google.android.exoplayer2.source.SampleStream, param3: number, param4: boolean, param5: boolean, param6: number, param7: number): void;
					public onEnabled(param0: boolean, param1: boolean): void;
					public resetPosition(param0: number): void;
					public createRendererException(param0: java.lang.Throwable, param1: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.ExoPlaybackException;
					public setPlaybackSpeed(param0: number, param1: number): void;
					public onStreamChanged(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: number, param2: number): void;
					public getReadingPositionUs(): number;
					public readSource(param0: com.google.android.exoplayer2.FormatHolder, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param2: boolean): number;
					public constructor(param0: number);
					public getTrackType(): number;
					public reset(): void;
					public maybeThrowStreamError(): void;
					public isEnded(): boolean;
					public static getAdaptiveSupport(param0: number): number;
					public handleMessage(param0: number, param1: any): void;
					public getName(): string;
					public skipSource(param0: number): number;
					public onPositionReset(param0: number, param1: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class BuildConfig {
					public static class: java.lang.Class<com.google.android.exoplayer2.BuildConfig>;
					public static DEBUG: boolean;
					public static LIBRARY_PACKAGE_NAME: string;
					public static APPLICATION_ID: string;
					public static BUILD_TYPE: string;
					public static FLAVOR: string;
					public static VERSION_CODE: number;
					public static VERSION_NAME: string;
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class C {
					public static class: java.lang.Class<com.google.android.exoplayer2.C>;
					public static TIME_END_OF_SOURCE: number;
					public static TIME_UNSET: number;
					public static INDEX_UNSET: number;
					public static POSITION_UNSET: number;
					public static RATE_UNSET: number;
					public static LENGTH_UNSET: number;
					public static PERCENTAGE_UNSET: number;
					public static MILLIS_PER_SECOND: number;
					public static MICROS_PER_SECOND: number;
					public static NANOS_PER_SECOND: number;
					public static BITS_PER_BYTE: number;
					public static BYTES_PER_FLOAT: number;
					public static ASCII_NAME: string;
					public static UTF8_NAME: string;
					public static ISO88591_NAME: string;
					public static UTF16_NAME: string;
					public static UTF16LE_NAME: string;
					public static SERIF_NAME: string;
					public static SANS_SERIF_NAME: string;
					public static CRYPTO_MODE_UNENCRYPTED: number;
					public static CRYPTO_MODE_AES_CTR: number;
					public static CRYPTO_MODE_AES_CBC: number;
					public static AUDIO_SESSION_ID_UNSET: number;
					public static ENCODING_INVALID: number;
					public static ENCODING_PCM_8BIT: number;
					public static ENCODING_PCM_16BIT: number;
					public static ENCODING_PCM_16BIT_BIG_ENDIAN: number;
					public static ENCODING_PCM_24BIT: number;
					public static ENCODING_PCM_32BIT: number;
					public static ENCODING_PCM_FLOAT: number;
					public static ENCODING_MP3: number;
					public static ENCODING_AAC_LC: number;
					public static ENCODING_AAC_HE_V1: number;
					public static ENCODING_AAC_HE_V2: number;
					public static ENCODING_AAC_XHE: number;
					public static ENCODING_AAC_ELD: number;
					public static ENCODING_AAC_ER_BSAC: number;
					public static ENCODING_AC3: number;
					public static ENCODING_E_AC3: number;
					public static ENCODING_E_AC3_JOC: number;
					public static ENCODING_AC4: number;
					public static ENCODING_DTS: number;
					public static ENCODING_DTS_HD: number;
					public static ENCODING_DOLBY_TRUEHD: number;
					public static STREAM_TYPE_ALARM: number;
					public static STREAM_TYPE_DTMF: number;
					public static STREAM_TYPE_MUSIC: number;
					public static STREAM_TYPE_NOTIFICATION: number;
					public static STREAM_TYPE_RING: number;
					public static STREAM_TYPE_SYSTEM: number;
					public static STREAM_TYPE_VOICE_CALL: number;
					public static STREAM_TYPE_DEFAULT: number;
					public static CONTENT_TYPE_MOVIE: number;
					public static CONTENT_TYPE_MUSIC: number;
					public static CONTENT_TYPE_SONIFICATION: number;
					public static CONTENT_TYPE_SPEECH: number;
					public static CONTENT_TYPE_UNKNOWN: number;
					public static FLAG_AUDIBILITY_ENFORCED: number;
					public static USAGE_ALARM: number;
					public static USAGE_ASSISTANCE_ACCESSIBILITY: number;
					public static USAGE_ASSISTANCE_NAVIGATION_GUIDANCE: number;
					public static USAGE_ASSISTANCE_SONIFICATION: number;
					public static USAGE_ASSISTANT: number;
					public static USAGE_GAME: number;
					public static USAGE_MEDIA: number;
					public static USAGE_NOTIFICATION: number;
					public static USAGE_NOTIFICATION_COMMUNICATION_DELAYED: number;
					public static USAGE_NOTIFICATION_COMMUNICATION_INSTANT: number;
					public static USAGE_NOTIFICATION_COMMUNICATION_REQUEST: number;
					public static USAGE_NOTIFICATION_EVENT: number;
					public static USAGE_NOTIFICATION_RINGTONE: number;
					public static USAGE_UNKNOWN: number;
					public static USAGE_VOICE_COMMUNICATION: number;
					public static USAGE_VOICE_COMMUNICATION_SIGNALLING: number;
					public static ALLOW_CAPTURE_BY_ALL: number;
					public static ALLOW_CAPTURE_BY_NONE: number;
					public static ALLOW_CAPTURE_BY_SYSTEM: number;
					public static AUDIOFOCUS_NONE: number;
					public static AUDIOFOCUS_GAIN: number;
					public static AUDIOFOCUS_GAIN_TRANSIENT: number;
					public static AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK: number;
					public static AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE: number;
					public static BUFFER_FLAG_KEY_FRAME: number;
					public static BUFFER_FLAG_END_OF_STREAM: number;
					public static BUFFER_FLAG_HAS_SUPPLEMENTAL_DATA: number;
					public static BUFFER_FLAG_LAST_SAMPLE: number;
					public static BUFFER_FLAG_ENCRYPTED: number;
					public static BUFFER_FLAG_DECODE_ONLY: number;
					public static VIDEO_OUTPUT_MODE_NONE: number;
					public static VIDEO_OUTPUT_MODE_YUV: number;
					public static VIDEO_OUTPUT_MODE_SURFACE_YUV: number;
					public static VIDEO_SCALING_MODE_SCALE_TO_FIT: number;
					public static VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING: number;
					public static VIDEO_SCALING_MODE_DEFAULT: number;
					public static SELECTION_FLAG_DEFAULT: number;
					public static SELECTION_FLAG_FORCED: number;
					public static SELECTION_FLAG_AUTOSELECT: number;
					public static LANGUAGE_UNDETERMINED: string;
					public static TYPE_DASH: number;
					public static TYPE_SS: number;
					public static TYPE_HLS: number;
					public static TYPE_OTHER: number;
					public static RESULT_END_OF_INPUT: number;
					public static RESULT_MAX_LENGTH_EXCEEDED: number;
					public static RESULT_NOTHING_READ: number;
					public static RESULT_BUFFER_READ: number;
					public static RESULT_FORMAT_READ: number;
					public static DATA_TYPE_UNKNOWN: number;
					public static DATA_TYPE_MEDIA: number;
					public static DATA_TYPE_MEDIA_INITIALIZATION: number;
					public static DATA_TYPE_DRM: number;
					public static DATA_TYPE_MANIFEST: number;
					public static DATA_TYPE_TIME_SYNCHRONIZATION: number;
					public static DATA_TYPE_AD: number;
					public static DATA_TYPE_MEDIA_PROGRESSIVE_LIVE: number;
					public static DATA_TYPE_CUSTOM_BASE: number;
					public static TRACK_TYPE_UNKNOWN: number;
					public static TRACK_TYPE_DEFAULT: number;
					public static TRACK_TYPE_AUDIO: number;
					public static TRACK_TYPE_VIDEO: number;
					public static TRACK_TYPE_TEXT: number;
					public static TRACK_TYPE_IMAGE: number;
					public static TRACK_TYPE_METADATA: number;
					public static TRACK_TYPE_CAMERA_MOTION: number;
					public static TRACK_TYPE_NONE: number;
					public static TRACK_TYPE_CUSTOM_BASE: number;
					public static SELECTION_REASON_UNKNOWN: number;
					public static SELECTION_REASON_INITIAL: number;
					public static SELECTION_REASON_MANUAL: number;
					public static SELECTION_REASON_ADAPTIVE: number;
					public static SELECTION_REASON_TRICK_PLAY: number;
					public static SELECTION_REASON_CUSTOM_BASE: number;
					public static DEFAULT_BUFFER_SEGMENT_SIZE: number;
					public static CENC_TYPE_cenc: string;
					public static CENC_TYPE_cbc1: string;
					public static CENC_TYPE_cens: string;
					public static CENC_TYPE_cbcs: string;
					public static UUID_NIL: java.util.UUID;
					public static COMMON_PSSH_UUID: java.util.UUID;
					public static CLEARKEY_UUID: java.util.UUID;
					public static WIDEVINE_UUID: java.util.UUID;
					public static PLAYREADY_UUID: java.util.UUID;
					public static MSG_SET_SURFACE: number;
					public static MSG_SET_VOLUME: number;
					public static MSG_SET_AUDIO_ATTRIBUTES: number;
					public static MSG_SET_SCALING_MODE: number;
					public static MSG_SET_AUX_EFFECT_INFO: number;
					public static MSG_SET_VIDEO_FRAME_METADATA_LISTENER: number;
					public static MSG_SET_CAMERA_MOTION_LISTENER: number;
					public static MSG_SET_VIDEO_DECODER_OUTPUT_BUFFER_RENDERER: number;
					public static MSG_CUSTOM_BASE: number;
					public static STEREO_MODE_MONO: number;
					public static STEREO_MODE_TOP_BOTTOM: number;
					public static STEREO_MODE_LEFT_RIGHT: number;
					public static STEREO_MODE_STEREO_MESH: number;
					public static COLOR_SPACE_BT709: number;
					public static COLOR_SPACE_BT601: number;
					public static COLOR_SPACE_BT2020: number;
					public static COLOR_TRANSFER_SDR: number;
					public static COLOR_TRANSFER_ST2084: number;
					public static COLOR_TRANSFER_HLG: number;
					public static COLOR_RANGE_LIMITED: number;
					public static COLOR_RANGE_FULL: number;
					public static PROJECTION_RECTANGULAR: number;
					public static PROJECTION_EQUIRECTANGULAR: number;
					public static PROJECTION_CUBEMAP: number;
					public static PROJECTION_MESH: number;
					public static PRIORITY_PLAYBACK: number;
					public static PRIORITY_DOWNLOAD: number;
					public static NETWORK_TYPE_UNKNOWN: number;
					public static NETWORK_TYPE_OFFLINE: number;
					public static NETWORK_TYPE_WIFI: number;
					public static NETWORK_TYPE_2G: number;
					public static NETWORK_TYPE_3G: number;
					public static NETWORK_TYPE_4G: number;
					public static NETWORK_TYPE_5G: number;
					public static NETWORK_TYPE_CELLULAR_UNKNOWN: number;
					public static NETWORK_TYPE_ETHERNET: number;
					public static NETWORK_TYPE_OTHER: number;
					public static WAKE_MODE_NONE: number;
					public static WAKE_MODE_LOCAL: number;
					public static WAKE_MODE_NETWORK: number;
					public static ROLE_FLAG_MAIN: number;
					public static ROLE_FLAG_ALTERNATE: number;
					public static ROLE_FLAG_SUPPLEMENTARY: number;
					public static ROLE_FLAG_COMMENTARY: number;
					public static ROLE_FLAG_DUB: number;
					public static ROLE_FLAG_EMERGENCY: number;
					public static ROLE_FLAG_CAPTION: number;
					public static ROLE_FLAG_SUBTITLE: number;
					public static ROLE_FLAG_SIGN: number;
					public static ROLE_FLAG_DESCRIBES_VIDEO: number;
					public static ROLE_FLAG_DESCRIBES_MUSIC_AND_SOUND: number;
					public static ROLE_FLAG_ENHANCED_DIALOG_INTELLIGIBILITY: number;
					public static ROLE_FLAG_TRANSCRIBES_DIALOG: number;
					public static ROLE_FLAG_EASY_TO_READ: number;
					public static ROLE_FLAG_TRICK_PLAY: number;
					public static FORMAT_HANDLED: number;
					public static FORMAT_EXCEEDS_CAPABILITIES: number;
					public static FORMAT_UNSUPPORTED_DRM: number;
					public static FORMAT_UNSUPPORTED_SUBTYPE: number;
					public static FORMAT_UNSUPPORTED_TYPE: number;
					public static getFormatSupportString(param0: number): string;
					public static usToMs(param0: number): number;
					public static msToUs(param0: number): number;
					public static generateAudioSessionIdV21(param0: globalAndroid.content.Context): number;
				}
				export module C {
					export class AudioAllowedCapturePolicy {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.AudioAllowedCapturePolicy>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$AudioAllowedCapturePolicy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class AudioContentType {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.AudioContentType>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$AudioContentType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class AudioFlags {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.AudioFlags>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$AudioFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class AudioFocusGain {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.AudioFocusGain>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$AudioFocusGain interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class AudioUsage {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.AudioUsage>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$AudioUsage interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class BufferFlags {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.BufferFlags>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$BufferFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class ColorRange {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.ColorRange>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$ColorRange interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class ColorSpace {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.ColorSpace>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$ColorSpace interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class ColorTransfer {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.ColorTransfer>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$ColorTransfer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class ContentType {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.ContentType>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$ContentType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class CryptoMode {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.CryptoMode>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$CryptoMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class Encoding {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.Encoding>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$Encoding interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class FormatSupport {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.FormatSupport>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$FormatSupport interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class NetworkType {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.NetworkType>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$NetworkType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class PcmEncoding {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.PcmEncoding>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$PcmEncoding interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class Projection {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.Projection>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$Projection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class RoleFlags {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.RoleFlags>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$RoleFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class SelectionFlags {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.SelectionFlags>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$SelectionFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class StereoMode {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.StereoMode>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$StereoMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class StreamType {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.StreamType>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$StreamType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class VideoOutputMode {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.VideoOutputMode>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$VideoOutputMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class VideoScalingMode {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.VideoScalingMode>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$VideoScalingMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class WakeMode {
						public static class: java.lang.Class<com.google.android.exoplayer2.C.WakeMode>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.C$WakeMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class ControlDispatcher {
					public static class: java.lang.Class<com.google.android.exoplayer2.ControlDispatcher>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.ControlDispatcher interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						dispatchPrepare(param0: com.google.android.exoplayer2.Player): boolean;
						dispatchSetPlayWhenReady(param0: com.google.android.exoplayer2.Player, param1: boolean): boolean;
						dispatchSeekTo(param0: com.google.android.exoplayer2.Player, param1: number, param2: number): boolean;
						dispatchPrevious(param0: com.google.android.exoplayer2.Player): boolean;
						dispatchNext(param0: com.google.android.exoplayer2.Player): boolean;
						dispatchRewind(param0: com.google.android.exoplayer2.Player): boolean;
						dispatchFastForward(param0: com.google.android.exoplayer2.Player): boolean;
						dispatchSetRepeatMode(param0: com.google.android.exoplayer2.Player, param1: number): boolean;
						dispatchSetShuffleModeEnabled(param0: com.google.android.exoplayer2.Player, param1: boolean): boolean;
						dispatchStop(param0: com.google.android.exoplayer2.Player, param1: boolean): boolean;
						dispatchSetPlaybackParameters(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.PlaybackParameters): boolean;
						isRewindEnabled(): boolean;
						isFastForwardEnabled(): boolean;
					});
					public constructor();
					public isFastForwardEnabled(): boolean;
					public dispatchSeekTo(param0: com.google.android.exoplayer2.Player, param1: number, param2: number): boolean;
					public dispatchPrevious(param0: com.google.android.exoplayer2.Player): boolean;
					public dispatchSetPlaybackParameters(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.PlaybackParameters): boolean;
					public dispatchFastForward(param0: com.google.android.exoplayer2.Player): boolean;
					public dispatchStop(param0: com.google.android.exoplayer2.Player, param1: boolean): boolean;
					public dispatchPrepare(param0: com.google.android.exoplayer2.Player): boolean;
					public dispatchNext(param0: com.google.android.exoplayer2.Player): boolean;
					public dispatchSetPlayWhenReady(param0: com.google.android.exoplayer2.Player, param1: boolean): boolean;
					public dispatchSetRepeatMode(param0: com.google.android.exoplayer2.Player, param1: number): boolean;
					public dispatchSetShuffleModeEnabled(param0: com.google.android.exoplayer2.Player, param1: boolean): boolean;
					public dispatchRewind(param0: com.google.android.exoplayer2.Player): boolean;
					public isRewindEnabled(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class DefaultControlDispatcher extends com.google.android.exoplayer2.ControlDispatcher {
					public static class: java.lang.Class<com.google.android.exoplayer2.DefaultControlDispatcher>;
					public static DEFAULT_FAST_FORWARD_MS: number;
					public static DEFAULT_REWIND_MS: number;
					public isFastForwardEnabled(): boolean;
					/** @deprecated */
					public setRewindIncrementMs(param0: number): void;
					public dispatchSeekTo(param0: com.google.android.exoplayer2.Player, param1: number, param2: number): boolean;
					public dispatchPrevious(param0: com.google.android.exoplayer2.Player): boolean;
					public getRewindIncrementMs(): number;
					public dispatchSetPlaybackParameters(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.PlaybackParameters): boolean;
					public dispatchFastForward(param0: com.google.android.exoplayer2.Player): boolean;
					public dispatchStop(param0: com.google.android.exoplayer2.Player, param1: boolean): boolean;
					public dispatchPrepare(param0: com.google.android.exoplayer2.Player): boolean;
					public dispatchNext(param0: com.google.android.exoplayer2.Player): boolean;
					public getFastForwardIncrementMs(): number;
					public dispatchSetPlayWhenReady(param0: com.google.android.exoplayer2.Player, param1: boolean): boolean;
					public constructor();
					public dispatchSetRepeatMode(param0: com.google.android.exoplayer2.Player, param1: number): boolean;
					public dispatchSetShuffleModeEnabled(param0: com.google.android.exoplayer2.Player, param1: boolean): boolean;
					public dispatchRewind(param0: com.google.android.exoplayer2.Player): boolean;
					/** @deprecated */
					public setFastForwardIncrementMs(param0: number): void;
					public constructor(param0: number, param1: number);
					public isRewindEnabled(): boolean;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class DefaultLivePlaybackSpeedControl extends com.google.android.exoplayer2.LivePlaybackSpeedControl {
					public static class: java.lang.Class<com.google.android.exoplayer2.DefaultLivePlaybackSpeedControl>;
					public static DEFAULT_FALLBACK_MIN_PLAYBACK_SPEED: number;
					public static DEFAULT_FALLBACK_MAX_PLAYBACK_SPEED: number;
					public static DEFAULT_MIN_UPDATE_INTERVAL_MS: number;
					public static DEFAULT_PROPORTIONAL_CONTROL_FACTOR: number;
					public static DEFAULT_TARGET_LIVE_OFFSET_INCREMENT_ON_REBUFFER_MS: number;
					public static DEFAULT_MIN_POSSIBLE_LIVE_OFFSET_SMOOTHING_FACTOR: number;
					public static DEFAULT_MAX_LIVE_OFFSET_ERROR_MS_FOR_UNIT_SPEED: number;
					public setTargetLiveOffsetOverrideUs(param0: number): void;
					public notifyRebuffer(): void;
					public getAdjustedPlaybackSpeed(param0: number, param1: number): number;
					public getTargetLiveOffsetUs(): number;
					public setLiveConfiguration(param0: com.google.android.exoplayer2.MediaItem.LiveConfiguration): void;
				}
				export module DefaultLivePlaybackSpeedControl {
					export class Builder {
						public static class: java.lang.Class<com.google.android.exoplayer2.DefaultLivePlaybackSpeedControl.Builder>;
						public setMinUpdateIntervalMs(param0: number): com.google.android.exoplayer2.DefaultLivePlaybackSpeedControl.Builder;
						public setFallbackMinPlaybackSpeed(param0: number): com.google.android.exoplayer2.DefaultLivePlaybackSpeedControl.Builder;
						public constructor();
						public setProportionalControlFactor(param0: number): com.google.android.exoplayer2.DefaultLivePlaybackSpeedControl.Builder;
						public setFallbackMaxPlaybackSpeed(param0: number): com.google.android.exoplayer2.DefaultLivePlaybackSpeedControl.Builder;
						public setMaxLiveOffsetErrorMsForUnitSpeed(param0: number): com.google.android.exoplayer2.DefaultLivePlaybackSpeedControl.Builder;
						public build(): com.google.android.exoplayer2.DefaultLivePlaybackSpeedControl;
						public setMinPossibleLiveOffsetSmoothingFactor(param0: number): com.google.android.exoplayer2.DefaultLivePlaybackSpeedControl.Builder;
						public setTargetLiveOffsetIncrementOnRebufferMs(param0: number): com.google.android.exoplayer2.DefaultLivePlaybackSpeedControl.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class DefaultLoadControl extends com.google.android.exoplayer2.LoadControl {
					public static class: java.lang.Class<com.google.android.exoplayer2.DefaultLoadControl>;
					public static DEFAULT_MIN_BUFFER_MS: number;
					public static DEFAULT_MAX_BUFFER_MS: number;
					public static DEFAULT_BUFFER_FOR_PLAYBACK_MS: number;
					public static DEFAULT_BUFFER_FOR_PLAYBACK_AFTER_REBUFFER_MS: number;
					public static DEFAULT_TARGET_BUFFER_BYTES: number;
					public static DEFAULT_PRIORITIZE_TIME_OVER_SIZE_THRESHOLDS: boolean;
					public static DEFAULT_BACK_BUFFER_DURATION_MS: number;
					public static DEFAULT_RETAIN_BACK_BUFFER_FROM_KEYFRAME: boolean;
					public static DEFAULT_VIDEO_BUFFER_SIZE: number;
					public static DEFAULT_AUDIO_BUFFER_SIZE: number;
					public static DEFAULT_TEXT_BUFFER_SIZE: number;
					public static DEFAULT_METADATA_BUFFER_SIZE: number;
					public static DEFAULT_CAMERA_MOTION_BUFFER_SIZE: number;
					public static DEFAULT_MUXED_BUFFER_SIZE: number;
					public static DEFAULT_MIN_BUFFER_SIZE: number;
					public calculateTargetBufferBytes(param0: androidNative.Array<com.google.android.exoplayer2.Renderer>, param1: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): number;
					public onPrepared(): void;
					public onStopped(): void;
					public getBackBufferDurationUs(): number;
					public constructor();
					public retainBackBufferFromKeyframe(): boolean;
					public shouldStartPlayback(param0: number, param1: number, param2: boolean, param3: number): boolean;
					public onTracksSelected(param0: androidNative.Array<com.google.android.exoplayer2.Renderer>, param1: com.google.android.exoplayer2.source.TrackGroupArray, param2: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): void;
					public shouldContinueLoading(param0: number, param1: number, param2: number): boolean;
					public constructor(param0: com.google.android.exoplayer2.upstream.DefaultAllocator, param1: number, param2: number, param3: number, param4: number, param5: number, param6: boolean, param7: number, param8: boolean);
					public onReleased(): void;
					public getAllocator(): com.google.android.exoplayer2.upstream.Allocator;
				}
				export module DefaultLoadControl {
					export class Builder {
						public static class: java.lang.Class<com.google.android.exoplayer2.DefaultLoadControl.Builder>;
						public constructor();
						/** @deprecated */
						public createDefaultLoadControl(): com.google.android.exoplayer2.DefaultLoadControl;
						public setAllocator(param0: com.google.android.exoplayer2.upstream.DefaultAllocator): com.google.android.exoplayer2.DefaultLoadControl.Builder;
						public setBackBuffer(param0: number, param1: boolean): com.google.android.exoplayer2.DefaultLoadControl.Builder;
						public build(): com.google.android.exoplayer2.DefaultLoadControl;
						public setBufferDurationsMs(param0: number, param1: number, param2: number, param3: number): com.google.android.exoplayer2.DefaultLoadControl.Builder;
						public setTargetBufferBytes(param0: number): com.google.android.exoplayer2.DefaultLoadControl.Builder;
						public setPrioritizeTimeOverSizeThresholds(param0: boolean): com.google.android.exoplayer2.DefaultLoadControl.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class DefaultMediaClock extends com.google.android.exoplayer2.util.MediaClock {
					public static class: java.lang.Class<com.google.android.exoplayer2.DefaultMediaClock>;
					public getPositionUs(): number;
					public constructor(param0: com.google.android.exoplayer2.DefaultMediaClock.PlaybackParametersListener, param1: com.google.android.exoplayer2.util.Clock);
					public onRendererEnabled(param0: com.google.android.exoplayer2.Renderer): void;
					public onRendererDisabled(param0: com.google.android.exoplayer2.Renderer): void;
					public syncAndGetPositionUs(param0: boolean): number;
					public resetPosition(param0: number): void;
					public stop(): void;
					public start(): void;
					public setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
					public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
				}
				export module DefaultMediaClock {
					export class PlaybackParametersListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.DefaultMediaClock.PlaybackParametersListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.DefaultMediaClock$PlaybackParametersListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPlaybackParametersChanged(param0: com.google.android.exoplayer2.PlaybackParameters): void;
						});
						public constructor();
						public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.PlaybackParameters): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class DefaultRenderersFactory extends com.google.android.exoplayer2.RenderersFactory {
					public static class: java.lang.Class<com.google.android.exoplayer2.DefaultRenderersFactory>;
					public static DEFAULT_ALLOWED_VIDEO_JOINING_TIME_MS: number;
					public static EXTENSION_RENDERER_MODE_OFF: number;
					public static EXTENSION_RENDERER_MODE_ON: number;
					public static EXTENSION_RENDERER_MODE_PREFER: number;
					public static MAX_DROPPED_VIDEO_FRAME_COUNT_TO_NOTIFY: number;
					public buildAudioRenderers(param0: globalAndroid.content.Context, param1: number, param2: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param3: boolean, param4: com.google.android.exoplayer2.audio.AudioSink, param5: globalAndroid.os.Handler, param6: com.google.android.exoplayer2.audio.AudioRendererEventListener, param7: java.util.ArrayList<com.google.android.exoplayer2.Renderer>): void;
					/** @deprecated */
					public constructor(param0: globalAndroid.content.Context, param1: number);
					public buildAudioSink(param0: globalAndroid.content.Context, param1: boolean, param2: boolean, param3: boolean): com.google.android.exoplayer2.audio.AudioSink;
					public experimentalSetAsynchronousBufferQueueingEnabled(param0: boolean): com.google.android.exoplayer2.DefaultRenderersFactory;
					public setEnableAudioTrackPlaybackParams(param0: boolean): com.google.android.exoplayer2.DefaultRenderersFactory;
					public setEnableDecoderFallback(param0: boolean): com.google.android.exoplayer2.DefaultRenderersFactory;
					public setEnableAudioOffload(param0: boolean): com.google.android.exoplayer2.DefaultRenderersFactory;
					public constructor(param0: globalAndroid.content.Context);
					/** @deprecated */
					public constructor(param0: globalAndroid.content.Context, param1: number, param2: number);
					public setMediaCodecSelector(param0: com.google.android.exoplayer2.mediacodec.MediaCodecSelector): com.google.android.exoplayer2.DefaultRenderersFactory;
					public createRenderers(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.video.VideoRendererEventListener, param2: com.google.android.exoplayer2.audio.AudioRendererEventListener, param3: com.google.android.exoplayer2.text.TextOutput, param4: com.google.android.exoplayer2.metadata.MetadataOutput): androidNative.Array<com.google.android.exoplayer2.Renderer>;
					public experimentalSetForceAsyncQueueingSynchronizationWorkaround(param0: boolean): com.google.android.exoplayer2.DefaultRenderersFactory;
					public buildTextRenderers(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.text.TextOutput, param2: globalAndroid.os.Looper, param3: number, param4: java.util.ArrayList<com.google.android.exoplayer2.Renderer>): void;
					public buildMiscellaneousRenderers(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: number, param3: java.util.ArrayList<com.google.android.exoplayer2.Renderer>): void;
					public setEnableAudioFloatOutput(param0: boolean): com.google.android.exoplayer2.DefaultRenderersFactory;
					public setExtensionRendererMode(param0: number): com.google.android.exoplayer2.DefaultRenderersFactory;
					public experimentalSetSynchronizeCodecInteractionsWithQueueingEnabled(param0: boolean): com.google.android.exoplayer2.DefaultRenderersFactory;
					public setAllowedVideoJoiningTimeMs(param0: number): com.google.android.exoplayer2.DefaultRenderersFactory;
					public buildVideoRenderers(param0: globalAndroid.content.Context, param1: number, param2: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param3: boolean, param4: globalAndroid.os.Handler, param5: com.google.android.exoplayer2.video.VideoRendererEventListener, param6: number, param7: java.util.ArrayList<com.google.android.exoplayer2.Renderer>): void;
					public buildCameraMotionRenderers(param0: globalAndroid.content.Context, param1: number, param2: java.util.ArrayList<com.google.android.exoplayer2.Renderer>): void;
					public buildMetadataRenderers(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.metadata.MetadataOutput, param2: globalAndroid.os.Looper, param3: number, param4: java.util.ArrayList<com.google.android.exoplayer2.Renderer>): void;
				}
				export module DefaultRenderersFactory {
					export class ExtensionRendererMode {
						public static class: java.lang.Class<com.google.android.exoplayer2.DefaultRenderersFactory.ExtensionRendererMode>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.DefaultRenderersFactory$ExtensionRendererMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class ExoPlaybackException {
					public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlaybackException>;
					public static TYPE_SOURCE: number;
					public static TYPE_RENDERER: number;
					public static TYPE_UNEXPECTED: number;
					public static TYPE_REMOTE: number;
					public type: number;
					public rendererName: string;
					public rendererIndex: number;
					public rendererFormat: com.google.android.exoplayer2.Format;
					public rendererFormatSupport: number;
					public timestampMs: number;
					public mediaPeriodId: com.google.android.exoplayer2.source.MediaPeriodId;
					public static createForRenderer(param0: java.lang.Exception): com.google.android.exoplayer2.ExoPlaybackException;
					public static createForRenderer(param0: java.lang.Throwable, param1: string, param2: number, param3: com.google.android.exoplayer2.Format, param4: number): com.google.android.exoplayer2.ExoPlaybackException;
					public static createForRemote(param0: string): com.google.android.exoplayer2.ExoPlaybackException;
					public getSourceException(): java.io.IOException;
					public static createForUnexpected(param0: java.lang.RuntimeException): com.google.android.exoplayer2.ExoPlaybackException;
					public getRendererException(): java.lang.Exception;
					public getUnexpectedException(): java.lang.RuntimeException;
					public static createForSource(param0: java.io.IOException): com.google.android.exoplayer2.ExoPlaybackException;
					public static createForRenderer(param0: java.lang.Throwable, param1: string, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: boolean): com.google.android.exoplayer2.ExoPlaybackException;
				}
				export module ExoPlaybackException {
					export class Type {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlaybackException.Type>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.ExoPlaybackException$Type interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class ExoPlayer extends com.google.android.exoplayer2.Player {
					public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayer>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.ExoPlayer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getTrackSelector(): com.google.android.exoplayer2.trackselection.TrackSelector;
						getPlaybackLooper(): globalAndroid.os.Looper;
						getClock(): com.google.android.exoplayer2.util.Clock;
						retry(): void;
						prepare(param0: com.google.android.exoplayer2.source.MediaSource): void;
						prepare(param0: com.google.android.exoplayer2.source.MediaSource, param1: boolean, param2: boolean): void;
						setMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
						setMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>, param1: boolean): void;
						setMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>, param1: number, param2: number): void;
						setMediaSource(param0: com.google.android.exoplayer2.source.MediaSource): void;
						setMediaSource(param0: com.google.android.exoplayer2.source.MediaSource, param1: number): void;
						setMediaSource(param0: com.google.android.exoplayer2.source.MediaSource, param1: boolean): void;
						addMediaSource(param0: com.google.android.exoplayer2.source.MediaSource): void;
						addMediaSource(param0: number, param1: com.google.android.exoplayer2.source.MediaSource): void;
						addMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
						addMediaSources(param0: number, param1: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
						setShuffleOrder(param0: com.google.android.exoplayer2.source.ShuffleOrder): void;
						createMessage(param0: com.google.android.exoplayer2.PlayerMessage.Target): com.google.android.exoplayer2.PlayerMessage;
						setSeekParameters(param0: com.google.android.exoplayer2.SeekParameters): void;
						getSeekParameters(): com.google.android.exoplayer2.SeekParameters;
						setForegroundMode(param0: boolean): void;
						setPauseAtEndOfMediaItems(param0: boolean): void;
						getPauseAtEndOfMediaItems(): boolean;
						experimentalSetOffloadSchedulingEnabled(param0: boolean): void;
						experimentalIsSleepingForOffload(): boolean;
						getAudioComponent(): com.google.android.exoplayer2.Player.AudioComponent;
						getVideoComponent(): com.google.android.exoplayer2.Player.VideoComponent;
						getTextComponent(): com.google.android.exoplayer2.Player.TextComponent;
						getMetadataComponent(): com.google.android.exoplayer2.Player.MetadataComponent;
						getDeviceComponent(): com.google.android.exoplayer2.Player.DeviceComponent;
						getApplicationLooper(): globalAndroid.os.Looper;
						addListener(param0: com.google.android.exoplayer2.Player.EventListener): void;
						removeListener(param0: com.google.android.exoplayer2.Player.EventListener): void;
						setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
						setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>, param1: boolean): void;
						setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>, param1: number, param2: number): void;
						setMediaItem(param0: com.google.android.exoplayer2.MediaItem): void;
						setMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
						setMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: boolean): void;
						addMediaItem(param0: com.google.android.exoplayer2.MediaItem): void;
						addMediaItem(param0: number, param1: com.google.android.exoplayer2.MediaItem): void;
						addMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
						addMediaItems(param0: number, param1: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
						moveMediaItem(param0: number, param1: number): void;
						moveMediaItems(param0: number, param1: number, param2: number): void;
						removeMediaItem(param0: number): void;
						removeMediaItems(param0: number, param1: number): void;
						clearMediaItems(): void;
						prepare(): void;
						getPlaybackState(): number;
						getPlaybackSuppressionReason(): number;
						isPlaying(): boolean;
						getPlayerError(): com.google.android.exoplayer2.ExoPlaybackException;
						getPlaybackError(): com.google.android.exoplayer2.ExoPlaybackException;
						play(): void;
						pause(): void;
						setPlayWhenReady(param0: boolean): void;
						getPlayWhenReady(): boolean;
						setRepeatMode(param0: number): void;
						getRepeatMode(): number;
						setShuffleModeEnabled(param0: boolean): void;
						getShuffleModeEnabled(): boolean;
						isLoading(): boolean;
						seekToDefaultPosition(): void;
						seekToDefaultPosition(param0: number): void;
						seekTo(param0: number): void;
						seekTo(param0: number, param1: number): void;
						hasPrevious(): boolean;
						previous(): void;
						hasNext(): boolean;
						next(): void;
						setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
						getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						stop(): void;
						stop(param0: boolean): void;
						release(): void;
						getRendererCount(): number;
						getRendererType(param0: number): number;
						getCurrentTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						getCurrentTrackSelections(): com.google.android.exoplayer2.trackselection.TrackSelectionArray;
						getCurrentStaticMetadata(): java.util.List<com.google.android.exoplayer2.metadata.Metadata>;
						getCurrentManifest(): any;
						getCurrentTimeline(): com.google.android.exoplayer2.Timeline;
						getCurrentPeriodIndex(): number;
						getCurrentWindowIndex(): number;
						getNextWindowIndex(): number;
						getPreviousWindowIndex(): number;
						getCurrentTag(): any;
						getCurrentMediaItem(): com.google.android.exoplayer2.MediaItem;
						getMediaItemCount(): number;
						getMediaItemAt(param0: number): com.google.android.exoplayer2.MediaItem;
						getDuration(): number;
						getCurrentPosition(): number;
						getBufferedPosition(): number;
						getBufferedPercentage(): number;
						getTotalBufferedDuration(): number;
						isCurrentWindowDynamic(): boolean;
						isCurrentWindowLive(): boolean;
						getCurrentLiveOffset(): number;
						isCurrentWindowSeekable(): boolean;
						isPlayingAd(): boolean;
						getCurrentAdGroupIndex(): number;
						getCurrentAdIndexInAdGroup(): number;
						getContentDuration(): number;
						getContentPosition(): number;
						getContentBufferedPosition(): number;
					});
					public constructor();
					public static DISCONTINUITY_REASON_AD_INSERTION: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_USER_REQUEST: number;
					public static TIMELINE_CHANGE_REASON_PLAYLIST_CHANGED: number;
					public static EVENT_PLAYBACK_SUPPRESSION_REASON_CHANGED: number;
					public static PLAYBACK_SUPPRESSION_REASON_NONE: number;
					public static EVENT_PLAY_WHEN_READY_CHANGED: number;
					public static EVENT_POSITION_DISCONTINUITY: number;
					public static EVENT_TRACKS_CHANGED: number;
					public static EVENT_TIMELINE_CHANGED: number;
					public static EVENT_SHUFFLE_MODE_ENABLED_CHANGED: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_END_OF_MEDIA_ITEM: number;
					public static TIMELINE_CHANGE_REASON_SOURCE_UPDATE: number;
					public static EVENT_MEDIA_ITEM_TRANSITION: number;
					public static DISCONTINUITY_REASON_INTERNAL: number;
					public static EVENT_IS_LOADING_CHANGED: number;
					public static STATE_ENDED: number;
					public static EVENT_PLAYBACK_STATE_CHANGED: number;
					public static EVENT_STATIC_METADATA_CHANGED: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_REMOTE: number;
					public static STATE_BUFFERING: number;
					public static DISCONTINUITY_REASON_PERIOD_TRANSITION: number;
					public static EVENT_PLAYBACK_PARAMETERS_CHANGED: number;
					public static DEFAULT_RELEASE_TIMEOUT_MS: number;
					public static PLAYBACK_SUPPRESSION_REASON_TRANSIENT_AUDIO_FOCUS_LOSS: number;
					public static DISCONTINUITY_REASON_SEEK_ADJUSTMENT: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_AUDIO_FOCUS_LOSS: number;
					public static REPEAT_MODE_OFF: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_AUDIO_BECOMING_NOISY: number;
					public static STATE_READY: number;
					public static DISCONTINUITY_REASON_SEEK: number;
					public static EVENT_PLAYER_ERROR: number;
					public static MEDIA_ITEM_TRANSITION_REASON_REPEAT: number;
					public static MEDIA_ITEM_TRANSITION_REASON_PLAYLIST_CHANGED: number;
					public static EVENT_REPEAT_MODE_CHANGED: number;
					public static REPEAT_MODE_ALL: number;
					public static STATE_IDLE: number;
					public static REPEAT_MODE_ONE: number;
					public static EVENT_IS_PLAYING_CHANGED: number;
					public static MEDIA_ITEM_TRANSITION_REASON_SEEK: number;
					public static MEDIA_ITEM_TRANSITION_REASON_AUTO: number;
					public getPlayWhenReady(): boolean;
					public getRendererCount(): number;
					public addListener(param0: com.google.android.exoplayer2.Player.EventListener): void;
					public setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>, param1: number, param2: number): void;
					/** @deprecated */
					public getPlaybackError(): com.google.android.exoplayer2.ExoPlaybackException;
					public hasNext(): boolean;
					public seekTo(param0: number): void;
					public getContentPosition(): number;
					public createMessage(param0: com.google.android.exoplayer2.PlayerMessage.Target): com.google.android.exoplayer2.PlayerMessage;
					public pause(): void;
					public getClock(): com.google.android.exoplayer2.util.Clock;
					public getDeviceComponent(): com.google.android.exoplayer2.Player.DeviceComponent;
					public getPlaybackSuppressionReason(): number;
					public setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>, param1: boolean): void;
					public getCurrentPeriodIndex(): number;
					public setShuffleOrder(param0: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public setMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
					public prepare(): void;
					public getMetadataComponent(): com.google.android.exoplayer2.Player.MetadataComponent;
					public moveMediaItems(param0: number, param1: number, param2: number): void;
					public previous(): void;
					public getAudioComponent(): com.google.android.exoplayer2.Player.AudioComponent;
					public getPreviousWindowIndex(): number;
					public getPlayerError(): com.google.android.exoplayer2.ExoPlaybackException;
					public seekToDefaultPosition(param0: number): void;
					public getContentBufferedPosition(): number;
					public addMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public setRepeatMode(param0: number): void;
					public getPlaybackState(): number;
					public getCurrentTimeline(): com.google.android.exoplayer2.Timeline;
					public setPlayWhenReady(param0: boolean): void;
					public getRepeatMode(): number;
					public setMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public getDuration(): number;
					/** @deprecated */
					public retry(): void;
					public getCurrentStaticMetadata(): java.util.List<com.google.android.exoplayer2.metadata.Metadata>;
					/** @deprecated */
					public prepare(param0: com.google.android.exoplayer2.source.MediaSource): void;
					public addMediaSource(param0: number, param1: com.google.android.exoplayer2.source.MediaSource): void;
					public getNextWindowIndex(): number;
					public getMediaItemCount(): number;
					public experimentalSetOffloadSchedulingEnabled(param0: boolean): void;
					public getTotalBufferedDuration(): number;
					public isPlayingAd(): boolean;
					public setMediaSource(param0: com.google.android.exoplayer2.source.MediaSource, param1: boolean): void;
					public setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
					public getCurrentTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
					public getCurrentManifest(): any;
					public isCurrentWindowDynamic(): boolean;
					public addMediaItem(param0: com.google.android.exoplayer2.MediaItem): void;
					public getPauseAtEndOfMediaItems(): boolean;
					/** @deprecated */
					public getCurrentTag(): any;
					public clearMediaItems(): void;
					public moveMediaItem(param0: number, param1: number): void;
					public setMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>, param1: number, param2: number): void;
					public getCurrentAdGroupIndex(): number;
					public setMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>, param1: boolean): void;
					public next(): void;
					public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
					public removeMediaItem(param0: number): void;
					public getShuffleModeEnabled(): boolean;
					public getCurrentWindowIndex(): number;
					public getMediaItemAt(param0: number): com.google.android.exoplayer2.MediaItem;
					public setMediaSource(param0: com.google.android.exoplayer2.source.MediaSource, param1: number): void;
					public addMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public release(): void;
					public getCurrentAdIndexInAdGroup(): number;
					public isCurrentWindowSeekable(): boolean;
					public getCurrentLiveOffset(): number;
					public getSeekParameters(): com.google.android.exoplayer2.SeekParameters;
					public getTrackSelector(): com.google.android.exoplayer2.trackselection.TrackSelector;
					public setShuffleModeEnabled(param0: boolean): void;
					public stop(): void;
					public setForegroundMode(param0: boolean): void;
					public addMediaItems(param0: number, param1: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public play(): void;
					public setMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: boolean): void;
					public removeMediaItems(param0: number, param1: number): void;
					public experimentalIsSleepingForOffload(): boolean;
					public isLoading(): boolean;
					public getPlaybackLooper(): globalAndroid.os.Looper;
					public setMediaSource(param0: com.google.android.exoplayer2.source.MediaSource): void;
					public addMediaSource(param0: com.google.android.exoplayer2.source.MediaSource): void;
					/** @deprecated */
					public prepare(param0: com.google.android.exoplayer2.source.MediaSource, param1: boolean, param2: boolean): void;
					public getApplicationLooper(): globalAndroid.os.Looper;
					public getTextComponent(): com.google.android.exoplayer2.Player.TextComponent;
					public isPlaying(): boolean;
					public seekTo(param0: number, param1: number): void;
					public hasPrevious(): boolean;
					public addMediaSources(param0: number, param1: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public removeListener(param0: com.google.android.exoplayer2.Player.EventListener): void;
					public getCurrentPosition(): number;
					public getCurrentTrackSelections(): com.google.android.exoplayer2.trackselection.TrackSelectionArray;
					public setMediaItem(param0: com.google.android.exoplayer2.MediaItem): void;
					public getCurrentMediaItem(): com.google.android.exoplayer2.MediaItem;
					public setPauseAtEndOfMediaItems(param0: boolean): void;
					public getVideoComponent(): com.google.android.exoplayer2.Player.VideoComponent;
					public isCurrentWindowLive(): boolean;
					public getBufferedPercentage(): number;
					public seekToDefaultPosition(): void;
					/** @deprecated */
					public stop(param0: boolean): void;
					public addMediaItem(param0: number, param1: com.google.android.exoplayer2.MediaItem): void;
					public setSeekParameters(param0: com.google.android.exoplayer2.SeekParameters): void;
					public getBufferedPosition(): number;
					public getRendererType(param0: number): number;
					public getContentDuration(): number;
				}
				export module ExoPlayer {
					export class Builder {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayer.Builder>;
						public setAnalyticsCollector(param0: com.google.android.exoplayer2.analytics.AnalyticsCollector): com.google.android.exoplayer2.ExoPlayer.Builder;
						public constructor(param0: androidNative.Array<com.google.android.exoplayer2.Renderer>, param1: com.google.android.exoplayer2.trackselection.TrackSelector, param2: com.google.android.exoplayer2.source.MediaSourceFactory, param3: com.google.android.exoplayer2.LoadControl, param4: com.google.android.exoplayer2.upstream.BandwidthMeter);
						public setLooper(param0: globalAndroid.os.Looper): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setPauseAtEndOfMediaItems(param0: boolean): com.google.android.exoplayer2.ExoPlayer.Builder;
						public build(): com.google.android.exoplayer2.ExoPlayer;
						public setLoadControl(param0: com.google.android.exoplayer2.LoadControl): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setLivePlaybackSpeedControl(param0: com.google.android.exoplayer2.LivePlaybackSpeedControl): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setBandwidthMeter(param0: com.google.android.exoplayer2.upstream.BandwidthMeter): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setMediaSourceFactory(param0: com.google.android.exoplayer2.source.MediaSourceFactory): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setUseLazyPreparation(param0: boolean): com.google.android.exoplayer2.ExoPlayer.Builder;
						public constructor(param0: globalAndroid.content.Context, param1: androidNative.Array<com.google.android.exoplayer2.Renderer>);
						public experimentalSetForegroundModeTimeoutMs(param0: number): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setSeekParameters(param0: com.google.android.exoplayer2.SeekParameters): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setReleaseTimeoutMs(param0: number): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setClock(param0: com.google.android.exoplayer2.util.Clock): com.google.android.exoplayer2.ExoPlayer.Builder;
						public setTrackSelector(param0: com.google.android.exoplayer2.trackselection.TrackSelector): com.google.android.exoplayer2.ExoPlayer.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class ExoPlayerFactory {
					public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerFactory>;
					/** @deprecated */
					public static newSimpleInstance(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.RenderersFactory, param2: com.google.android.exoplayer2.trackselection.TrackSelector, param3: com.google.android.exoplayer2.LoadControl, param4: com.google.android.exoplayer2.upstream.BandwidthMeter, param5: com.google.android.exoplayer2.analytics.AnalyticsCollector, param6: globalAndroid.os.Looper): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.RenderersFactory, param2: com.google.android.exoplayer2.trackselection.TrackSelector, param3: com.google.android.exoplayer2.LoadControl): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.trackselection.TrackSelector, param2: com.google.android.exoplayer2.LoadControl): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.trackselection.TrackSelector, param2: com.google.android.exoplayer2.LoadControl, param3: number): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.RenderersFactory, param2: com.google.android.exoplayer2.trackselection.TrackSelector, param3: com.google.android.exoplayer2.LoadControl, param4: com.google.android.exoplayer2.analytics.AnalyticsCollector): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.RenderersFactory, param2: com.google.android.exoplayer2.trackselection.TrackSelector, param3: com.google.android.exoplayer2.LoadControl, param4: com.google.android.exoplayer2.upstream.BandwidthMeter): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newInstance(param0: globalAndroid.content.Context, param1: androidNative.Array<com.google.android.exoplayer2.Renderer>, param2: com.google.android.exoplayer2.trackselection.TrackSelector, param3: com.google.android.exoplayer2.LoadControl, param4: globalAndroid.os.Looper): com.google.android.exoplayer2.ExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.RenderersFactory, param2: com.google.android.exoplayer2.trackselection.TrackSelector, param3: com.google.android.exoplayer2.LoadControl, param4: globalAndroid.os.Looper): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.trackselection.TrackSelector): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.RenderersFactory, param2: com.google.android.exoplayer2.trackselection.TrackSelector, param3: com.google.android.exoplayer2.LoadControl, param4: com.google.android.exoplayer2.analytics.AnalyticsCollector, param5: globalAndroid.os.Looper): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newInstance(param0: globalAndroid.content.Context, param1: androidNative.Array<com.google.android.exoplayer2.Renderer>, param2: com.google.android.exoplayer2.trackselection.TrackSelector, param3: com.google.android.exoplayer2.LoadControl, param4: com.google.android.exoplayer2.upstream.BandwidthMeter, param5: globalAndroid.os.Looper): com.google.android.exoplayer2.ExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.RenderersFactory, param2: com.google.android.exoplayer2.trackselection.TrackSelector): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(param0: globalAndroid.content.Context): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newSimpleInstance(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.trackselection.TrackSelector, param2: com.google.android.exoplayer2.LoadControl, param3: number, param4: number): com.google.android.exoplayer2.SimpleExoPlayer;
					/** @deprecated */
					public static newInstance(param0: globalAndroid.content.Context, param1: androidNative.Array<com.google.android.exoplayer2.Renderer>, param2: com.google.android.exoplayer2.trackselection.TrackSelector): com.google.android.exoplayer2.ExoPlayer;
					/** @deprecated */
					public static newInstance(param0: globalAndroid.content.Context, param1: androidNative.Array<com.google.android.exoplayer2.Renderer>, param2: com.google.android.exoplayer2.trackselection.TrackSelector, param3: com.google.android.exoplayer2.LoadControl): com.google.android.exoplayer2.ExoPlayer;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class ExoPlayerImpl extends com.google.android.exoplayer2.BasePlayer implements com.google.android.exoplayer2.ExoPlayer {
					public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImpl>;
					public getPlayWhenReady(): boolean;
					public getRendererCount(): number;
					public addListener(param0: com.google.android.exoplayer2.Player.EventListener): void;
					public setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>, param1: number, param2: number): void;
					/** @deprecated */
					public getPlaybackError(): com.google.android.exoplayer2.ExoPlaybackException;
					public hasNext(): boolean;
					public seekTo(param0: number): void;
					public getContentPosition(): number;
					public constructor();
					public createMessage(param0: com.google.android.exoplayer2.PlayerMessage.Target): com.google.android.exoplayer2.PlayerMessage;
					public pause(): void;
					public getDeviceComponent(): com.google.android.exoplayer2.Player.DeviceComponent;
					public getClock(): com.google.android.exoplayer2.util.Clock;
					public getPlaybackSuppressionReason(): number;
					public setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>, param1: boolean): void;
					public getCurrentPeriodIndex(): number;
					public setShuffleOrder(param0: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public setMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
					public prepare(): void;
					public getMetadataComponent(): com.google.android.exoplayer2.Player.MetadataComponent;
					public moveMediaItems(param0: number, param1: number, param2: number): void;
					public previous(): void;
					public getAudioComponent(): com.google.android.exoplayer2.Player.AudioComponent;
					public getPreviousWindowIndex(): number;
					public getPlayerError(): com.google.android.exoplayer2.ExoPlaybackException;
					public seekToDefaultPosition(param0: number): void;
					public getContentBufferedPosition(): number;
					public setPlayWhenReady(param0: boolean, param1: number, param2: number): void;
					public addMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public setRepeatMode(param0: number): void;
					public getPlaybackState(): number;
					public getCurrentTimeline(): com.google.android.exoplayer2.Timeline;
					public setPlayWhenReady(param0: boolean): void;
					public getRepeatMode(): number;
					public setMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public getDuration(): number;
					/** @deprecated */
					public retry(): void;
					public getCurrentStaticMetadata(): java.util.List<com.google.android.exoplayer2.metadata.Metadata>;
					/** @deprecated */
					public prepare(param0: com.google.android.exoplayer2.source.MediaSource): void;
					public addMediaSource(param0: number, param1: com.google.android.exoplayer2.source.MediaSource): void;
					public getNextWindowIndex(): number;
					public getMediaItemCount(): number;
					public experimentalSetOffloadSchedulingEnabled(param0: boolean): void;
					public getTotalBufferedDuration(): number;
					public isPlayingAd(): boolean;
					public setMediaSource(param0: com.google.android.exoplayer2.source.MediaSource, param1: boolean): void;
					public setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
					public getCurrentTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
					public getCurrentManifest(): any;
					public isCurrentWindowDynamic(): boolean;
					public addMediaItem(param0: com.google.android.exoplayer2.MediaItem): void;
					public getPauseAtEndOfMediaItems(): boolean;
					/** @deprecated */
					public getCurrentTag(): any;
					public clearMediaItems(): void;
					public moveMediaItem(param0: number, param1: number): void;
					public setMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>, param1: number, param2: number): void;
					public getCurrentAdGroupIndex(): number;
					public constructor(param0: androidNative.Array<com.google.android.exoplayer2.Renderer>, param1: com.google.android.exoplayer2.trackselection.TrackSelector, param2: com.google.android.exoplayer2.source.MediaSourceFactory, param3: com.google.android.exoplayer2.LoadControl, param4: com.google.android.exoplayer2.upstream.BandwidthMeter, param5: com.google.android.exoplayer2.analytics.AnalyticsCollector, param6: boolean, param7: com.google.android.exoplayer2.SeekParameters, param8: com.google.android.exoplayer2.LivePlaybackSpeedControl, param9: number, param10: boolean, param11: com.google.android.exoplayer2.util.Clock, param12: globalAndroid.os.Looper, param13: com.google.android.exoplayer2.Player);
					public setMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>, param1: boolean): void;
					public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
					public next(): void;
					public getShuffleModeEnabled(): boolean;
					public removeMediaItem(param0: number): void;
					public getCurrentWindowIndex(): number;
					public getMediaItemAt(param0: number): com.google.android.exoplayer2.MediaItem;
					public stop(param0: boolean, param1: com.google.android.exoplayer2.ExoPlaybackException): void;
					public setMediaSource(param0: com.google.android.exoplayer2.source.MediaSource, param1: number): void;
					public addMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public stop(param0: boolean): void;
					public release(): void;
					public getCurrentAdIndexInAdGroup(): number;
					public isCurrentWindowSeekable(): boolean;
					public getCurrentLiveOffset(): number;
					public getSeekParameters(): com.google.android.exoplayer2.SeekParameters;
					public setShuffleModeEnabled(param0: boolean): void;
					public getTrackSelector(): com.google.android.exoplayer2.trackselection.TrackSelector;
					public stop(): void;
					public setForegroundMode(param0: boolean): void;
					public addMediaItems(param0: number, param1: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public play(): void;
					public removeMediaItems(param0: number, param1: number): void;
					public setMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: boolean): void;
					public experimentalIsSleepingForOffload(): boolean;
					public isLoading(): boolean;
					public getPlaybackLooper(): globalAndroid.os.Looper;
					public setMediaSource(param0: com.google.android.exoplayer2.source.MediaSource): void;
					public addMediaSource(param0: com.google.android.exoplayer2.source.MediaSource): void;
					/** @deprecated */
					public prepare(param0: com.google.android.exoplayer2.source.MediaSource, param1: boolean, param2: boolean): void;
					public getApplicationLooper(): globalAndroid.os.Looper;
					public getTextComponent(): com.google.android.exoplayer2.Player.TextComponent;
					public seekTo(param0: number, param1: number): void;
					public isPlaying(): boolean;
					public hasPrevious(): boolean;
					public addMediaSources(param0: number, param1: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public removeListener(param0: com.google.android.exoplayer2.Player.EventListener): void;
					public getCurrentPosition(): number;
					public getCurrentTrackSelections(): com.google.android.exoplayer2.trackselection.TrackSelectionArray;
					public experimentalSetForegroundModeTimeoutMs(param0: number): void;
					public setMediaItem(param0: com.google.android.exoplayer2.MediaItem): void;
					public getCurrentMediaItem(): com.google.android.exoplayer2.MediaItem;
					public getVideoComponent(): com.google.android.exoplayer2.Player.VideoComponent;
					public setPauseAtEndOfMediaItems(param0: boolean): void;
					public isCurrentWindowLive(): boolean;
					public getBufferedPercentage(): number;
					public seekToDefaultPosition(): void;
					/** @deprecated */
					public stop(param0: boolean): void;
					public addMediaItem(param0: number, param1: com.google.android.exoplayer2.MediaItem): void;
					public setSeekParameters(param0: com.google.android.exoplayer2.SeekParameters): void;
					public getBufferedPosition(): number;
					public getRendererType(param0: number): number;
					public getContentDuration(): number;
				}
				export module ExoPlayerImpl {
					export class MediaSourceHolderSnapshot extends com.google.android.exoplayer2.MediaSourceInfoHolder {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImpl.MediaSourceHolderSnapshot>;
						public constructor(param0: any, param1: com.google.android.exoplayer2.Timeline);
						public getTimeline(): com.google.android.exoplayer2.Timeline;
						public getUid(): any;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class ExoPlayerImplInternal implements com.google.android.exoplayer2.source.MediaPeriod.Callback, com.google.android.exoplayer2.trackselection.TrackSelector.InvalidationListener, com.google.android.exoplayer2.MediaSourceList.MediaSourceListInfoRefreshListener, com.google.android.exoplayer2.DefaultMediaClock.PlaybackParametersListener, com.google.android.exoplayer2.PlayerMessage.Sender {
					public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal>;
					public onContinueLoadingRequested(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
					public getPlaybackLooper(): globalAndroid.os.Looper;
					public setPauseAtEndOfWindow(param0: boolean): void;
					public removeMediaSources(param0: number, param1: number, param2: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public setShuffleOrder(param0: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public sendMessage(param0: com.google.android.exoplayer2.PlayerMessage): void;
					public onPrepared(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
					public seekTo(param0: com.google.android.exoplayer2.Timeline, param1: number, param2: number): void;
					public prepare(): void;
					public onPlaylistUpdateRequested(): void;
					public moveMediaSources(param0: number, param1: number, param2: number, param3: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public experimentalSetForegroundModeTimeoutMs(param0: number): void;
					public onTrackSelectionsInvalidated(): void;
					public setMediaSources(param0: java.util.List<com.google.android.exoplayer2.MediaSourceList.MediaSourceHolder>, param1: number, param2: number, param3: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public experimentalSetOffloadSchedulingEnabled(param0: boolean): void;
					public handleMessage(param0: globalAndroid.os.Message): boolean;
					public addMediaSources(param0: number, param1: java.util.List<com.google.android.exoplayer2.MediaSourceList.MediaSourceHolder>, param2: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public constructor(param0: androidNative.Array<com.google.android.exoplayer2.Renderer>, param1: com.google.android.exoplayer2.trackselection.TrackSelector, param2: com.google.android.exoplayer2.trackselection.TrackSelectorResult, param3: com.google.android.exoplayer2.LoadControl, param4: com.google.android.exoplayer2.upstream.BandwidthMeter, param5: number, param6: boolean, param7: com.google.android.exoplayer2.analytics.AnalyticsCollector, param8: com.google.android.exoplayer2.SeekParameters, param9: com.google.android.exoplayer2.LivePlaybackSpeedControl, param10: number, param11: boolean, param12: globalAndroid.os.Looper, param13: com.google.android.exoplayer2.util.Clock, param14: com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfoUpdateListener);
					public onContinueLoadingRequested(param0: any): void;
					public setPlayWhenReady(param0: boolean, param1: number): void;
					public setForegroundMode(param0: boolean): boolean;
					public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.PlaybackParameters): void;
					public setShuffleModeEnabled(param0: boolean): void;
					public setSeekParameters(param0: com.google.android.exoplayer2.SeekParameters): void;
					public stop(): void;
					public release(): boolean;
					public setRepeatMode(param0: number): void;
					public setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
				}
				export module ExoPlayerImplInternal {
					export class MediaSourceListUpdateMessage {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal.MediaSourceListUpdateMessage>;
					}
					export class MoveMediaItemsMessage {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal.MoveMediaItemsMessage>;
						public fromIndex: number;
						public toIndex: number;
						public newFromIndex: number;
						public shuffleOrder: com.google.android.exoplayer2.source.ShuffleOrder;
						public constructor(param0: number, param1: number, param2: number, param3: com.google.android.exoplayer2.source.ShuffleOrder);
					}
					export class PendingMessageInfo extends java.lang.Comparable<com.google.android.exoplayer2.ExoPlayerImplInternal.PendingMessageInfo> {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal.PendingMessageInfo>;
						public message: com.google.android.exoplayer2.PlayerMessage;
						public resolvedPeriodIndex: number;
						public resolvedPeriodTimeUs: number;
						public resolvedPeriodUid: any;
						public compareTo(param0: com.google.android.exoplayer2.ExoPlayerImplInternal.PendingMessageInfo): number;
						public constructor(param0: com.google.android.exoplayer2.PlayerMessage);
						public setResolvedPosition(param0: number, param1: number, param2: any): void;
					}
					export class PlaybackInfoUpdate {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfoUpdate>;
						public playbackInfo: com.google.android.exoplayer2.PlaybackInfo;
						public operationAcks: number;
						public positionDiscontinuity: boolean;
						public discontinuityReason: number;
						public hasPlayWhenReadyChangeReason: boolean;
						public playWhenReadyChangeReason: number;
						public setPlayWhenReadyChangeReason(param0: number): void;
						public incrementPendingOperationAcks(param0: number): void;
						public setPlaybackInfo(param0: com.google.android.exoplayer2.PlaybackInfo): void;
						public setPositionDiscontinuity(param0: number): void;
						public constructor(param0: com.google.android.exoplayer2.PlaybackInfo);
					}
					export class PlaybackInfoUpdateListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfoUpdateListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.ExoPlayerImplInternal$PlaybackInfoUpdateListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPlaybackInfoUpdate(param0: com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfoUpdate): void;
						});
						public constructor();
						public onPlaybackInfoUpdate(param0: com.google.android.exoplayer2.ExoPlayerImplInternal.PlaybackInfoUpdate): void;
					}
					export class PositionUpdateForPlaylistChange {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal.PositionUpdateForPlaylistChange>;
						public periodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public periodPositionUs: number;
						public requestedContentPositionUs: number;
						public forceBufferingState: boolean;
						public endPlayback: boolean;
						public setTargetLiveOffset: boolean;
						public constructor(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: number, param2: number, param3: boolean, param4: boolean, param5: boolean);
					}
					export class SeekPosition {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerImplInternal.SeekPosition>;
						public timeline: com.google.android.exoplayer2.Timeline;
						public windowIndex: number;
						public windowPositionUs: number;
						public constructor(param0: com.google.android.exoplayer2.Timeline, param1: number, param2: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class ExoPlayerLibraryInfo {
					public static class: java.lang.Class<com.google.android.exoplayer2.ExoPlayerLibraryInfo>;
					public static TAG: string;
					public static VERSION: string;
					public static VERSION_SLASHY: string;
					public static VERSION_INT: number;
					public static DEFAULT_USER_AGENT: string;
					public static ASSERTIONS_ENABLED: boolean;
					public static GL_ASSERTIONS_ENABLED: boolean;
					public static TRACE_ENABLED: boolean;
					public static registeredModules(): string;
					public static registerModule(param0: string): void;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class ExoTimeoutException {
					public static class: java.lang.Class<com.google.android.exoplayer2.ExoTimeoutException>;
					public static TIMEOUT_OPERATION_UNDEFINED: number;
					public static TIMEOUT_OPERATION_RELEASE: number;
					public static TIMEOUT_OPERATION_SET_FOREGROUND_MODE: number;
					public static TIMEOUT_OPERATION_DETACH_SURFACE: number;
					public timeoutOperation: number;
					public constructor(param0: number);
				}
				export module ExoTimeoutException {
					export class TimeoutOperation {
						public static class: java.lang.Class<com.google.android.exoplayer2.ExoTimeoutException.TimeoutOperation>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.ExoTimeoutException$TimeoutOperation interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class Format {
					public static class: java.lang.Class<com.google.android.exoplayer2.Format>;
					public static NO_VALUE: number;
					public static OFFSET_SAMPLE_RELATIVE: number;
					public id: string;
					public label: string;
					public language: string;
					public selectionFlags: number;
					public roleFlags: number;
					public averageBitrate: number;
					public peakBitrate: number;
					public bitrate: number;
					public codecs: string;
					public metadata: com.google.android.exoplayer2.metadata.Metadata;
					public containerMimeType: string;
					public sampleMimeType: string;
					public maxInputSize: number;
					public initializationData: java.util.List<native.Array<number>>;
					public drmInitData: com.google.android.exoplayer2.drm.DrmInitData;
					public subsampleOffsetUs: number;
					public width: number;
					public height: number;
					public frameRate: number;
					public rotationDegrees: number;
					public pixelWidthHeightRatio: number;
					public projectionData: androidNative.Array<number>;
					public stereoMode: number;
					public colorInfo: com.google.android.exoplayer2.video.ColorInfo;
					public channelCount: number;
					public sampleRate: number;
					public pcmEncoding: number;
					public encoderDelay: number;
					public encoderPadding: number;
					public accessibilityChannel: number;
					public exoMediaCryptoType: java.lang.Class<any>;
					public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.Format>;
					/** @deprecated */
					public static createVideoContainerFormat(param0: string, param1: string, param2: string, param3: string, param4: string, param5: com.google.android.exoplayer2.metadata.Metadata, param6: number, param7: number, param8: number, param9: number, param10: java.util.List<native.Array<number>>, param11: number, param12: number): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public static createAudioSampleFormat(param0: string, param1: string, param2: string, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.util.List<native.Array<number>>, param9: com.google.android.exoplayer2.drm.DrmInitData, param10: number, param11: string): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public copyWithVideoSize(param0: number, param1: number): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public static createSampleFormat(param0: string, param1: string): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public static createTextSampleFormat(param0: string, param1: string, param2: number, param3: string, param4: number, param5: number, param6: java.util.List<native.Array<number>>): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public static createTextContainerFormat(param0: string, param1: string, param2: string, param3: string, param4: string, param5: number, param6: number, param7: number, param8: string, param9: number): com.google.android.exoplayer2.Format;
					public static toLogString(param0: com.google.android.exoplayer2.Format): string;
					/** @deprecated */
					public static createAudioContainerFormat(param0: string, param1: string, param2: string, param3: string, param4: string, param5: com.google.android.exoplayer2.metadata.Metadata, param6: number, param7: number, param8: number, param9: java.util.List<native.Array<number>>, param10: number, param11: number, param12: string): com.google.android.exoplayer2.Format;
					public toString(): string;
					/** @deprecated */
					public copyWithManifestFormatInfo(param0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public copyWithGaplessInfo(param0: number, param1: number): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public static createImageSampleFormat(param0: string, param1: string, param2: number, param3: java.util.List<native.Array<number>>, param4: string): com.google.android.exoplayer2.Format;
					public hashCode(): number;
					public buildUpon(): com.google.android.exoplayer2.Format.Builder;
					/** @deprecated */
					public static createVideoSampleFormat(param0: string, param1: string, param2: string, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.util.List<native.Array<number>>, param9: com.google.android.exoplayer2.drm.DrmInitData): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public copyWithMetadata(param0: com.google.android.exoplayer2.metadata.Metadata): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public copyWithDrmInitData(param0: com.google.android.exoplayer2.drm.DrmInitData): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public static createAudioSampleFormat(param0: string, param1: string, param2: string, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number, param9: number, param10: java.util.List<native.Array<number>>, param11: com.google.android.exoplayer2.drm.DrmInitData, param12: number, param13: string, param14: com.google.android.exoplayer2.metadata.Metadata): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public copyWithBitrate(param0: number): com.google.android.exoplayer2.Format;
					public describeContents(): number;
					/** @deprecated */
					public copyWithMaxInputSize(param0: number): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public copyWithLabel(param0: string): com.google.android.exoplayer2.Format;
					public copyWithExoMediaCryptoType(param0: java.lang.Class<any>): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public static createContainerFormat(param0: string, param1: string, param2: string, param3: string, param4: string, param5: number, param6: number, param7: number, param8: string): com.google.android.exoplayer2.Format;
					public withManifestFormatInfo(param0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public static createTextSampleFormat(param0: string, param1: string, param2: number, param3: string): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public static createVideoSampleFormat(param0: string, param1: string, param2: string, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.util.List<native.Array<number>>, param9: number, param10: number, param11: com.google.android.exoplayer2.drm.DrmInitData): com.google.android.exoplayer2.Format;
					public equals(param0: any): boolean;
					public initializationDataEquals(param0: com.google.android.exoplayer2.Format): boolean;
					/** @deprecated */
					public copyWithFrameRate(param0: number): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public static createVideoSampleFormat(param0: string, param1: string, param2: string, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.util.List<native.Array<number>>, param9: number, param10: number, param11: androidNative.Array<number>, param12: number, param13: com.google.android.exoplayer2.video.ColorInfo, param14: com.google.android.exoplayer2.drm.DrmInitData): com.google.android.exoplayer2.Format;
					/** @deprecated */
					public static createTextContainerFormat(param0: string, param1: string, param2: string, param3: string, param4: string, param5: number, param6: number, param7: number, param8: string): com.google.android.exoplayer2.Format;
					public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
					/** @deprecated */
					public copyWithSubsampleOffsetUs(param0: number): com.google.android.exoplayer2.Format;
					public getPixelCount(): number;
					/** @deprecated */
					public static createAudioSampleFormat(param0: string, param1: string, param2: string, param3: number, param4: number, param5: number, param6: number, param7: java.util.List<native.Array<number>>, param8: com.google.android.exoplayer2.drm.DrmInitData, param9: number, param10: string): com.google.android.exoplayer2.Format;
				}
				export module Format {
					export class Builder {
						public static class: java.lang.Class<com.google.android.exoplayer2.Format.Builder>;
						public setWidth(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setChannelCount(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setDrmInitData(param0: com.google.android.exoplayer2.drm.DrmInitData): com.google.android.exoplayer2.Format.Builder;
						public setLanguage(param0: string): com.google.android.exoplayer2.Format.Builder;
						public setSampleMimeType(param0: string): com.google.android.exoplayer2.Format.Builder;
						public setAverageBitrate(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setEncoderPadding(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setSubsampleOffsetUs(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setContainerMimeType(param0: string): com.google.android.exoplayer2.Format.Builder;
						public setLabel(param0: string): com.google.android.exoplayer2.Format.Builder;
						public setProjectionData(param0: androidNative.Array<number>): com.google.android.exoplayer2.Format.Builder;
						public setRotationDegrees(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setMaxInputSize(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setExoMediaCryptoType(param0: java.lang.Class<any>): com.google.android.exoplayer2.Format.Builder;
						public setId(param0: string): com.google.android.exoplayer2.Format.Builder;
						public setHeight(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setPixelWidthHeightRatio(param0: number): com.google.android.exoplayer2.Format.Builder;
						public constructor();
						public setAccessibilityChannel(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setId(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setCodecs(param0: string): com.google.android.exoplayer2.Format.Builder;
						public setStereoMode(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setSelectionFlags(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setRoleFlags(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setColorInfo(param0: com.google.android.exoplayer2.video.ColorInfo): com.google.android.exoplayer2.Format.Builder;
						public setMetadata(param0: com.google.android.exoplayer2.metadata.Metadata): com.google.android.exoplayer2.Format.Builder;
						public setFrameRate(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setSampleRate(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setEncoderDelay(param0: number): com.google.android.exoplayer2.Format.Builder;
						public setPeakBitrate(param0: number): com.google.android.exoplayer2.Format.Builder;
						public build(): com.google.android.exoplayer2.Format;
						public setInitializationData(param0: java.util.List<native.Array<number>>): com.google.android.exoplayer2.Format.Builder;
						public setPcmEncoding(param0: number): com.google.android.exoplayer2.Format.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class FormatHolder {
					public static class: java.lang.Class<com.google.android.exoplayer2.FormatHolder>;
					public drmSession: com.google.android.exoplayer2.drm.DrmSession;
					public format: com.google.android.exoplayer2.Format;
					public constructor();
					public clear(): void;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class IllegalSeekPositionException {
					public static class: java.lang.Class<com.google.android.exoplayer2.IllegalSeekPositionException>;
					public timeline: com.google.android.exoplayer2.Timeline;
					public windowIndex: number;
					public positionMs: number;
					public constructor(param0: com.google.android.exoplayer2.Timeline, param1: number, param2: number);
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class LivePlaybackSpeedControl {
					public static class: java.lang.Class<com.google.android.exoplayer2.LivePlaybackSpeedControl>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.LivePlaybackSpeedControl interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						setLiveConfiguration(param0: com.google.android.exoplayer2.MediaItem.LiveConfiguration): void;
						setTargetLiveOffsetOverrideUs(param0: number): void;
						notifyRebuffer(): void;
						getAdjustedPlaybackSpeed(param0: number, param1: number): number;
						getTargetLiveOffsetUs(): number;
					});
					public constructor();
					public setTargetLiveOffsetOverrideUs(param0: number): void;
					public notifyRebuffer(): void;
					public getAdjustedPlaybackSpeed(param0: number, param1: number): number;
					public getTargetLiveOffsetUs(): number;
					public setLiveConfiguration(param0: com.google.android.exoplayer2.MediaItem.LiveConfiguration): void;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class LoadControl {
					public static class: java.lang.Class<com.google.android.exoplayer2.LoadControl>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.LoadControl interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						onPrepared(): void;
						onTracksSelected(param0: androidNative.Array<com.google.android.exoplayer2.Renderer>, param1: com.google.android.exoplayer2.source.TrackGroupArray, param2: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): void;
						onStopped(): void;
						onReleased(): void;
						getAllocator(): com.google.android.exoplayer2.upstream.Allocator;
						getBackBufferDurationUs(): number;
						retainBackBufferFromKeyframe(): boolean;
						shouldContinueLoading(param0: number, param1: number, param2: number): boolean;
						shouldStartPlayback(param0: number, param1: number, param2: boolean, param3: number): boolean;
					});
					public constructor();
					public onPrepared(): void;
					public onStopped(): void;
					public getBackBufferDurationUs(): number;
					public retainBackBufferFromKeyframe(): boolean;
					public shouldStartPlayback(param0: number, param1: number, param2: boolean, param3: number): boolean;
					public onTracksSelected(param0: androidNative.Array<com.google.android.exoplayer2.Renderer>, param1: com.google.android.exoplayer2.source.TrackGroupArray, param2: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): void;
					public shouldContinueLoading(param0: number, param1: number, param2: number): boolean;
					public onReleased(): void;
					public getAllocator(): com.google.android.exoplayer2.upstream.Allocator;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class MediaItem {
					public static class: java.lang.Class<com.google.android.exoplayer2.MediaItem>;
					public mediaId: string;
					public playbackProperties: com.google.android.exoplayer2.MediaItem.PlaybackProperties;
					public liveConfiguration: com.google.android.exoplayer2.MediaItem.LiveConfiguration;
					public mediaMetadata: com.google.android.exoplayer2.MediaMetadata;
					public clippingProperties: com.google.android.exoplayer2.MediaItem.ClippingProperties;
					public equals(param0: any): boolean;
					public static fromUri(param0: string): com.google.android.exoplayer2.MediaItem;
					public buildUpon(): com.google.android.exoplayer2.MediaItem.Builder;
					public static fromUri(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.MediaItem;
					public hashCode(): number;
				}
				export module MediaItem {
					export class AdsConfiguration {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaItem.AdsConfiguration>;
						public adTagUri: globalAndroid.net.Uri;
						public adsId: any;
						public equals(param0: any): boolean;
						public hashCode(): number;
					}
					export class Builder {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaItem.Builder>;
						public setCustomCacheKey(param0: string): com.google.android.exoplayer2.MediaItem.Builder;
						public setClipStartPositionMs(param0: number): com.google.android.exoplayer2.MediaItem.Builder;
						public setLiveTargetOffsetMs(param0: number): com.google.android.exoplayer2.MediaItem.Builder;
						public setLiveMinOffsetMs(param0: number): com.google.android.exoplayer2.MediaItem.Builder;
						public setMimeType(param0: string): com.google.android.exoplayer2.MediaItem.Builder;
						public setClipRelativeToDefaultPosition(param0: boolean): com.google.android.exoplayer2.MediaItem.Builder;
						public setLiveMaxOffsetMs(param0: number): com.google.android.exoplayer2.MediaItem.Builder;
						public setMediaMetadata(param0: com.google.android.exoplayer2.MediaMetadata): com.google.android.exoplayer2.MediaItem.Builder;
						public setDrmLicenseUri(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.MediaItem.Builder;
						public setDrmLicenseRequestHeaders(param0: java.util.Map<string,string>): com.google.android.exoplayer2.MediaItem.Builder;
						public setStreamKeys(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.MediaItem.Builder;
						public setLiveMaxPlaybackSpeed(param0: number): com.google.android.exoplayer2.MediaItem.Builder;
						public setDrmUuid(param0: java.util.UUID): com.google.android.exoplayer2.MediaItem.Builder;
						public setDrmMultiSession(param0: boolean): com.google.android.exoplayer2.MediaItem.Builder;
						public setDrmForceDefaultLicenseUri(param0: boolean): com.google.android.exoplayer2.MediaItem.Builder;
						public setDrmSessionForClearPeriods(param0: boolean): com.google.android.exoplayer2.MediaItem.Builder;
						public setClipEndPositionMs(param0: number): com.google.android.exoplayer2.MediaItem.Builder;
						public setSubtitles(param0: java.util.List<com.google.android.exoplayer2.MediaItem.Subtitle>): com.google.android.exoplayer2.MediaItem.Builder;
						public setDrmKeySetId(param0: androidNative.Array<number>): com.google.android.exoplayer2.MediaItem.Builder;
						public setUri(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.MediaItem.Builder;
						public setDrmLicenseUri(param0: string): com.google.android.exoplayer2.MediaItem.Builder;
						public setTag(param0: any): com.google.android.exoplayer2.MediaItem.Builder;
						public constructor();
						public setAdTagUri(param0: globalAndroid.net.Uri, param1: any): com.google.android.exoplayer2.MediaItem.Builder;
						public setClipRelativeToLiveWindow(param0: boolean): com.google.android.exoplayer2.MediaItem.Builder;
						public setAdTagUri(param0: string): com.google.android.exoplayer2.MediaItem.Builder;
						public setMediaId(param0: string): com.google.android.exoplayer2.MediaItem.Builder;
						public setDrmPlayClearContentWithoutKey(param0: boolean): com.google.android.exoplayer2.MediaItem.Builder;
						public setAdTagUri(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.MediaItem.Builder;
						public setDrmSessionForClearTypes(param0: java.util.List<java.lang.Integer>): com.google.android.exoplayer2.MediaItem.Builder;
						public setClipStartsAtKeyFrame(param0: boolean): com.google.android.exoplayer2.MediaItem.Builder;
						public setLiveMinPlaybackSpeed(param0: number): com.google.android.exoplayer2.MediaItem.Builder;
						public build(): com.google.android.exoplayer2.MediaItem;
						public setUri(param0: string): com.google.android.exoplayer2.MediaItem.Builder;
					}
					export class ClippingProperties {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaItem.ClippingProperties>;
						public startPositionMs: number;
						public endPositionMs: number;
						public relativeToLiveWindow: boolean;
						public relativeToDefaultPosition: boolean;
						public startsAtKeyFrame: boolean;
						public equals(param0: any): boolean;
						public hashCode(): number;
					}
					export class DrmConfiguration {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaItem.DrmConfiguration>;
						public uuid: java.util.UUID;
						public licenseUri: globalAndroid.net.Uri;
						public requestHeaders: java.util.Map<string,string>;
						public multiSession: boolean;
						public playClearContentWithoutKey: boolean;
						public forceDefaultLicenseUri: boolean;
						public sessionForClearTypes: java.util.List<java.lang.Integer>;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public getKeySetId(): androidNative.Array<number>;
					}
					export class LiveConfiguration {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaItem.LiveConfiguration>;
						public static UNSET: com.google.android.exoplayer2.MediaItem.LiveConfiguration;
						public targetOffsetMs: number;
						public minOffsetMs: number;
						public maxOffsetMs: number;
						public minPlaybackSpeed: number;
						public maxPlaybackSpeed: number;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public constructor(param0: number, param1: number, param2: number, param3: number, param4: number);
					}
					export class PlaybackProperties {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaItem.PlaybackProperties>;
						public uri: globalAndroid.net.Uri;
						public mimeType: string;
						public drmConfiguration: com.google.android.exoplayer2.MediaItem.DrmConfiguration;
						public adsConfiguration: com.google.android.exoplayer2.MediaItem.AdsConfiguration;
						public streamKeys: java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
						public customCacheKey: string;
						public subtitles: java.util.List<com.google.android.exoplayer2.MediaItem.Subtitle>;
						public tag: any;
						public equals(param0: any): boolean;
						public hashCode(): number;
					}
					export class Subtitle {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaItem.Subtitle>;
						public uri: globalAndroid.net.Uri;
						public mimeType: string;
						public language: string;
						public selectionFlags: number;
						public roleFlags: number;
						public label: string;
						public constructor(param0: globalAndroid.net.Uri, param1: string, param2: string, param3: number);
						public constructor(param0: globalAndroid.net.Uri, param1: string, param2: string);
						public equals(param0: any): boolean;
						public hashCode(): number;
						public constructor(param0: globalAndroid.net.Uri, param1: string, param2: string, param3: number, param4: number, param5: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class MediaMetadata {
					public static class: java.lang.Class<com.google.android.exoplayer2.MediaMetadata>;
					public title: string;
					public equals(param0: any): boolean;
					public hashCode(): number;
				}
				export module MediaMetadata {
					export class Builder {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaMetadata.Builder>;
						public constructor();
						public build(): com.google.android.exoplayer2.MediaMetadata;
						public setTitle(param0: string): com.google.android.exoplayer2.MediaMetadata.Builder;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class MediaPeriodHolder {
					public static class: java.lang.Class<com.google.android.exoplayer2.MediaPeriodHolder>;
					public mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod;
					public uid: any;
					public sampleStreams: androidNative.Array<com.google.android.exoplayer2.source.SampleStream>;
					public prepared: boolean;
					public hasEnabledTracks: boolean;
					public info: com.google.android.exoplayer2.MediaPeriodInfo;
					public allRenderersEnabled: boolean;
					public reevaluateBuffer(param0: number): void;
					public setNext(param0: com.google.android.exoplayer2.MediaPeriodHolder): void;
					public getTrackSelectorResult(): com.google.android.exoplayer2.trackselection.TrackSelectorResult;
					public getStartPositionRendererTime(): number;
					public applyTrackSelection(param0: com.google.android.exoplayer2.trackselection.TrackSelectorResult, param1: number, param2: boolean): number;
					public applyTrackSelection(param0: com.google.android.exoplayer2.trackselection.TrackSelectorResult, param1: number, param2: boolean, param3: androidNative.Array<boolean>): number;
					public setRendererOffset(param0: number): void;
					public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
					public getBufferedPositionUs(): number;
					public release(): void;
					public handlePrepared(param0: number, param1: com.google.android.exoplayer2.Timeline): void;
					public toRendererTime(param0: number): number;
					public getNext(): com.google.android.exoplayer2.MediaPeriodHolder;
					public getRendererOffset(): number;
					public constructor(param0: androidNative.Array<com.google.android.exoplayer2.RendererCapabilities>, param1: number, param2: com.google.android.exoplayer2.trackselection.TrackSelector, param3: com.google.android.exoplayer2.upstream.Allocator, param4: com.google.android.exoplayer2.MediaSourceList, param5: com.google.android.exoplayer2.MediaPeriodInfo, param6: com.google.android.exoplayer2.trackselection.TrackSelectorResult);
					public isFullyBuffered(): boolean;
					public continueLoading(param0: number): void;
					public getNextLoadPositionUs(): number;
					public toPeriodTime(param0: number): number;
					public selectTracks(param0: number, param1: com.google.android.exoplayer2.Timeline): com.google.android.exoplayer2.trackselection.TrackSelectorResult;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class MediaPeriodInfo {
					public static class: java.lang.Class<com.google.android.exoplayer2.MediaPeriodInfo>;
					public id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
					public startPositionUs: number;
					public requestedContentPositionUs: number;
					public endPositionUs: number;
					public durationUs: number;
					public isLastInTimelinePeriod: boolean;
					public isLastInTimelineWindow: boolean;
					public isFinal: boolean;
					public equals(param0: any): boolean;
					public copyWithRequestedContentPositionUs(param0: number): com.google.android.exoplayer2.MediaPeriodInfo;
					public hashCode(): number;
					public copyWithStartPositionUs(param0: number): com.google.android.exoplayer2.MediaPeriodInfo;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class MediaPeriodQueue {
					public static class: java.lang.Class<com.google.android.exoplayer2.MediaPeriodQueue>;
					public reevaluateBuffer(param0: number): void;
					public updateRepeatMode(param0: com.google.android.exoplayer2.Timeline, param1: number): boolean;
					public updateQueuedPeriods(param0: com.google.android.exoplayer2.Timeline, param1: number, param2: number): boolean;
					public shouldLoadNextMediaPeriod(): boolean;
					public getPlayingPeriod(): com.google.android.exoplayer2.MediaPeriodHolder;
					public advanceReadingPeriod(): com.google.android.exoplayer2.MediaPeriodHolder;
					public getLoadingPeriod(): com.google.android.exoplayer2.MediaPeriodHolder;
					public removeAfter(param0: com.google.android.exoplayer2.MediaPeriodHolder): boolean;
					public isLoading(param0: com.google.android.exoplayer2.source.MediaPeriod): boolean;
					public getReadingPeriod(): com.google.android.exoplayer2.MediaPeriodHolder;
					public resolveMediaPeriodIdForAds(param0: com.google.android.exoplayer2.Timeline, param1: any, param2: number): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
					public constructor(param0: com.google.android.exoplayer2.analytics.AnalyticsCollector, param1: globalAndroid.os.Handler);
					public enqueueNextMediaPeriodHolder(param0: androidNative.Array<com.google.android.exoplayer2.RendererCapabilities>, param1: com.google.android.exoplayer2.trackselection.TrackSelector, param2: com.google.android.exoplayer2.upstream.Allocator, param3: com.google.android.exoplayer2.MediaSourceList, param4: com.google.android.exoplayer2.MediaPeriodInfo, param5: com.google.android.exoplayer2.trackselection.TrackSelectorResult): com.google.android.exoplayer2.MediaPeriodHolder;
					public getNextMediaPeriodInfo(param0: number, param1: com.google.android.exoplayer2.PlaybackInfo): com.google.android.exoplayer2.MediaPeriodInfo;
					public updateShuffleModeEnabled(param0: com.google.android.exoplayer2.Timeline, param1: boolean): boolean;
					public clear(): void;
					public getUpdatedMediaPeriodInfo(param0: com.google.android.exoplayer2.Timeline, param1: com.google.android.exoplayer2.MediaPeriodInfo): com.google.android.exoplayer2.MediaPeriodInfo;
					public advancePlayingPeriod(): com.google.android.exoplayer2.MediaPeriodHolder;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class MediaSourceInfoHolder {
					public static class: java.lang.Class<com.google.android.exoplayer2.MediaSourceInfoHolder>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.MediaSourceInfoHolder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getUid(): any;
						getTimeline(): com.google.android.exoplayer2.Timeline;
					});
					public constructor();
					public getUid(): any;
					public getTimeline(): com.google.android.exoplayer2.Timeline;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class MediaSourceList {
					public static class: java.lang.Class<com.google.android.exoplayer2.MediaSourceList>;
					public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
					public constructor(param0: com.google.android.exoplayer2.MediaSourceList.MediaSourceListInfoRefreshListener, param1: com.google.android.exoplayer2.analytics.AnalyticsCollector, param2: globalAndroid.os.Handler);
					public setMediaSources(param0: java.util.List<com.google.android.exoplayer2.MediaSourceList.MediaSourceHolder>, param1: com.google.android.exoplayer2.source.ShuffleOrder): com.google.android.exoplayer2.Timeline;
					public moveMediaSource(param0: number, param1: number, param2: com.google.android.exoplayer2.source.ShuffleOrder): com.google.android.exoplayer2.Timeline;
					public setShuffleOrder(param0: com.google.android.exoplayer2.source.ShuffleOrder): com.google.android.exoplayer2.Timeline;
					public isPrepared(): boolean;
					public release(): void;
					public getSize(): number;
					public removeMediaSourceRange(param0: number, param1: number, param2: com.google.android.exoplayer2.source.ShuffleOrder): com.google.android.exoplayer2.Timeline;
					public moveMediaSourceRange(param0: number, param1: number, param2: number, param3: com.google.android.exoplayer2.source.ShuffleOrder): com.google.android.exoplayer2.Timeline;
					public clear(param0: com.google.android.exoplayer2.source.ShuffleOrder): com.google.android.exoplayer2.Timeline;
					public prepare(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
					public addMediaSources(param0: number, param1: java.util.List<com.google.android.exoplayer2.MediaSourceList.MediaSourceHolder>, param2: com.google.android.exoplayer2.source.ShuffleOrder): com.google.android.exoplayer2.Timeline;
					public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
					public createTimeline(): com.google.android.exoplayer2.Timeline;
				}
				export module MediaSourceList {
					export class ForwardingEventListener implements com.google.android.exoplayer2.source.MediaSourceEventListener, com.google.android.exoplayer2.drm.DrmSessionEventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaSourceList.ForwardingEventListener>;
						public onDownstreamFormatChanged(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onDrmSessionReleased(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmKeysLoaded(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onLoadCanceled(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadCompleted(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
						public constructor(param0: com.google.android.exoplayer2.MediaSourceList, param1: com.google.android.exoplayer2.MediaSourceList.MediaSourceHolder);
						public onDrmKeysRestored(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onLoadStarted(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onUpstreamDiscarded(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadError(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData, param4: java.io.IOException, param5: boolean): void;
						public onDrmSessionAcquired(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmKeysRemoved(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmSessionManagerError(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: java.lang.Exception): void;
					}
					export class MediaSourceAndListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaSourceList.MediaSourceAndListener>;
						public mediaSource: com.google.android.exoplayer2.source.MediaSource;
						public caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller;
						public eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener;
						public constructor(param0: com.google.android.exoplayer2.source.MediaSource, param1: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param2: com.google.android.exoplayer2.source.MediaSourceEventListener);
					}
					export class MediaSourceHolder extends com.google.android.exoplayer2.MediaSourceInfoHolder {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaSourceList.MediaSourceHolder>;
						public mediaSource: com.google.android.exoplayer2.source.MaskingMediaSource;
						public uid: any;
						public activeMediaPeriodIds: java.util.List<com.google.android.exoplayer2.source.MediaSource.MediaPeriodId>;
						public firstWindowIndexInChild: number;
						public isRemoved: boolean;
						public reset(param0: number): void;
						public constructor(param0: com.google.android.exoplayer2.source.MediaSource, param1: boolean);
						public getTimeline(): com.google.android.exoplayer2.Timeline;
						public getUid(): any;
					}
					export class MediaSourceListInfoRefreshListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.MediaSourceList.MediaSourceListInfoRefreshListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.MediaSourceList$MediaSourceListInfoRefreshListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPlaylistUpdateRequested(): void;
						});
						public constructor();
						public onPlaylistUpdateRequested(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class MetadataRetriever {
					public static class: java.lang.Class<com.google.android.exoplayer2.MetadataRetriever>;
					public static retrieveMetadata(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.MediaItem): com.google.common.util.concurrent.ListenableFuture<com.google.android.exoplayer2.source.TrackGroupArray>;
					public static retrieveMetadata(param0: com.google.android.exoplayer2.source.MediaSourceFactory, param1: com.google.android.exoplayer2.MediaItem): com.google.common.util.concurrent.ListenableFuture<com.google.android.exoplayer2.source.TrackGroupArray>;
				}
				export module MetadataRetriever {
					export class MetadataRetrieverInternal {
						public static class: java.lang.Class<com.google.android.exoplayer2.MetadataRetriever.MetadataRetrieverInternal>;
						public retrieveMetadata(param0: com.google.android.exoplayer2.MediaItem): com.google.common.util.concurrent.ListenableFuture<com.google.android.exoplayer2.source.TrackGroupArray>;
						public constructor(param0: com.google.android.exoplayer2.source.MediaSourceFactory, param1: com.google.android.exoplayer2.util.Clock);
					}
					export module MetadataRetrieverInternal {
						export class MediaSourceHandlerCallback {
							public static class: java.lang.Class<com.google.android.exoplayer2.MetadataRetriever.MetadataRetrieverInternal.MediaSourceHandlerCallback>;
							public handleMessage(param0: globalAndroid.os.Message): boolean;
							public constructor(param0: com.google.android.exoplayer2.MetadataRetriever.MetadataRetrieverInternal);
						}
						export module MediaSourceHandlerCallback {
							export class MediaSourceCaller extends com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller {
								public static class: java.lang.Class<com.google.android.exoplayer2.MetadataRetriever.MetadataRetrieverInternal.MediaSourceHandlerCallback.MediaSourceCaller>;
								public constructor(param0: com.google.android.exoplayer2.MetadataRetriever.MetadataRetrieverInternal.MediaSourceHandlerCallback);
								public onSourceInfoRefreshed(param0: com.google.android.exoplayer2.source.MediaSource, param1: com.google.android.exoplayer2.Timeline): void;
							}
							export module MediaSourceCaller {
								export class MediaPeriodCallback extends com.google.android.exoplayer2.source.MediaPeriod.Callback {
									public static class: java.lang.Class<com.google.android.exoplayer2.MetadataRetriever.MetadataRetrieverInternal.MediaSourceHandlerCallback.MediaSourceCaller.MediaPeriodCallback>;
									public onContinueLoadingRequested(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
									public onContinueLoadingRequested(param0: any): void;
									public onPrepared(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export abstract class NoSampleRenderer implements com.google.android.exoplayer2.Renderer, com.google.android.exoplayer2.RendererCapabilities {
					public static class: java.lang.Class<com.google.android.exoplayer2.NoSampleRenderer>;
					public isReady(): boolean;
					public onRendererOffsetChanged(param0: number): void;
					public onStopped(): void;
					public render(param0: number, param1: number): void;
					public getConfiguration(): com.google.android.exoplayer2.RendererConfiguration;
					public static getTunnelingSupport(param0: number): number;
					public static create(param0: number, param1: number, param2: number): number;
					public start(): void;
					public onReset(): void;
					public getStream(): com.google.android.exoplayer2.source.SampleStream;
					public supportsFormat(param0: com.google.android.exoplayer2.Format): number;
					public onDisabled(): void;
					public static create(param0: number): number;
					public disable(): void;
					public enable(param0: com.google.android.exoplayer2.RendererConfiguration, param1: androidNative.Array<com.google.android.exoplayer2.Format>, param2: com.google.android.exoplayer2.source.SampleStream, param3: number, param4: boolean, param5: boolean, param6: number, param7: number): void;
					public constructor();
					public resetPosition(param0: number): void;
					public setPlaybackSpeed(param0: number, param1: number): void;
					public getReadingPositionUs(): number;
					public getTrackType(): number;
					public getIndex(): number;
					public setCurrentStreamFinal(): void;
					public reset(): void;
					public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
					public setIndex(param0: number): void;
					public onEnabled(param0: boolean): void;
					public replaceStream(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: com.google.android.exoplayer2.source.SampleStream, param2: number, param3: number): void;
					public hasReadStreamToEnd(): boolean;
					public maybeThrowStreamError(): void;
					public isEnded(): boolean;
					public static getAdaptiveSupport(param0: number): number;
					public isCurrentStreamFinal(): boolean;
					public supportsMixedMimeTypeAdaptation(): number;
					public handleMessage(param0: number, param1: any): void;
					public getName(): string;
					public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
					public stop(): void;
					public onPositionReset(param0: number, param1: boolean): void;
					public static getFormatSupport(param0: number): number;
					public onStarted(): void;
					public getState(): number;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class ParserException {
					public static class: java.lang.Class<com.google.android.exoplayer2.ParserException>;
					public constructor(param0: string, param1: java.lang.Throwable);
					public constructor(param0: string);
					public constructor(param0: java.lang.Throwable);
					public constructor();
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class PlaybackInfo {
					public static class: java.lang.Class<com.google.android.exoplayer2.PlaybackInfo>;
					public timeline: com.google.android.exoplayer2.Timeline;
					public periodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
					public requestedContentPositionUs: number;
					public playbackState: number;
					public playbackError: com.google.android.exoplayer2.ExoPlaybackException;
					public isLoading: boolean;
					public trackGroups: com.google.android.exoplayer2.source.TrackGroupArray;
					public trackSelectorResult: com.google.android.exoplayer2.trackselection.TrackSelectorResult;
					public staticMetadata: java.util.List<com.google.android.exoplayer2.metadata.Metadata>;
					public loadingMediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
					public playWhenReady: boolean;
					public playbackSuppressionReason: number;
					public playbackParameters: com.google.android.exoplayer2.PlaybackParameters;
					public offloadSchedulingEnabled: boolean;
					public sleepingForOffload: boolean;
					public bufferedPositionUs: number;
					public totalBufferedDurationUs: number;
					public positionUs: number;
					public static getDummyPeriodForEmptyTimeline(): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
					public copyWithIsLoading(param0: boolean): com.google.android.exoplayer2.PlaybackInfo;
					public constructor(param0: com.google.android.exoplayer2.Timeline, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: number, param3: number, param4: com.google.android.exoplayer2.ExoPlaybackException, param5: boolean, param6: com.google.android.exoplayer2.source.TrackGroupArray, param7: com.google.android.exoplayer2.trackselection.TrackSelectorResult, param8: java.util.List<com.google.android.exoplayer2.metadata.Metadata>, param9: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param10: boolean, param11: number, param12: com.google.android.exoplayer2.PlaybackParameters, param13: number, param14: number, param15: number, param16: boolean, param17: boolean);
					public copyWithNewPosition(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: number, param2: number, param3: number, param4: com.google.android.exoplayer2.source.TrackGroupArray, param5: com.google.android.exoplayer2.trackselection.TrackSelectorResult, param6: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): com.google.android.exoplayer2.PlaybackInfo;
					public copyWithPlaybackError(param0: com.google.android.exoplayer2.ExoPlaybackException): com.google.android.exoplayer2.PlaybackInfo;
					public copyWithPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): com.google.android.exoplayer2.PlaybackInfo;
					public copyWithLoadingMediaPeriodId(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.PlaybackInfo;
					public copyWithTimeline(param0: com.google.android.exoplayer2.Timeline): com.google.android.exoplayer2.PlaybackInfo;
					public copyWithOffloadSchedulingEnabled(param0: boolean): com.google.android.exoplayer2.PlaybackInfo;
					public static createDummy(param0: com.google.android.exoplayer2.trackselection.TrackSelectorResult): com.google.android.exoplayer2.PlaybackInfo;
					public copyWithSleepingForOffload(param0: boolean): com.google.android.exoplayer2.PlaybackInfo;
					public copyWithPlayWhenReady(param0: boolean, param1: number): com.google.android.exoplayer2.PlaybackInfo;
					public copyWithPlaybackState(param0: number): com.google.android.exoplayer2.PlaybackInfo;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class PlaybackParameters {
					public static class: java.lang.Class<com.google.android.exoplayer2.PlaybackParameters>;
					public static DEFAULT: com.google.android.exoplayer2.PlaybackParameters;
					public speed: number;
					public pitch: number;
					public equals(param0: any): boolean;
					public toString(): string;
					public getMediaTimeUsForPlayoutTimeMs(param0: number): number;
					public withSpeed(param0: number): com.google.android.exoplayer2.PlaybackParameters;
					public hashCode(): number;
					public constructor(param0: number);
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class PlaybackPreparer {
					public static class: java.lang.Class<com.google.android.exoplayer2.PlaybackPreparer>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.PlaybackPreparer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						preparePlayback(): void;
					});
					public constructor();
					/** @deprecated */
					public preparePlayback(): void;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class Player {
					public static class: java.lang.Class<com.google.android.exoplayer2.Player>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.Player interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getAudioComponent(): com.google.android.exoplayer2.Player.AudioComponent;
						getVideoComponent(): com.google.android.exoplayer2.Player.VideoComponent;
						getTextComponent(): com.google.android.exoplayer2.Player.TextComponent;
						getMetadataComponent(): com.google.android.exoplayer2.Player.MetadataComponent;
						getDeviceComponent(): com.google.android.exoplayer2.Player.DeviceComponent;
						getApplicationLooper(): globalAndroid.os.Looper;
						addListener(param0: com.google.android.exoplayer2.Player.EventListener): void;
						removeListener(param0: com.google.android.exoplayer2.Player.EventListener): void;
						setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
						setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>, param1: boolean): void;
						setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>, param1: number, param2: number): void;
						setMediaItem(param0: com.google.android.exoplayer2.MediaItem): void;
						setMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
						setMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: boolean): void;
						addMediaItem(param0: com.google.android.exoplayer2.MediaItem): void;
						addMediaItem(param0: number, param1: com.google.android.exoplayer2.MediaItem): void;
						addMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
						addMediaItems(param0: number, param1: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
						moveMediaItem(param0: number, param1: number): void;
						moveMediaItems(param0: number, param1: number, param2: number): void;
						removeMediaItem(param0: number): void;
						removeMediaItems(param0: number, param1: number): void;
						clearMediaItems(): void;
						prepare(): void;
						getPlaybackState(): number;
						getPlaybackSuppressionReason(): number;
						isPlaying(): boolean;
						getPlayerError(): com.google.android.exoplayer2.ExoPlaybackException;
						getPlaybackError(): com.google.android.exoplayer2.ExoPlaybackException;
						play(): void;
						pause(): void;
						setPlayWhenReady(param0: boolean): void;
						getPlayWhenReady(): boolean;
						setRepeatMode(param0: number): void;
						getRepeatMode(): number;
						setShuffleModeEnabled(param0: boolean): void;
						getShuffleModeEnabled(): boolean;
						isLoading(): boolean;
						seekToDefaultPosition(): void;
						seekToDefaultPosition(param0: number): void;
						seekTo(param0: number): void;
						seekTo(param0: number, param1: number): void;
						hasPrevious(): boolean;
						previous(): void;
						hasNext(): boolean;
						next(): void;
						setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
						getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						stop(): void;
						stop(param0: boolean): void;
						release(): void;
						getRendererCount(): number;
						getRendererType(param0: number): number;
						getCurrentTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						getCurrentTrackSelections(): com.google.android.exoplayer2.trackselection.TrackSelectionArray;
						getCurrentStaticMetadata(): java.util.List<com.google.android.exoplayer2.metadata.Metadata>;
						getCurrentManifest(): any;
						getCurrentTimeline(): com.google.android.exoplayer2.Timeline;
						getCurrentPeriodIndex(): number;
						getCurrentWindowIndex(): number;
						getNextWindowIndex(): number;
						getPreviousWindowIndex(): number;
						getCurrentTag(): any;
						getCurrentMediaItem(): com.google.android.exoplayer2.MediaItem;
						getMediaItemCount(): number;
						getMediaItemAt(param0: number): com.google.android.exoplayer2.MediaItem;
						getDuration(): number;
						getCurrentPosition(): number;
						getBufferedPosition(): number;
						getBufferedPercentage(): number;
						getTotalBufferedDuration(): number;
						isCurrentWindowDynamic(): boolean;
						isCurrentWindowLive(): boolean;
						getCurrentLiveOffset(): number;
						isCurrentWindowSeekable(): boolean;
						isPlayingAd(): boolean;
						getCurrentAdGroupIndex(): number;
						getCurrentAdIndexInAdGroup(): number;
						getContentDuration(): number;
						getContentPosition(): number;
						getContentBufferedPosition(): number;
					});
					public constructor();
					public static DISCONTINUITY_REASON_AD_INSERTION: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_USER_REQUEST: number;
					public static TIMELINE_CHANGE_REASON_PLAYLIST_CHANGED: number;
					public static EVENT_PLAYBACK_SUPPRESSION_REASON_CHANGED: number;
					public static PLAYBACK_SUPPRESSION_REASON_NONE: number;
					public static EVENT_PLAY_WHEN_READY_CHANGED: number;
					public static EVENT_POSITION_DISCONTINUITY: number;
					public static EVENT_TRACKS_CHANGED: number;
					public static EVENT_TIMELINE_CHANGED: number;
					public static EVENT_SHUFFLE_MODE_ENABLED_CHANGED: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_END_OF_MEDIA_ITEM: number;
					public static TIMELINE_CHANGE_REASON_SOURCE_UPDATE: number;
					public static EVENT_MEDIA_ITEM_TRANSITION: number;
					public static DISCONTINUITY_REASON_INTERNAL: number;
					public static EVENT_IS_LOADING_CHANGED: number;
					public static STATE_ENDED: number;
					public static EVENT_PLAYBACK_STATE_CHANGED: number;
					public static EVENT_STATIC_METADATA_CHANGED: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_REMOTE: number;
					public static STATE_BUFFERING: number;
					public static DISCONTINUITY_REASON_PERIOD_TRANSITION: number;
					public static EVENT_PLAYBACK_PARAMETERS_CHANGED: number;
					public static PLAYBACK_SUPPRESSION_REASON_TRANSIENT_AUDIO_FOCUS_LOSS: number;
					public static DISCONTINUITY_REASON_SEEK_ADJUSTMENT: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_AUDIO_FOCUS_LOSS: number;
					public static REPEAT_MODE_OFF: number;
					public static PLAY_WHEN_READY_CHANGE_REASON_AUDIO_BECOMING_NOISY: number;
					public static STATE_READY: number;
					public static DISCONTINUITY_REASON_SEEK: number;
					public static EVENT_PLAYER_ERROR: number;
					public static MEDIA_ITEM_TRANSITION_REASON_REPEAT: number;
					public static MEDIA_ITEM_TRANSITION_REASON_PLAYLIST_CHANGED: number;
					public static EVENT_REPEAT_MODE_CHANGED: number;
					public static REPEAT_MODE_ALL: number;
					public static STATE_IDLE: number;
					public static REPEAT_MODE_ONE: number;
					public static EVENT_IS_PLAYING_CHANGED: number;
					public static MEDIA_ITEM_TRANSITION_REASON_SEEK: number;
					public static MEDIA_ITEM_TRANSITION_REASON_AUTO: number;
					public getPlayWhenReady(): boolean;
					public getRendererCount(): number;
					public isCurrentWindowDynamic(): boolean;
					public addListener(param0: com.google.android.exoplayer2.Player.EventListener): void;
					public setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>, param1: number, param2: number): void;
					public addMediaItem(param0: com.google.android.exoplayer2.MediaItem): void;
					/** @deprecated */
					public getPlaybackError(): com.google.android.exoplayer2.ExoPlaybackException;
					public hasNext(): boolean;
					public seekTo(param0: number): void;
					/** @deprecated */
					public getCurrentTag(): any;
					public getContentPosition(): number;
					public pause(): void;
					public getDeviceComponent(): com.google.android.exoplayer2.Player.DeviceComponent;
					public clearMediaItems(): void;
					public moveMediaItem(param0: number, param1: number): void;
					public getPlaybackSuppressionReason(): number;
					public getCurrentAdGroupIndex(): number;
					public setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>, param1: boolean): void;
					public getCurrentPeriodIndex(): number;
					public setMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
					public prepare(): void;
					public getMetadataComponent(): com.google.android.exoplayer2.Player.MetadataComponent;
					public moveMediaItems(param0: number, param1: number, param2: number): void;
					public next(): void;
					public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
					public removeMediaItem(param0: number): void;
					public getShuffleModeEnabled(): boolean;
					public getCurrentWindowIndex(): number;
					public previous(): void;
					public getMediaItemAt(param0: number): com.google.android.exoplayer2.MediaItem;
					public addMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public release(): void;
					public getCurrentAdIndexInAdGroup(): number;
					public getAudioComponent(): com.google.android.exoplayer2.Player.AudioComponent;
					public getPreviousWindowIndex(): number;
					public isCurrentWindowSeekable(): boolean;
					public getCurrentLiveOffset(): number;
					public getPlayerError(): com.google.android.exoplayer2.ExoPlaybackException;
					public seekToDefaultPosition(param0: number): void;
					public getContentBufferedPosition(): number;
					public setShuffleModeEnabled(param0: boolean): void;
					public stop(): void;
					public addMediaItems(param0: number, param1: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public play(): void;
					public setRepeatMode(param0: number): void;
					public setMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: boolean): void;
					public removeMediaItems(param0: number, param1: number): void;
					public getPlaybackState(): number;
					public getCurrentTimeline(): com.google.android.exoplayer2.Timeline;
					public isLoading(): boolean;
					public setPlayWhenReady(param0: boolean): void;
					public getRepeatMode(): number;
					public setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public getApplicationLooper(): globalAndroid.os.Looper;
					public getTextComponent(): com.google.android.exoplayer2.Player.TextComponent;
					public getDuration(): number;
					public isPlaying(): boolean;
					public seekTo(param0: number, param1: number): void;
					public hasPrevious(): boolean;
					public getCurrentStaticMetadata(): java.util.List<com.google.android.exoplayer2.metadata.Metadata>;
					public removeListener(param0: com.google.android.exoplayer2.Player.EventListener): void;
					public getCurrentPosition(): number;
					public getCurrentTrackSelections(): com.google.android.exoplayer2.trackselection.TrackSelectionArray;
					public setMediaItem(param0: com.google.android.exoplayer2.MediaItem): void;
					public getNextWindowIndex(): number;
					public getCurrentMediaItem(): com.google.android.exoplayer2.MediaItem;
					public getMediaItemCount(): number;
					public getVideoComponent(): com.google.android.exoplayer2.Player.VideoComponent;
					public getTotalBufferedDuration(): number;
					public isCurrentWindowLive(): boolean;
					public isPlayingAd(): boolean;
					public getBufferedPercentage(): number;
					public seekToDefaultPosition(): void;
					/** @deprecated */
					public stop(param0: boolean): void;
					public addMediaItem(param0: number, param1: com.google.android.exoplayer2.MediaItem): void;
					public getBufferedPosition(): number;
					public getRendererType(param0: number): number;
					public setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
					public getCurrentTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
					public getCurrentManifest(): any;
					public getContentDuration(): number;
				}
				export module Player {
					export class AudioComponent {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.AudioComponent>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player$AudioComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addAudioListener(param0: com.google.android.exoplayer2.audio.AudioListener): void;
							removeAudioListener(param0: com.google.android.exoplayer2.audio.AudioListener): void;
							setAudioAttributes(param0: com.google.android.exoplayer2.audio.AudioAttributes, param1: boolean): void;
							getAudioAttributes(): com.google.android.exoplayer2.audio.AudioAttributes;
							setAudioSessionId(param0: number): void;
							getAudioSessionId(): number;
							setAuxEffectInfo(param0: com.google.android.exoplayer2.audio.AuxEffectInfo): void;
							clearAuxEffectInfo(): void;
							setVolume(param0: number): void;
							getVolume(): number;
							setSkipSilenceEnabled(param0: boolean): void;
							getSkipSilenceEnabled(): boolean;
						});
						public constructor();
						public clearAuxEffectInfo(): void;
						public setAudioAttributes(param0: com.google.android.exoplayer2.audio.AudioAttributes, param1: boolean): void;
						public getAudioAttributes(): com.google.android.exoplayer2.audio.AudioAttributes;
						public addAudioListener(param0: com.google.android.exoplayer2.audio.AudioListener): void;
						public setAuxEffectInfo(param0: com.google.android.exoplayer2.audio.AuxEffectInfo): void;
						public getVolume(): number;
						public removeAudioListener(param0: com.google.android.exoplayer2.audio.AudioListener): void;
						public setSkipSilenceEnabled(param0: boolean): void;
						public setVolume(param0: number): void;
						public setAudioSessionId(param0: number): void;
						public getAudioSessionId(): number;
						public getSkipSilenceEnabled(): boolean;
					}
					export abstract class DefaultEventListener extends com.google.android.exoplayer2.Player.EventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.DefaultEventListener>;
						public onTracksChanged(param0: com.google.android.exoplayer2.source.TrackGroupArray, param1: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onPlayerError(param0: com.google.android.exoplayer2.ExoPlaybackException): void;
						public onPlaybackStateChanged(param0: number): void;
						public constructor();
						/** @deprecated */
						public onLoadingChanged(param0: boolean): void;
						public onPlayWhenReadyChanged(param0: boolean, param1: number): void;
						public onExperimentalSleepingForOffloadChanged(param0: boolean): void;
						public onShuffleModeEnabledChanged(param0: boolean): void;
						public onPlaybackSuppressionReasonChanged(param0: number): void;
						public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.PlaybackParameters): void;
						/** @deprecated */
						public onSeekProcessed(): void;
						public onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.Player.Events): void;
						public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: any, param2: number): void;
						public onStaticMetadataChanged(param0: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
						public onIsLoadingChanged(param0: boolean): void;
						/** @deprecated */
						public onPlayerStateChanged(param0: boolean, param1: number): void;
						public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: number): void;
						/** @deprecated */
						public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: any, param2: number): void;
						public onMediaItemTransition(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
						public onExperimentalOffloadSchedulingEnabledChanged(param0: boolean): void;
						public onIsPlayingChanged(param0: boolean): void;
						public onRepeatModeChanged(param0: number): void;
						public onPositionDiscontinuity(param0: number): void;
					}
					export class DeviceComponent {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.DeviceComponent>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player$DeviceComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addDeviceListener(param0: com.google.android.exoplayer2.device.DeviceListener): void;
							removeDeviceListener(param0: com.google.android.exoplayer2.device.DeviceListener): void;
							getDeviceInfo(): com.google.android.exoplayer2.device.DeviceInfo;
							getDeviceVolume(): number;
							isDeviceMuted(): boolean;
							setDeviceVolume(param0: number): void;
							increaseDeviceVolume(): void;
							decreaseDeviceVolume(): void;
							setDeviceMuted(param0: boolean): void;
						});
						public constructor();
						public setDeviceVolume(param0: number): void;
						public increaseDeviceVolume(): void;
						public addDeviceListener(param0: com.google.android.exoplayer2.device.DeviceListener): void;
						public getDeviceVolume(): number;
						public decreaseDeviceVolume(): void;
						public removeDeviceListener(param0: com.google.android.exoplayer2.device.DeviceListener): void;
						public setDeviceMuted(param0: boolean): void;
						public getDeviceInfo(): com.google.android.exoplayer2.device.DeviceInfo;
						public isDeviceMuted(): boolean;
					}
					export class DiscontinuityReason {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.DiscontinuityReason>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player$DiscontinuityReason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class EventFlags {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.EventFlags>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player$EventFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class EventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.EventListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player$EventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: number): void;
							onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: any, param2: number): void;
							onMediaItemTransition(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
							onTracksChanged(param0: com.google.android.exoplayer2.source.TrackGroupArray, param1: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
							onStaticMetadataChanged(param0: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
							onIsLoadingChanged(param0: boolean): void;
							onLoadingChanged(param0: boolean): void;
							onPlayerStateChanged(param0: boolean, param1: number): void;
							onPlaybackStateChanged(param0: number): void;
							onPlayWhenReadyChanged(param0: boolean, param1: number): void;
							onPlaybackSuppressionReasonChanged(param0: number): void;
							onIsPlayingChanged(param0: boolean): void;
							onRepeatModeChanged(param0: number): void;
							onShuffleModeEnabledChanged(param0: boolean): void;
							onPlayerError(param0: com.google.android.exoplayer2.ExoPlaybackException): void;
							onPositionDiscontinuity(param0: number): void;
							onPlaybackParametersChanged(param0: com.google.android.exoplayer2.PlaybackParameters): void;
							onSeekProcessed(): void;
							onExperimentalOffloadSchedulingEnabledChanged(param0: boolean): void;
							onExperimentalSleepingForOffloadChanged(param0: boolean): void;
							onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.Player.Events): void;
						});
						public constructor();
						public onTracksChanged(param0: com.google.android.exoplayer2.source.TrackGroupArray, param1: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onPlayerError(param0: com.google.android.exoplayer2.ExoPlaybackException): void;
						public onPlaybackStateChanged(param0: number): void;
						/** @deprecated */
						public onLoadingChanged(param0: boolean): void;
						public onPlayWhenReadyChanged(param0: boolean, param1: number): void;
						public onExperimentalSleepingForOffloadChanged(param0: boolean): void;
						public onShuffleModeEnabledChanged(param0: boolean): void;
						public onPlaybackSuppressionReasonChanged(param0: number): void;
						public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.PlaybackParameters): void;
						/** @deprecated */
						public onSeekProcessed(): void;
						public onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.Player.Events): void;
						public onStaticMetadataChanged(param0: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
						public onIsLoadingChanged(param0: boolean): void;
						/** @deprecated */
						public onPlayerStateChanged(param0: boolean, param1: number): void;
						public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: number): void;
						/** @deprecated */
						public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: any, param2: number): void;
						public onMediaItemTransition(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
						public onExperimentalOffloadSchedulingEnabledChanged(param0: boolean): void;
						public onIsPlayingChanged(param0: boolean): void;
						public onRepeatModeChanged(param0: number): void;
						public onPositionDiscontinuity(param0: number): void;
					}
					export class Events extends com.google.android.exoplayer2.util.MutableFlags {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.Events>;
						public contains(param0: number): boolean;
						public constructor();
						public get(param0: number): number;
						public containsAny(param0: androidNative.Array<number>): boolean;
					}
					export class MediaItemTransitionReason {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.MediaItemTransitionReason>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player$MediaItemTransitionReason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class MetadataComponent {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.MetadataComponent>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player$MetadataComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addMetadataOutput(param0: com.google.android.exoplayer2.metadata.MetadataOutput): void;
							removeMetadataOutput(param0: com.google.android.exoplayer2.metadata.MetadataOutput): void;
						});
						public constructor();
						public removeMetadataOutput(param0: com.google.android.exoplayer2.metadata.MetadataOutput): void;
						public addMetadataOutput(param0: com.google.android.exoplayer2.metadata.MetadataOutput): void;
					}
					export class PlayWhenReadyChangeReason {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.PlayWhenReadyChangeReason>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player$PlayWhenReadyChangeReason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class PlaybackSuppressionReason {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.PlaybackSuppressionReason>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player$PlaybackSuppressionReason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class RepeatMode {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.RepeatMode>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player$RepeatMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class State {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.State>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player$State interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class TextComponent {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.TextComponent>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player$TextComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addTextOutput(param0: com.google.android.exoplayer2.text.TextOutput): void;
							removeTextOutput(param0: com.google.android.exoplayer2.text.TextOutput): void;
							getCurrentCues(): java.util.List<com.google.android.exoplayer2.text.Cue>;
						});
						public constructor();
						public removeTextOutput(param0: com.google.android.exoplayer2.text.TextOutput): void;
						public addTextOutput(param0: com.google.android.exoplayer2.text.TextOutput): void;
						public getCurrentCues(): java.util.List<com.google.android.exoplayer2.text.Cue>;
					}
					export class TimelineChangeReason {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.TimelineChangeReason>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player$TimelineChangeReason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class VideoComponent {
						public static class: java.lang.Class<com.google.android.exoplayer2.Player.VideoComponent>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Player$VideoComponent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setVideoScalingMode(param0: number): void;
							getVideoScalingMode(): number;
							addVideoListener(param0: com.google.android.exoplayer2.video.VideoListener): void;
							removeVideoListener(param0: com.google.android.exoplayer2.video.VideoListener): void;
							setVideoFrameMetadataListener(param0: com.google.android.exoplayer2.video.VideoFrameMetadataListener): void;
							clearVideoFrameMetadataListener(param0: com.google.android.exoplayer2.video.VideoFrameMetadataListener): void;
							setCameraMotionListener(param0: com.google.android.exoplayer2.video.spherical.CameraMotionListener): void;
							clearCameraMotionListener(param0: com.google.android.exoplayer2.video.spherical.CameraMotionListener): void;
							clearVideoSurface(): void;
							clearVideoSurface(param0: globalAndroid.view.Surface): void;
							setVideoSurface(param0: globalAndroid.view.Surface): void;
							setVideoSurfaceHolder(param0: globalAndroid.view.SurfaceHolder): void;
							clearVideoSurfaceHolder(param0: globalAndroid.view.SurfaceHolder): void;
							setVideoSurfaceView(param0: globalAndroid.view.SurfaceView): void;
							clearVideoSurfaceView(param0: globalAndroid.view.SurfaceView): void;
							setVideoTextureView(param0: globalAndroid.view.TextureView): void;
							clearVideoTextureView(param0: globalAndroid.view.TextureView): void;
						});
						public constructor();
						public setVideoTextureView(param0: globalAndroid.view.TextureView): void;
						public setCameraMotionListener(param0: com.google.android.exoplayer2.video.spherical.CameraMotionListener): void;
						public clearVideoSurfaceHolder(param0: globalAndroid.view.SurfaceHolder): void;
						public setVideoScalingMode(param0: number): void;
						public setVideoSurface(param0: globalAndroid.view.Surface): void;
						public removeVideoListener(param0: com.google.android.exoplayer2.video.VideoListener): void;
						public clearCameraMotionListener(param0: com.google.android.exoplayer2.video.spherical.CameraMotionListener): void;
						public clearVideoSurface(): void;
						public setVideoSurfaceHolder(param0: globalAndroid.view.SurfaceHolder): void;
						public clearVideoFrameMetadataListener(param0: com.google.android.exoplayer2.video.VideoFrameMetadataListener): void;
						public clearVideoSurfaceView(param0: globalAndroid.view.SurfaceView): void;
						public getVideoScalingMode(): number;
						public addVideoListener(param0: com.google.android.exoplayer2.video.VideoListener): void;
						public setVideoFrameMetadataListener(param0: com.google.android.exoplayer2.video.VideoFrameMetadataListener): void;
						public clearVideoTextureView(param0: globalAndroid.view.TextureView): void;
						public setVideoSurfaceView(param0: globalAndroid.view.SurfaceView): void;
						public clearVideoSurface(param0: globalAndroid.view.Surface): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class PlayerMessage {
					public static class: java.lang.Class<com.google.android.exoplayer2.PlayerMessage>;
					public getType(): number;
					public getPositionMs(): number;
					public getTimeline(): com.google.android.exoplayer2.Timeline;
					public cancel(): com.google.android.exoplayer2.PlayerMessage;
					public send(): com.google.android.exoplayer2.PlayerMessage;
					/** @deprecated */
					public setHandler(param0: globalAndroid.os.Handler): com.google.android.exoplayer2.PlayerMessage;
					public blockUntilDelivered(): boolean;
					public getPayload(): any;
					public markAsProcessed(param0: boolean): void;
					public getLooper(): globalAndroid.os.Looper;
					public isCanceled(): boolean;
					public setPosition(param0: number, param1: number): com.google.android.exoplayer2.PlayerMessage;
					public setPayload(param0: any): com.google.android.exoplayer2.PlayerMessage;
					public getWindowIndex(): number;
					public setDeleteAfterDelivery(param0: boolean): com.google.android.exoplayer2.PlayerMessage;
					public blockUntilDelivered(param0: number): boolean;
					public setLooper(param0: globalAndroid.os.Looper): com.google.android.exoplayer2.PlayerMessage;
					public setType(param0: number): com.google.android.exoplayer2.PlayerMessage;
					public constructor(param0: com.google.android.exoplayer2.PlayerMessage.Sender, param1: com.google.android.exoplayer2.PlayerMessage.Target, param2: com.google.android.exoplayer2.Timeline, param3: number, param4: com.google.android.exoplayer2.util.Clock, param5: globalAndroid.os.Looper);
					public getDeleteAfterDelivery(): boolean;
					public getTarget(): com.google.android.exoplayer2.PlayerMessage.Target;
					public setPosition(param0: number): com.google.android.exoplayer2.PlayerMessage;
				}
				export module PlayerMessage {
					export class Sender {
						public static class: java.lang.Class<com.google.android.exoplayer2.PlayerMessage.Sender>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.PlayerMessage$Sender interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							sendMessage(param0: com.google.android.exoplayer2.PlayerMessage): void;
						});
						public constructor();
						public sendMessage(param0: com.google.android.exoplayer2.PlayerMessage): void;
					}
					export class Target {
						public static class: java.lang.Class<com.google.android.exoplayer2.PlayerMessage.Target>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.PlayerMessage$Target interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							handleMessage(param0: number, param1: any): void;
						});
						public constructor();
						public handleMessage(param0: number, param1: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class PlaylistTimeline extends com.google.android.exoplayer2.AbstractConcatenatedTimeline {
					public static class: java.lang.Class<com.google.android.exoplayer2.PlaylistTimeline>;
					public getChildIndexByPeriodIndex(param0: number): number;
					public getChildIndexByWindowIndex(param0: number): number;
					public getWindowCount(): number;
					public getChildIndexByChildUid(param0: any): number;
					public getTimelineByChildIndex(param0: number): com.google.android.exoplayer2.Timeline;
					public constructor(param0: boolean, param1: com.google.android.exoplayer2.source.ShuffleOrder);
					public getChildUidByChildIndex(param0: number): any;
					public constructor();
					public getFirstPeriodIndexByChildIndex(param0: number): number;
					public constructor(param0: java.util.Collection<any>, param1: com.google.android.exoplayer2.source.ShuffleOrder);
					public getPeriodCount(): number;
					public getFirstWindowIndexByChildIndex(param0: number): number;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class Renderer extends com.google.android.exoplayer2.PlayerMessage.Target {
					public static class: java.lang.Class<com.google.android.exoplayer2.Renderer>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.Renderer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						getName(): string;
						getTrackType(): number;
						getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						setIndex(param0: number): void;
						getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						getState(): number;
						enable(param0: com.google.android.exoplayer2.RendererConfiguration, param1: androidNative.Array<com.google.android.exoplayer2.Format>, param2: com.google.android.exoplayer2.source.SampleStream, param3: number, param4: boolean, param5: boolean, param6: number, param7: number): void;
						start(): void;
						replaceStream(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: com.google.android.exoplayer2.source.SampleStream, param2: number, param3: number): void;
						getStream(): com.google.android.exoplayer2.source.SampleStream;
						hasReadStreamToEnd(): boolean;
						getReadingPositionUs(): number;
						setCurrentStreamFinal(): void;
						isCurrentStreamFinal(): boolean;
						maybeThrowStreamError(): void;
						resetPosition(param0: number): void;
						setPlaybackSpeed(param0: number, param1: number): void;
						render(param0: number, param1: number): void;
						isReady(): boolean;
						isEnded(): boolean;
						stop(): void;
						disable(): void;
						reset(): void;
						handleMessage(param0: number, param1: any): void;
					});
					public constructor();
					public static VIDEO_SCALING_MODE_SCALE_TO_FIT: number;
					public static MSG_SET_AUDIO_SESSION_ID: number;
					public static MSG_SET_SKIP_SILENCE_ENABLED: number;
					public static STATE_DISABLED: number;
					public static MSG_CUSTOM_BASE: number;
					public static VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING: number;
					public static MSG_SET_SURFACE: number;
					public static MSG_SET_WAKEUP_LISTENER: number;
					public static VIDEO_SCALING_MODE_DEFAULT: number;
					public static STATE_STARTED: number;
					public static MSG_SET_VIDEO_DECODER_OUTPUT_BUFFER_RENDERER: number;
					public static MSG_SET_SCALING_MODE: number;
					public static MSG_SET_AUDIO_ATTRIBUTES: number;
					public static STATE_ENABLED: number;
					public static MSG_SET_VOLUME: number;
					public static MSG_SET_AUX_EFFECT_INFO: number;
					public static MSG_SET_VIDEO_FRAME_METADATA_LISTENER: number;
					public static MSG_SET_CAMERA_MOTION_LISTENER: number;
					public isReady(): boolean;
					public setCurrentStreamFinal(): void;
					public reset(): void;
					public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
					public render(param0: number, param1: number): void;
					public setIndex(param0: number): void;
					public replaceStream(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: com.google.android.exoplayer2.source.SampleStream, param2: number, param3: number): void;
					public hasReadStreamToEnd(): boolean;
					public maybeThrowStreamError(): void;
					public isEnded(): boolean;
					public start(): void;
					public isCurrentStreamFinal(): boolean;
					public getStream(): com.google.android.exoplayer2.source.SampleStream;
					public disable(): void;
					public enable(param0: com.google.android.exoplayer2.RendererConfiguration, param1: androidNative.Array<com.google.android.exoplayer2.Format>, param2: com.google.android.exoplayer2.source.SampleStream, param3: number, param4: boolean, param5: boolean, param6: number, param7: number): void;
					public getName(): string;
					public handleMessage(param0: number, param1: any): void;
					public resetPosition(param0: number): void;
					public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
					public stop(): void;
					public setPlaybackSpeed(param0: number, param1: number): void;
					public getReadingPositionUs(): number;
					public getTrackType(): number;
					public getState(): number;
				}
				export module Renderer {
					export class State {
						public static class: java.lang.Class<com.google.android.exoplayer2.Renderer.State>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Renderer$State interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class VideoScalingMode {
						public static class: java.lang.Class<com.google.android.exoplayer2.Renderer.VideoScalingMode>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Renderer$VideoScalingMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class WakeupListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.Renderer.WakeupListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.Renderer$WakeupListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onSleep(param0: number): void;
							onWakeup(): void;
						});
						public constructor();
						public onSleep(param0: number): void;
						public onWakeup(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class RendererCapabilities {
					public static class: java.lang.Class<com.google.android.exoplayer2.RendererCapabilities>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.RendererCapabilities interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						create(param0: number): number;
						create(param0: number, param1: number, param2: number): number;
						getFormatSupport(param0: number): number;
						getAdaptiveSupport(param0: number): number;
						getTunnelingSupport(param0: number): number;
						getName(): string;
						getTrackType(): number;
						supportsFormat(param0: com.google.android.exoplayer2.Format): number;
						supportsMixedMimeTypeAdaptation(): number;
					});
					public constructor();
					public static TUNNELING_SUPPORT_MASK: number;
					public static ADAPTIVE_SUPPORT_MASK: number;
					public static FORMAT_SUPPORT_MASK: number;
					public static FORMAT_UNSUPPORTED_DRM: number;
					public static ADAPTIVE_SEAMLESS: number;
					public static TUNNELING_NOT_SUPPORTED: number;
					public static FORMAT_UNSUPPORTED_TYPE: number;
					public static ADAPTIVE_NOT_SEAMLESS: number;
					public static ADAPTIVE_NOT_SUPPORTED: number;
					public static FORMAT_EXCEEDS_CAPABILITIES: number;
					public static FORMAT_HANDLED: number;
					public static TUNNELING_SUPPORTED: number;
					public static FORMAT_UNSUPPORTED_SUBTYPE: number;
					public static create(param0: number): number;
					public getName(): string;
					public static getTunnelingSupport(param0: number): number;
					public static create(param0: number, param1: number, param2: number): number;
					public static getFormatSupport(param0: number): number;
					public static getAdaptiveSupport(param0: number): number;
					public getTrackType(): number;
					public supportsMixedMimeTypeAdaptation(): number;
					public supportsFormat(param0: com.google.android.exoplayer2.Format): number;
				}
				export module RendererCapabilities {
					export class AdaptiveSupport {
						public static class: java.lang.Class<com.google.android.exoplayer2.RendererCapabilities.AdaptiveSupport>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.RendererCapabilities$AdaptiveSupport interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class Capabilities {
						public static class: java.lang.Class<com.google.android.exoplayer2.RendererCapabilities.Capabilities>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.RendererCapabilities$Capabilities interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class FormatSupport {
						public static class: java.lang.Class<com.google.android.exoplayer2.RendererCapabilities.FormatSupport>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.RendererCapabilities$FormatSupport interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
					export class TunnelingSupport {
						public static class: java.lang.Class<com.google.android.exoplayer2.RendererCapabilities.TunnelingSupport>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.RendererCapabilities$TunnelingSupport interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class RendererConfiguration {
					public static class: java.lang.Class<com.google.android.exoplayer2.RendererConfiguration>;
					public static DEFAULT: com.google.android.exoplayer2.RendererConfiguration;
					public tunneling: boolean;
					public equals(param0: any): boolean;
					public constructor(param0: boolean);
					public hashCode(): number;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class RenderersFactory {
					public static class: java.lang.Class<com.google.android.exoplayer2.RenderersFactory>;
					/**
					 * Constructs a new instance of the com.google.android.exoplayer2.RenderersFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
					 */
					public constructor(implementation: {
						createRenderers(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.video.VideoRendererEventListener, param2: com.google.android.exoplayer2.audio.AudioRendererEventListener, param3: com.google.android.exoplayer2.text.TextOutput, param4: com.google.android.exoplayer2.metadata.MetadataOutput): androidNative.Array<com.google.android.exoplayer2.Renderer>;
					});
					public constructor();
					public createRenderers(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.video.VideoRendererEventListener, param2: com.google.android.exoplayer2.audio.AudioRendererEventListener, param3: com.google.android.exoplayer2.text.TextOutput, param4: com.google.android.exoplayer2.metadata.MetadataOutput): androidNative.Array<com.google.android.exoplayer2.Renderer>;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class SeekParameters {
					public static class: java.lang.Class<com.google.android.exoplayer2.SeekParameters>;
					public static EXACT: com.google.android.exoplayer2.SeekParameters;
					public static CLOSEST_SYNC: com.google.android.exoplayer2.SeekParameters;
					public static PREVIOUS_SYNC: com.google.android.exoplayer2.SeekParameters;
					public static NEXT_SYNC: com.google.android.exoplayer2.SeekParameters;
					public static DEFAULT: com.google.android.exoplayer2.SeekParameters;
					public toleranceBeforeUs: number;
					public toleranceAfterUs: number;
					public equals(param0: any): boolean;
					public hashCode(): number;
					public resolveSeekPositionUs(param0: number, param1: number, param2: number): number;
					public constructor(param0: number, param1: number);
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class SimpleExoPlayer extends com.google.android.exoplayer2.BasePlayer implements com.google.android.exoplayer2.ExoPlayer, com.google.android.exoplayer2.Player.AudioComponent, com.google.android.exoplayer2.Player.VideoComponent, com.google.android.exoplayer2.Player.TextComponent, com.google.android.exoplayer2.Player.MetadataComponent, com.google.android.exoplayer2.Player.DeviceComponent {
					public static class: java.lang.Class<com.google.android.exoplayer2.SimpleExoPlayer>;
					public static DEFAULT_DETACH_SURFACE_TIMEOUT_MS: number;
					public renderers: androidNative.Array<com.google.android.exoplayer2.Renderer>;
					public setAudioSessionId(param0: number): void;
					public getPlayWhenReady(): boolean;
					public getRendererCount(): number;
					public clearVideoSurface(): void;
					public addListener(param0: com.google.android.exoplayer2.Player.EventListener): void;
					public setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>, param1: number, param2: number): void;
					/** @deprecated */
					public getPlaybackError(): com.google.android.exoplayer2.ExoPlaybackException;
					public constructor(param0: com.google.android.exoplayer2.SimpleExoPlayer.Builder);
					public getAudioFormat(): com.google.android.exoplayer2.Format;
					public hasNext(): boolean;
					public seekTo(param0: number): void;
					public getContentPosition(): number;
					public getDeviceVolume(): number;
					public constructor();
					public createMessage(param0: com.google.android.exoplayer2.PlayerMessage.Target): com.google.android.exoplayer2.PlayerMessage;
					public pause(): void;
					public getDeviceComponent(): com.google.android.exoplayer2.Player.DeviceComponent;
					public getClock(): com.google.android.exoplayer2.util.Clock;
					public clearCameraMotionListener(param0: com.google.android.exoplayer2.video.spherical.CameraMotionListener): void;
					public getPlaybackSuppressionReason(): number;
					public setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>, param1: boolean): void;
					public getCurrentPeriodIndex(): number;
					public getAudioDecoderCounters(): com.google.android.exoplayer2.decoder.DecoderCounters;
					public setMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
					public setShuffleOrder(param0: com.google.android.exoplayer2.source.ShuffleOrder): void;
					public prepare(): void;
					/** @deprecated */
					public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.RenderersFactory, param2: com.google.android.exoplayer2.trackselection.TrackSelector, param3: com.google.android.exoplayer2.source.MediaSourceFactory, param4: com.google.android.exoplayer2.LoadControl, param5: com.google.android.exoplayer2.upstream.BandwidthMeter, param6: com.google.android.exoplayer2.analytics.AnalyticsCollector, param7: boolean, param8: com.google.android.exoplayer2.util.Clock, param9: globalAndroid.os.Looper);
					public getMetadataComponent(): com.google.android.exoplayer2.Player.MetadataComponent;
					public moveMediaItems(param0: number, param1: number, param2: number): void;
					public setHandleAudioBecomingNoisy(param0: boolean): void;
					public previous(): void;
					public clearVideoSurfaceHolder(param0: globalAndroid.view.SurfaceHolder): void;
					public decreaseDeviceVolume(): void;
					public getAudioAttributes(): com.google.android.exoplayer2.audio.AudioAttributes;
					public getAudioComponent(): com.google.android.exoplayer2.Player.AudioComponent;
					public getPreviousWindowIndex(): number;
					public setVideoSurfaceView(param0: globalAndroid.view.SurfaceView): void;
					public getPlayerError(): com.google.android.exoplayer2.ExoPlaybackException;
					/** @deprecated */
					public setHandleWakeLock(param0: boolean): void;
					public getSkipSilenceEnabled(): boolean;
					public seekToDefaultPosition(param0: number): void;
					public getContentBufferedPosition(): number;
					public addAudioListener(param0: com.google.android.exoplayer2.audio.AudioListener): void;
					public removeAnalyticsListener(param0: com.google.android.exoplayer2.analytics.AnalyticsListener): void;
					public addVideoListener(param0: com.google.android.exoplayer2.video.VideoListener): void;
					public addMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public setRepeatMode(param0: number): void;
					public getPlaybackState(): number;
					public getCurrentTimeline(): com.google.android.exoplayer2.Timeline;
					public setPlayWhenReady(param0: boolean): void;
					public getRepeatMode(): number;
					public getVideoDecoderCounters(): com.google.android.exoplayer2.decoder.DecoderCounters;
					public setMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public removeVideoListener(param0: com.google.android.exoplayer2.video.VideoListener): void;
					public setMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public getDeviceInfo(): com.google.android.exoplayer2.device.DeviceInfo;
					public getDuration(): number;
					/** @deprecated */
					public retry(): void;
					public getCurrentStaticMetadata(): java.util.List<com.google.android.exoplayer2.metadata.Metadata>;
					public setDeviceVolume(param0: number): void;
					/** @deprecated */
					public prepare(param0: com.google.android.exoplayer2.source.MediaSource): void;
					public addMediaSource(param0: number, param1: com.google.android.exoplayer2.source.MediaSource): void;
					public clearVideoTextureView(param0: globalAndroid.view.TextureView): void;
					public getAnalyticsCollector(): com.google.android.exoplayer2.analytics.AnalyticsCollector;
					public getNextWindowIndex(): number;
					public getMediaItemCount(): number;
					public setVideoScalingMode(param0: number): void;
					public experimentalSetOffloadSchedulingEnabled(param0: boolean): void;
					public getVideoScalingMode(): number;
					public removeAudioListener(param0: com.google.android.exoplayer2.audio.AudioListener): void;
					public getTotalBufferedDuration(): number;
					public removeTextOutput(param0: com.google.android.exoplayer2.text.TextOutput): void;
					public isPlayingAd(): boolean;
					public clearVideoSurfaceView(param0: globalAndroid.view.SurfaceView): void;
					public setMediaSource(param0: com.google.android.exoplayer2.source.MediaSource, param1: boolean): void;
					public increaseDeviceVolume(): void;
					public setCameraMotionListener(param0: com.google.android.exoplayer2.video.spherical.CameraMotionListener): void;
					public setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
					public getCurrentTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
					public getCurrentManifest(): any;
					public isCurrentWindowDynamic(): boolean;
					public getVolume(): number;
					public addMediaItem(param0: com.google.android.exoplayer2.MediaItem): void;
					public setVideoFrameMetadataListener(param0: com.google.android.exoplayer2.video.VideoFrameMetadataListener): void;
					public setWakeMode(param0: number): void;
					public setVolume(param0: number): void;
					public getPauseAtEndOfMediaItems(): boolean;
					public clearAuxEffectInfo(): void;
					/** @deprecated */
					public getCurrentTag(): any;
					public clearMediaItems(): void;
					public setAuxEffectInfo(param0: com.google.android.exoplayer2.audio.AuxEffectInfo): void;
					public moveMediaItem(param0: number, param1: number): void;
					public setMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>, param1: number, param2: number): void;
					public getCurrentAdGroupIndex(): number;
					public setSkipSilenceEnabled(param0: boolean): void;
					public setMediaSources(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource>, param1: boolean): void;
					public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
					public next(): void;
					public getVideoFormat(): com.google.android.exoplayer2.Format;
					public removeMediaItem(param0: number): void;
					public getShuffleModeEnabled(): boolean;
					public getCurrentWindowIndex(): number;
					public getMediaItemAt(param0: number): com.google.android.exoplayer2.MediaItem;
					public getAudioSessionId(): number;
					public setMediaSource(param0: com.google.android.exoplayer2.source.MediaSource, param1: number): void;
					public addMediaItems(param0: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public stop(param0: boolean): void;
					public release(): void;
					public getCurrentAdIndexInAdGroup(): number;
					public isCurrentWindowSeekable(): boolean;
					public getCurrentLiveOffset(): number;
					public getSeekParameters(): com.google.android.exoplayer2.SeekParameters;
					public setShuffleModeEnabled(param0: boolean): void;
					public getTrackSelector(): com.google.android.exoplayer2.trackselection.TrackSelector;
					public stop(): void;
					public setForegroundMode(param0: boolean): void;
					public setPriorityTaskManager(param0: com.google.android.exoplayer2.util.PriorityTaskManager): void;
					public addDeviceListener(param0: com.google.android.exoplayer2.device.DeviceListener): void;
					public addMediaItems(param0: number, param1: java.util.List<com.google.android.exoplayer2.MediaItem>): void;
					public play(): void;
					public removeDeviceListener(param0: com.google.android.exoplayer2.device.DeviceListener): void;
					public setMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: boolean): void;
					public removeMediaItems(param0: number, param1: number): void;
					public isDeviceMuted(): boolean;
					public setVideoSurface(param0: globalAndroid.view.Surface): void;
					public experimentalIsSleepingForOffload(): boolean;
					public setAudioAttributes(param0: com.google.android.exoplayer2.audio.AudioAttributes, param1: boolean): void;
					public isLoading(): boolean;
					public getPlaybackLooper(): globalAndroid.os.Looper;
					public setMediaSource(param0: com.google.android.exoplayer2.source.MediaSource): void;
					public addMediaSource(param0: com.google.android.exoplayer2.source.MediaSource): void;
					public addTextOutput(param0: com.google.android.exoplayer2.text.TextOutput): void;
					public setVideoTextureView(param0: globalAndroid.view.TextureView): void;
					public setDeviceMuted(param0: boolean): void;
					public clearVideoSurface(param0: globalAndroid.view.Surface): void;
					public addAnalyticsListener(param0: com.google.android.exoplayer2.analytics.AnalyticsListener): void;
					/** @deprecated */
					public prepare(param0: com.google.android.exoplayer2.source.MediaSource, param1: boolean, param2: boolean): void;
					public getApplicationLooper(): globalAndroid.os.Looper;
					public getTextComponent(): com.google.android.exoplayer2.Player.TextComponent;
					public seekTo(param0: number, param1: number): void;
					public isPlaying(): boolean;
					public hasPrevious(): boolean;
					public addMediaSources(param0: number, param1: java.util.List<com.google.android.exoplayer2.source.MediaSource>): void;
					public setThrowsWhenUsingWrongThread(param0: boolean): void;
					public removeListener(param0: com.google.android.exoplayer2.Player.EventListener): void;
					public getCurrentPosition(): number;
					public removeMetadataOutput(param0: com.google.android.exoplayer2.metadata.MetadataOutput): void;
					public getCurrentCues(): java.util.List<com.google.android.exoplayer2.text.Cue>;
					public getCurrentTrackSelections(): com.google.android.exoplayer2.trackselection.TrackSelectionArray;
					public setMediaItem(param0: com.google.android.exoplayer2.MediaItem): void;
					public getCurrentMediaItem(): com.google.android.exoplayer2.MediaItem;
					public getVideoComponent(): com.google.android.exoplayer2.Player.VideoComponent;
					public setPauseAtEndOfMediaItems(param0: boolean): void;
					public setVideoSurfaceHolder(param0: globalAndroid.view.SurfaceHolder): void;
					public isCurrentWindowLive(): boolean;
					public clearVideoFrameMetadataListener(param0: com.google.android.exoplayer2.video.VideoFrameMetadataListener): void;
					public getBufferedPercentage(): number;
					public seekToDefaultPosition(): void;
					/** @deprecated */
					public stop(param0: boolean): void;
					public addMediaItem(param0: number, param1: com.google.android.exoplayer2.MediaItem): void;
					public setSeekParameters(param0: com.google.android.exoplayer2.SeekParameters): void;
					public getBufferedPosition(): number;
					public addMetadataOutput(param0: com.google.android.exoplayer2.metadata.MetadataOutput): void;
					public getRendererType(param0: number): number;
					public getContentDuration(): number;
				}
				export module SimpleExoPlayer {
					export class Builder {
						public static class: java.lang.Class<com.google.android.exoplayer2.SimpleExoPlayer.Builder>;
						public setWakeMode(param0: number): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.RenderersFactory, param2: com.google.android.exoplayer2.trackselection.TrackSelector, param3: com.google.android.exoplayer2.source.MediaSourceFactory, param4: com.google.android.exoplayer2.LoadControl, param5: com.google.android.exoplayer2.upstream.BandwidthMeter, param6: com.google.android.exoplayer2.analytics.AnalyticsCollector);
						public setSeekParameters(param0: com.google.android.exoplayer2.SeekParameters): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setAudioAttributes(param0: com.google.android.exoplayer2.audio.AudioAttributes, param1: boolean): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setDetachSurfaceTimeoutMs(param0: number): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.extractor.ExtractorsFactory);
						public setAnalyticsCollector(param0: com.google.android.exoplayer2.analytics.AnalyticsCollector): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setLooper(param0: globalAndroid.os.Looper): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setLivePlaybackSpeedControl(param0: com.google.android.exoplayer2.LivePlaybackSpeedControl): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.RenderersFactory, param2: com.google.android.exoplayer2.extractor.ExtractorsFactory);
						public setPriorityTaskManager(param0: com.google.android.exoplayer2.util.PriorityTaskManager): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setLoadControl(param0: com.google.android.exoplayer2.LoadControl): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setHandleAudioBecomingNoisy(param0: boolean): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setVideoScalingMode(param0: number): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setBandwidthMeter(param0: com.google.android.exoplayer2.upstream.BandwidthMeter): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public build(): com.google.android.exoplayer2.SimpleExoPlayer;
						public setUseLazyPreparation(param0: boolean): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setTrackSelector(param0: com.google.android.exoplayer2.trackselection.TrackSelector): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setMediaSourceFactory(param0: com.google.android.exoplayer2.source.MediaSourceFactory): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setReleaseTimeoutMs(param0: number): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setSkipSilenceEnabled(param0: boolean): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public setPauseAtEndOfMediaItems(param0: boolean): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.RenderersFactory);
						public setClock(param0: com.google.android.exoplayer2.util.Clock): com.google.android.exoplayer2.SimpleExoPlayer.Builder;
					}
					export class ComponentListener implements com.google.android.exoplayer2.video.VideoRendererEventListener, com.google.android.exoplayer2.audio.AudioRendererEventListener, com.google.android.exoplayer2.text.TextOutput, com.google.android.exoplayer2.metadata.MetadataOutput, com.google.android.exoplayer2.AudioFocusManager.PlayerControl, com.google.android.exoplayer2.AudioBecomingNoisyManager.EventListener, com.google.android.exoplayer2.StreamVolumeManager.Listener, com.google.android.exoplayer2.Player.EventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.SimpleExoPlayer.ComponentListener>;
						public onPlayerError(param0: com.google.android.exoplayer2.ExoPlaybackException): void;
						public onPlayWhenReadyChanged(param0: boolean, param1: number): void;
						public onVideoEnabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						/** @deprecated */
						public onVideoInputFormatChanged(param0: com.google.android.exoplayer2.Format): void;
						public onPlaybackSuppressionReasonChanged(param0: number): void;
						public onVideoDecoderInitialized(param0: string, param1: number, param2: number): void;
						public onStreamTypeChanged(param0: number): void;
						public onCues(param0: java.util.List<com.google.android.exoplayer2.text.Cue>): void;
						public surfaceDestroyed(param0: globalAndroid.view.SurfaceHolder): void;
						public onSurfaceTextureUpdated(param0: globalAndroid.graphics.SurfaceTexture): void;
						public onIsPlayingChanged(param0: boolean): void;
						public onAudioDecoderReleased(param0: string): void;
						public onStreamVolumeChanged(param0: number, param1: boolean): void;
						public onVideoDisabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public surfaceChanged(param0: globalAndroid.view.SurfaceHolder, param1: number, param2: number, param3: number): void;
						public onPlaybackStateChanged(param0: number): void;
						public onVideoInputFormatChanged(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
						public onAudioBecomingNoisy(): void;
						public onExperimentalSleepingForOffloadChanged(param0: boolean): void;
						public onDroppedFrames(param0: number, param1: number): void;
						public onShuffleModeEnabledChanged(param0: boolean): void;
						public onSurfaceTextureDestroyed(param0: globalAndroid.graphics.SurfaceTexture): boolean;
						public onAudioPositionAdvancing(param0: number): void;
						/** @deprecated */
						public onSeekProcessed(): void;
						public onAudioUnderrun(param0: number, param1: number, param2: number): void;
						public onSurfaceTextureAvailable(param0: globalAndroid.graphics.SurfaceTexture, param1: number, param2: number): void;
						public onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.Player.Events): void;
						public surfaceCreated(param0: globalAndroid.view.SurfaceHolder): void;
						public onAudioSinkError(param0: java.lang.Exception): void;
						public onIsLoadingChanged(param0: boolean): void;
						public executePlayerCommand(param0: number): void;
						public onRenderedFirstFrame(param0: globalAndroid.view.Surface): void;
						/** @deprecated */
						public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: any, param2: number): void;
						public onExperimentalOffloadSchedulingEnabledChanged(param0: boolean): void;
						public onSkipSilenceEnabledChanged(param0: boolean): void;
						public onVideoFrameProcessingOffset(param0: number, param1: number): void;
						public onRepeatModeChanged(param0: number): void;
						public onPositionDiscontinuity(param0: number): void;
						public onAudioDecoderInitialized(param0: string, param1: number, param2: number): void;
						public onAudioEnabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						/** @deprecated */
						public onLoadingChanged(param0: boolean): void;
						public onAudioInputFormatChanged(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
						public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.PlaybackParameters): void;
						/** @deprecated */
						public onAudioInputFormatChanged(param0: com.google.android.exoplayer2.Format): void;
						public onSurfaceTextureSizeChanged(param0: globalAndroid.graphics.SurfaceTexture, param1: number, param2: number): void;
						public onStaticMetadataChanged(param0: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
						public onVideoDecoderReleased(param0: string): void;
						public onVideoSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
						public onMetadata(param0: com.google.android.exoplayer2.metadata.Metadata): void;
						/** @deprecated */
						public onPlayerStateChanged(param0: boolean, param1: number): void;
						public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: number): void;
						public setVolumeMultiplier(param0: number): void;
						public onTracksChanged(param0: com.google.android.exoplayer2.source.TrackGroupArray, param1: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onAudioDisabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onMediaItemTransition(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class StreamVolumeManager {
					public static class: java.lang.Class<com.google.android.exoplayer2.StreamVolumeManager>;
					public increaseVolume(): void;
					public getMaxVolume(): number;
					public setMuted(param0: boolean): void;
					public isMuted(): boolean;
					public getVolume(): number;
					public decreaseVolume(): void;
					public release(): void;
					public setStreamType(param0: number): void;
					public setVolume(param0: number): void;
					public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.os.Handler, param2: com.google.android.exoplayer2.StreamVolumeManager.Listener);
					public getMinVolume(): number;
				}
				export module StreamVolumeManager {
					export class Listener {
						public static class: java.lang.Class<com.google.android.exoplayer2.StreamVolumeManager.Listener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.StreamVolumeManager$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onStreamTypeChanged(param0: number): void;
							onStreamVolumeChanged(param0: number, param1: boolean): void;
						});
						public constructor();
						public onStreamTypeChanged(param0: number): void;
						public onStreamVolumeChanged(param0: number, param1: boolean): void;
					}
					export class VolumeChangeReceiver {
						public static class: java.lang.Class<com.google.android.exoplayer2.StreamVolumeManager.VolumeChangeReceiver>;
						public onReceive(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export abstract class Timeline {
					public static class: java.lang.Class<com.google.android.exoplayer2.Timeline>;
					public static EMPTY: com.google.android.exoplayer2.Timeline;
					public getNextWindowIndex(param0: number, param1: number, param2: boolean): number;
					public isEmpty(): boolean;
					public getPeriodPosition(param0: com.google.android.exoplayer2.Timeline.Window, param1: com.google.android.exoplayer2.Timeline.Period, param2: number, param3: number, param4: number): globalAndroid.util.Pair<any,java.lang.Long>;
					public getPreviousWindowIndex(param0: number, param1: number, param2: boolean): number;
					public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period, param2: boolean): com.google.android.exoplayer2.Timeline.Period;
					public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
					public getPeriodByUid(param0: any, param1: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
					public getPeriodPosition(param0: com.google.android.exoplayer2.Timeline.Window, param1: com.google.android.exoplayer2.Timeline.Period, param2: number, param3: number): globalAndroid.util.Pair<any,java.lang.Long>;
					public getUidOfPeriod(param0: number): any;
					public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: number): com.google.android.exoplayer2.Timeline.Window;
					public getLastWindowIndex(param0: boolean): number;
					public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
					public isLastPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period, param2: com.google.android.exoplayer2.Timeline.Window, param3: number, param4: boolean): boolean;
					public getWindowCount(): number;
					public equals(param0: any): boolean;
					public constructor();
					/** @deprecated */
					public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: boolean): com.google.android.exoplayer2.Timeline.Window;
					public getFirstWindowIndex(param0: boolean): number;
					public getNextPeriodIndex(param0: number, param1: com.google.android.exoplayer2.Timeline.Period, param2: com.google.android.exoplayer2.Timeline.Window, param3: number, param4: boolean): number;
					public hashCode(): number;
					public getPeriodCount(): number;
					public getIndexOfPeriod(param0: any): number;
				}
				export module Timeline {
					export class Period {
						public static class: java.lang.Class<com.google.android.exoplayer2.Timeline.Period>;
						public id: any;
						public uid: any;
						public windowIndex: number;
						public durationUs: number;
						public getDurationUs(): number;
						public constructor();
						public getAdGroupIndexAfterPositionUs(param0: number): number;
						public getPositionInWindowUs(): number;
						public getFirstAdIndexToPlay(param0: number): number;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public getAdGroupCount(): number;
						public getAdResumePositionUs(): number;
						public getDurationMs(): number;
						public getAdCountInAdGroup(param0: number): number;
						public getNextAdIndexToPlay(param0: number, param1: number): number;
						public getAdGroupIndexForPositionUs(param0: number): number;
						public getPositionInWindowMs(): number;
						public set(param0: any, param1: any, param2: number, param3: number, param4: number, param5: com.google.android.exoplayer2.source.ads.AdPlaybackState): com.google.android.exoplayer2.Timeline.Period;
						public getAdGroupTimeUs(param0: number): number;
						public getAdDurationUs(param0: number, param1: number): number;
						public set(param0: any, param1: any, param2: number, param3: number, param4: number): com.google.android.exoplayer2.Timeline.Period;
						public getAdsId(): any;
						public hasPlayedAdGroup(param0: number): boolean;
					}
					export class Window {
						public static class: java.lang.Class<com.google.android.exoplayer2.Timeline.Window>;
						public static SINGLE_WINDOW_UID: any;
						public uid: any;
						public tag: any;
						public mediaItem: com.google.android.exoplayer2.MediaItem;
						public manifest: any;
						public presentationStartTimeMs: number;
						public windowStartTimeMs: number;
						public elapsedRealtimeEpochOffsetMs: number;
						public isSeekable: boolean;
						public isDynamic: boolean;
						public liveConfiguration: com.google.android.exoplayer2.MediaItem.LiveConfiguration;
						public isPlaceholder: boolean;
						public firstPeriodIndex: number;
						public lastPeriodIndex: number;
						public defaultPositionUs: number;
						public durationUs: number;
						public positionInFirstPeriodUs: number;
						public getDurationMs(): number;
						public getDurationUs(): number;
						public constructor();
						public getDefaultPositionMs(): number;
						public getDefaultPositionUs(): number;
						public set(param0: any, param1: com.google.android.exoplayer2.MediaItem, param2: any, param3: number, param4: number, param5: number, param6: boolean, param7: boolean, param8: com.google.android.exoplayer2.MediaItem.LiveConfiguration, param9: number, param10: number, param11: number, param12: number, param13: number): com.google.android.exoplayer2.Timeline.Window;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public getCurrentUnixTimeMs(): number;
						public getPositionInFirstPeriodMs(): number;
						public getPositionInFirstPeriodUs(): number;
						public isLive(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class WakeLockManager {
					public static class: java.lang.Class<com.google.android.exoplayer2.WakeLockManager>;
					public constructor(param0: globalAndroid.content.Context);
					public setEnabled(param0: boolean): void;
					public setStayAwake(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export class WifiLockManager {
					public static class: java.lang.Class<com.google.android.exoplayer2.WifiLockManager>;
					public constructor(param0: globalAndroid.content.Context);
					public setEnabled(param0: boolean): void;
					public setStayAwake(param0: boolean): void;
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module analytics {
					export class AnalyticsCollector implements com.google.android.exoplayer2.Player.EventListener, com.google.android.exoplayer2.audio.AudioRendererEventListener, com.google.android.exoplayer2.video.VideoRendererEventListener, com.google.android.exoplayer2.source.MediaSourceEventListener, com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener, com.google.android.exoplayer2.drm.DrmSessionEventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.analytics.AnalyticsCollector>;
						public onPlayerError(param0: com.google.android.exoplayer2.ExoPlaybackException): void;
						public onPlayWhenReadyChanged(param0: boolean, param1: number): void;
						public onSeekProcessed(): void;
						public onDrmSessionReleased(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onVideoEnabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public sendEvent(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.util.ListenerSet.Event<com.google.android.exoplayer2.analytics.AnalyticsListener>): void;
						/** @deprecated */
						public onVideoInputFormatChanged(param0: com.google.android.exoplayer2.Format): void;
						public onPlaybackSuppressionReasonChanged(param0: number): void;
						public updateMediaPeriodQueueInfo(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource.MediaPeriodId>, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onLoadCanceled(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onVideoDecoderInitialized(param0: string, param1: number, param2: number): void;
						public onDrmKeysRemoved(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onIsPlayingChanged(param0: boolean): void;
						public onAudioDecoderReleased(param0: string): void;
						public onVideoDisabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onDownstreamFormatChanged(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onPlaybackStateChanged(param0: number): void;
						public onVideoInputFormatChanged(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
						public onExperimentalSleepingForOffloadChanged(param0: boolean): void;
						public onDroppedFrames(param0: number, param1: number): void;
						public onShuffleModeEnabledChanged(param0: boolean): void;
						public onAudioPositionAdvancing(param0: number): void;
						public notifySeekStarted(): void;
						/** @deprecated */
						public onSeekProcessed(): void;
						public onAudioUnderrun(param0: number, param1: number, param2: number): void;
						public onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.Player.Events): void;
						public onAudioSinkError(param0: java.lang.Exception): void;
						public onLoadStarted(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onIsLoadingChanged(param0: boolean): void;
						public constructor(param0: com.google.android.exoplayer2.util.Clock);
						public removeListener(param0: com.google.android.exoplayer2.analytics.AnalyticsListener): void;
						public onLoadError(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData, param4: java.io.IOException, param5: boolean): void;
						public onRenderedFirstFrame(param0: globalAndroid.view.Surface): void;
						/** @deprecated */
						public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: any, param2: number): void;
						public onExperimentalOffloadSchedulingEnabledChanged(param0: boolean): void;
						public onSkipSilenceEnabledChanged(param0: boolean): void;
						public onVideoFrameProcessingOffset(param0: number, param1: number): void;
						public onRepeatModeChanged(param0: number): void;
						public onPositionDiscontinuity(param0: number): void;
						public onAudioDecoderInitialized(param0: string, param1: number, param2: number): void;
						public onAudioEnabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						/** @deprecated */
						public onLoadingChanged(param0: boolean): void;
						public addListener(param0: com.google.android.exoplayer2.analytics.AnalyticsListener): void;
						public onAudioInputFormatChanged(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
						public onVolumeChanged(param0: number): void;
						public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.PlaybackParameters): void;
						public onLoadCompleted(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
						/** @deprecated */
						public onAudioInputFormatChanged(param0: com.google.android.exoplayer2.Format): void;
						public onStaticMetadataChanged(param0: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
						public onDrmKeysRestored(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onVideoDecoderReleased(param0: string): void;
						public onMetadata(param0: com.google.android.exoplayer2.metadata.Metadata): void;
						public onVideoSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
						public onUpstreamDiscarded(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						public generateCurrentPlayerMediaPeriodEventTime(): com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime;
						public onDrmSessionAcquired(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						/** @deprecated */
						public onPlayerStateChanged(param0: boolean, param1: number): void;
						public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: number): void;
						public onDrmSessionManagerError(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: java.lang.Exception): void;
						public generateEventTime(param0: com.google.android.exoplayer2.Timeline, param1: number, param2: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime;
						public onAudioSessionIdChanged(param0: number): void;
						public onTracksChanged(param0: com.google.android.exoplayer2.source.TrackGroupArray, param1: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onPlayerStateChanged(param0: boolean, param1: number): void;
						public onAudioAttributesChanged(param0: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public onDrmKeysLoaded(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public release(): void;
						public onSurfaceSizeChanged(param0: number, param1: number): void;
						public onAudioDisabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public resetForNewPlaylist(): void;
						public onBandwidthSample(param0: number, param1: number, param2: number): void;
						public setPlayer(param0: com.google.android.exoplayer2.Player, param1: globalAndroid.os.Looper): void;
						public onMediaItemTransition(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
					}
					export module AnalyticsCollector {
						export class MediaPeriodQueueTracker {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.AnalyticsCollector.MediaPeriodQueueTracker>;
							public getReadingMediaPeriod(): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public getLoadingMediaPeriod(): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public getPlayingMediaPeriod(): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public onQueueUpdated(param0: java.util.List<com.google.android.exoplayer2.source.MediaSource.MediaPeriodId>, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.Player): void;
							public getCurrentPlayerMediaPeriod(): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public onPositionDiscontinuity(param0: com.google.android.exoplayer2.Player): void;
							public constructor(param0: com.google.android.exoplayer2.Timeline.Period);
							public getMediaPeriodIdTimeline(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.Timeline;
							public onTimelineChanged(param0: com.google.android.exoplayer2.Player): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module analytics {
					export class AnalyticsListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.analytics.AnalyticsListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.analytics.AnalyticsListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onPlayerStateChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean, param2: number): void;
							onPlaybackStateChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							onPlayWhenReadyChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean, param2: number): void;
							onPlaybackSuppressionReasonChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							onIsPlayingChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
							onTimelineChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							onMediaItemTransition(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.MediaItem, param2: number): void;
							onPositionDiscontinuity(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							onSeekStarted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							onSeekProcessed(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							onPlaybackParametersChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.PlaybackParameters): void;
							onRepeatModeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							onShuffleModeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
							onIsLoadingChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
							onLoadingChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
							onPlayerError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.ExoPlaybackException): void;
							onTracksChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.TrackGroupArray, param2: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
							onStaticMetadataChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
							onLoadStarted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
							onLoadCompleted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
							onLoadCanceled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
							onLoadError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData, param3: java.io.IOException, param4: boolean): void;
							onDownstreamFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.MediaLoadData): void;
							onUpstreamDiscarded(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.MediaLoadData): void;
							onBandwidthEstimate(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number, param3: number): void;
							onMetadata(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.metadata.Metadata): void;
							onDecoderEnabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onDecoderInitialized(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: string, param3: number): void;
							onDecoderInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.Format): void;
							onDecoderDisabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onAudioEnabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onAudioDecoderInitialized(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: number): void;
							onAudioInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format): void;
							onAudioInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
							onAudioPositionAdvancing(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							onAudioUnderrun(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number, param3: number): void;
							onAudioDecoderReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
							onAudioDisabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onAudioSessionIdChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							onAudioAttributesChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.audio.AudioAttributes): void;
							onSkipSilenceEnabledChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
							onAudioSinkError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.lang.Exception): void;
							onVolumeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							onVideoEnabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onVideoDecoderInitialized(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: number): void;
							onVideoInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format): void;
							onVideoInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
							onDroppedVideoFrames(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number): void;
							onVideoDecoderReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
							onVideoDisabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onVideoFrameProcessingOffset(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number): void;
							onRenderedFirstFrame(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: globalAndroid.view.Surface): void;
							onVideoSizeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number, param3: number, param4: number): void;
							onSurfaceSizeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number): void;
							onDrmSessionAcquired(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							onDrmKeysLoaded(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							onDrmSessionManagerError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.lang.Exception): void;
							onDrmKeysRestored(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							onDrmKeysRemoved(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							onDrmSessionReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							onPlayerReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.analytics.AnalyticsListener.Events): void;
						});
						public constructor();
						public static EVENT_AUDIO_DECODER_RELEASED: number;
						public static EVENT_DRM_KEYS_REMOVED: number;
						public static EVENT_POSITION_DISCONTINUITY: number;
						public static EVENT_TRACKS_CHANGED: number;
						public static EVENT_TIMELINE_CHANGED: number;
						public static EVENT_DRM_SESSION_RELEASED: number;
						public static EVENT_STATIC_METADATA_CHANGED: number;
						public static EVENT_AUDIO_ATTRIBUTES_CHANGED: number;
						public static EVENT_PLAYBACK_PARAMETERS_CHANGED: number;
						public static EVENT_UPSTREAM_DISCARDED: number;
						public static EVENT_DOWNSTREAM_FORMAT_CHANGED: number;
						public static EVENT_AUDIO_INPUT_FORMAT_CHANGED: number;
						public static EVENT_AUDIO_SESSION_ID: number;
						public static EVENT_DRM_SESSION_ACQUIRED: number;
						public static EVENT_SURFACE_SIZE_CHANGED: number;
						public static EVENT_PLAYER_ERROR: number;
						public static EVENT_LOAD_COMPLETED: number;
						public static EVENT_VIDEO_FRAME_PROCESSING_OFFSET: number;
						public static EVENT_AUDIO_UNDERRUN: number;
						public static EVENT_METADATA: number;
						public static EVENT_AUDIO_DECODER_INITIALIZED: number;
						public static EVENT_REPEAT_MODE_CHANGED: number;
						public static EVENT_AUDIO_ENABLED: number;
						public static EVENT_LOAD_STARTED: number;
						public static EVENT_VIDEO_DECODER_RELEASED: number;
						public static EVENT_VIDEO_SIZE_CHANGED: number;
						public static EVENT_IS_PLAYING_CHANGED: number;
						public static EVENT_PLAYER_RELEASED: number;
						public static EVENT_PLAYBACK_SUPPRESSION_REASON_CHANGED: number;
						public static EVENT_VIDEO_ENABLED: number;
						public static EVENT_VIDEO_DECODER_INITIALIZED: number;
						public static EVENT_PLAY_WHEN_READY_CHANGED: number;
						public static EVENT_AUDIO_DISABLED: number;
						public static EVENT_RENDERED_FIRST_FRAME: number;
						public static EVENT_VIDEO_DISABLED: number;
						public static EVENT_LOAD_ERROR: number;
						public static EVENT_SHUFFLE_MODE_ENABLED_CHANGED: number;
						public static EVENT_DRM_KEYS_LOADED: number;
						public static EVENT_MEDIA_ITEM_TRANSITION: number;
						public static EVENT_BANDWIDTH_ESTIMATE: number;
						public static EVENT_IS_LOADING_CHANGED: number;
						public static EVENT_VOLUME_CHANGED: number;
						public static EVENT_PLAYBACK_STATE_CHANGED: number;
						public static EVENT_DRM_KEYS_RESTORED: number;
						public static EVENT_DRM_SESSION_MANAGER_ERROR: number;
						public static EVENT_DROPPED_VIDEO_FRAMES: number;
						public static EVENT_SKIP_SILENCE_ENABLED_CHANGED: number;
						public static EVENT_AUDIO_SINK_ERROR: number;
						public static EVENT_AUDIO_POSITION_ADVANCING: number;
						public static EVENT_LOAD_CANCELED: number;
						public static EVENT_VIDEO_INPUT_FORMAT_CHANGED: number;
						public onVideoEnabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onUpstreamDiscarded(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onVolumeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onPlayerReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onAudioPositionAdvancing(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onVideoInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
						public onPlayerError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.ExoPlaybackException): void;
						/** @deprecated */
						public onPlayerStateChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean, param2: number): void;
						public onIsPlayingChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
						public onMediaItemTransition(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.MediaItem, param2: number): void;
						public onDroppedVideoFrames(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number): void;
						public onStaticMetadataChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
						/** @deprecated */
						public onDecoderInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.Format): void;
						public onDrmSessionReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onLoadCanceled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onSeekStarted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onAudioDecoderReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
						/** @deprecated */
						public onSeekProcessed(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onIsLoadingChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
						public onTimelineChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.analytics.AnalyticsListener.Events): void;
						public onVideoFrameProcessingOffset(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number): void;
						/** @deprecated */
						public onAudioInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format): void;
						/** @deprecated */
						public onDecoderDisabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onDownstreamFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onPlayWhenReadyChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean, param2: number): void;
						public onVideoDisabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onTracksChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.TrackGroupArray, param2: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onAudioInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
						public onLoadStarted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						/** @deprecated */
						public onVideoInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format): void;
						public onDrmKeysRemoved(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onPlaybackSuppressionReasonChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onBandwidthEstimate(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number, param3: number): void;
						public onLoadCompleted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onDrmKeysLoaded(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onLoadError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData, param3: java.io.IOException, param4: boolean): void;
						public onRepeatModeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onShuffleModeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
						/** @deprecated */
						public onDecoderEnabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onAudioDisabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onDrmKeysRestored(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onSkipSilenceEnabledChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
						public onDrmSessionAcquired(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onVideoDecoderInitialized(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: number): void;
						public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.PlaybackParameters): void;
						public onAudioAttributesChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public onSurfaceSizeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number): void;
						/** @deprecated */
						public onLoadingChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
						public onPositionDiscontinuity(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onDrmSessionManagerError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.lang.Exception): void;
						public onPlaybackStateChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onAudioSessionIdChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onAudioDecoderInitialized(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: number): void;
						public onAudioEnabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onVideoDecoderReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
						public onAudioSinkError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.lang.Exception): void;
						public onMetadata(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.metadata.Metadata): void;
						public onAudioUnderrun(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number, param3: number): void;
						public onRenderedFirstFrame(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: globalAndroid.view.Surface): void;
						/** @deprecated */
						public onDecoderInitialized(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: string, param3: number): void;
						public onVideoSizeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number, param3: number, param4: number): void;
					}
					export module AnalyticsListener {
						export class EventFlags {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.AnalyticsListener.EventFlags>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.analytics.AnalyticsListener$EventFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
						export class EventTime {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime>;
							public realtimeMs: number;
							public timeline: com.google.android.exoplayer2.Timeline;
							public windowIndex: number;
							public mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public eventPlaybackPositionMs: number;
							public currentTimeline: com.google.android.exoplayer2.Timeline;
							public currentWindowIndex: number;
							public currentMediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public currentPlaybackPositionMs: number;
							public totalBufferedDurationMs: number;
							public constructor(param0: number, param1: com.google.android.exoplayer2.Timeline, param2: number, param3: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param4: number, param5: com.google.android.exoplayer2.Timeline, param6: number, param7: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param8: number, param9: number);
							public hashCode(): number;
							public equals(param0: any): boolean;
						}
						export class Events extends com.google.android.exoplayer2.util.MutableFlags {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.AnalyticsListener.Events>;
							public constructor();
							public get(param0: number): number;
							public setEventTimes(param0: globalAndroid.util.SparseArray<com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime>): void;
							public getEventTime(param0: number): com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime;
							public containsAny(param0: androidNative.Array<number>): boolean;
							public contains(param0: number): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module analytics {
					export class DefaultPlaybackSessionManager extends com.google.android.exoplayer2.analytics.PlaybackSessionManager {
						public static class: java.lang.Class<com.google.android.exoplayer2.analytics.DefaultPlaybackSessionManager>;
						public static DEFAULT_SESSION_ID_GENERATOR: com.google.common.base.Supplier<string>;
						public belongsToSession(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): boolean;
						public updateSessionsWithTimelineChange(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public constructor();
						public constructor(param0: com.google.common.base.Supplier<string>);
						public finishAllSessions(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public setListener(param0: com.google.android.exoplayer2.analytics.PlaybackSessionManager.Listener): void;
						public getSessionForMediaPeriodId(param0: com.google.android.exoplayer2.Timeline, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): string;
						public updateSessionsWithDiscontinuity(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public updateSessions(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
					}
					export module DefaultPlaybackSessionManager {
						export class SessionDescriptor {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.DefaultPlaybackSessionManager.SessionDescriptor>;
							public isFinishedAtEventTime(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): boolean;
							public constructor(param0: com.google.android.exoplayer2.analytics.DefaultPlaybackSessionManager, param1: string, param2: number, param3: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId);
							public belongsToSession(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): boolean;
							public tryResolvingToNewTimeline(param0: com.google.android.exoplayer2.Timeline, param1: com.google.android.exoplayer2.Timeline): boolean;
							public maybeSetWindowSequenceNumber(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module analytics {
					export class PlaybackSessionManager {
						public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackSessionManager>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.analytics.PlaybackSessionManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setListener(param0: com.google.android.exoplayer2.analytics.PlaybackSessionManager.Listener): void;
							getSessionForMediaPeriodId(param0: com.google.android.exoplayer2.Timeline, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): string;
							belongsToSession(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): boolean;
							updateSessions(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							updateSessionsWithTimelineChange(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							updateSessionsWithDiscontinuity(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							finishAllSessions(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						});
						public constructor();
						public belongsToSession(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): boolean;
						public updateSessionsWithTimelineChange(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public finishAllSessions(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public setListener(param0: com.google.android.exoplayer2.analytics.PlaybackSessionManager.Listener): void;
						public getSessionForMediaPeriodId(param0: com.google.android.exoplayer2.Timeline, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): string;
						public updateSessionsWithDiscontinuity(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public updateSessions(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
					}
					export module PlaybackSessionManager {
						export class Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackSessionManager.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.analytics.PlaybackSessionManager$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onSessionCreated(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
								onSessionActive(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
								onAdPlaybackStarted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: string): void;
								onSessionFinished(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: boolean): void;
							});
							public constructor();
							public onSessionActive(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
							public onSessionFinished(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: boolean): void;
							public onAdPlaybackStarted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: string): void;
							public onSessionCreated(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module analytics {
					export class PlaybackStats {
						public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackStats>;
						public static PLAYBACK_STATE_NOT_STARTED: number;
						public static PLAYBACK_STATE_JOINING_BACKGROUND: number;
						public static PLAYBACK_STATE_JOINING_FOREGROUND: number;
						public static PLAYBACK_STATE_PLAYING: number;
						public static PLAYBACK_STATE_PAUSED: number;
						public static PLAYBACK_STATE_SEEKING: number;
						public static PLAYBACK_STATE_BUFFERING: number;
						public static PLAYBACK_STATE_PAUSED_BUFFERING: number;
						public static PLAYBACK_STATE_SUPPRESSED: number;
						public static PLAYBACK_STATE_SUPPRESSED_BUFFERING: number;
						public static PLAYBACK_STATE_ENDED: number;
						public static PLAYBACK_STATE_STOPPED: number;
						public static PLAYBACK_STATE_FAILED: number;
						public static PLAYBACK_STATE_INTERRUPTED_BY_AD: number;
						public static PLAYBACK_STATE_ABANDONED: number;
						public static EMPTY: com.google.android.exoplayer2.analytics.PlaybackStats;
						public playbackCount: number;
						public playbackStateHistory: java.util.List<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndPlaybackState>;
						public mediaTimeHistory: java.util.List<native.Array<number>>;
						public firstReportedTimeMs: number;
						public foregroundPlaybackCount: number;
						public abandonedBeforeReadyCount: number;
						public endedCount: number;
						public backgroundJoiningCount: number;
						public totalValidJoinTimeMs: number;
						public validJoinTimeCount: number;
						public totalPauseCount: number;
						public totalPauseBufferCount: number;
						public totalSeekCount: number;
						public totalRebufferCount: number;
						public maxRebufferTimeMs: number;
						public adPlaybackCount: number;
						public videoFormatHistory: java.util.List<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndFormat>;
						public audioFormatHistory: java.util.List<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndFormat>;
						public totalVideoFormatHeightTimeMs: number;
						public totalVideoFormatHeightTimeProduct: number;
						public totalVideoFormatBitrateTimeMs: number;
						public totalVideoFormatBitrateTimeProduct: number;
						public totalAudioFormatTimeMs: number;
						public totalAudioFormatBitrateTimeProduct: number;
						public initialVideoFormatHeightCount: number;
						public initialVideoFormatBitrateCount: number;
						public totalInitialVideoFormatHeight: number;
						public totalInitialVideoFormatBitrate: number;
						public initialAudioFormatBitrateCount: number;
						public totalInitialAudioFormatBitrate: number;
						public totalBandwidthTimeMs: number;
						public totalBandwidthBytes: number;
						public totalDroppedFrames: number;
						public totalAudioUnderruns: number;
						public fatalErrorPlaybackCount: number;
						public fatalErrorCount: number;
						public nonFatalErrorCount: number;
						public fatalErrorHistory: java.util.List<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndException>;
						public nonFatalErrorHistory: java.util.List<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndException>;
						public getMeanSeekTimeMs(): number;
						public getMeanTimeBetweenRebuffers(): number;
						public getMeanInitialVideoFormatBitrate(): number;
						public getMediaTimeMsAtRealtimeMs(param0: number): number;
						public getMeanSingleRebufferTimeMs(): number;
						public getAudioUnderrunRate(): number;
						public getJoinTimeRatio(): number;
						public getMeanTimeBetweenFatalErrors(): number;
						public getMeanVideoFormatHeight(): number;
						public getTotalElapsedTimeMs(): number;
						public getWaitTimeRatio(): number;
						public getFatalErrorRate(): number;
						public getTotalPlayTimeMs(): number;
						public getMeanNonFatalErrorCount(): number;
						public getMeanPlayTimeMs(): number;
						public getPlaybackStateDurationMs(param0: number): number;
						public getFatalErrorRatio(): number;
						public getDroppedFramesRate(): number;
						public getMeanWaitTimeMs(): number;
						public getMeanJoinTimeMs(): number;
						public getMeanElapsedTimeMs(): number;
						public getTotalPlayAndWaitTimeMs(): number;
						public getMeanPauseCount(): number;
						public getRebufferTimeRatio(): number;
						public getMeanPauseBufferCount(): number;
						public getMeanTimeBetweenNonFatalErrors(): number;
						public getRebufferRate(): number;
						public static merge(param0: androidNative.Array<com.google.android.exoplayer2.analytics.PlaybackStats>): com.google.android.exoplayer2.analytics.PlaybackStats;
						public getMeanInitialAudioFormatBitrate(): number;
						public getAbandonedBeforeReadyRatio(): number;
						public getMeanPausedTimeMs(): number;
						public getTotalWaitTimeMs(): number;
						public getTotalPausedTimeMs(): number;
						public getMeanRebufferCount(): number;
						public getTotalSeekTimeMs(): number;
						public getTotalRebufferTimeMs(): number;
						public getMeanBandwidth(): number;
						public getMeanRebufferTimeMs(): number;
						public getMeanVideoFormatBitrate(): number;
						public getMeanAudioFormatBitrate(): number;
						public getPlaybackStateAtTime(param0: number): number;
						public getSeekTimeRatio(): number;
						public getNonFatalErrorRate(): number;
						public getMeanSingleSeekTimeMs(): number;
						public getMeanPlayAndWaitTimeMs(): number;
						public getMeanSeekCount(): number;
						public getEndedRatio(): number;
						public getTotalJoinTimeMs(): number;
						public getMeanInitialVideoFormatHeight(): number;
					}
					export module PlaybackStats {
						export class EventTimeAndException {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndException>;
							public eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime;
							public exception: java.lang.Exception;
							public constructor(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.lang.Exception);
							public hashCode(): number;
							public equals(param0: any): boolean;
						}
						export class EventTimeAndFormat {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndFormat>;
							public eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime;
							public format: com.google.android.exoplayer2.Format;
							public hashCode(): number;
							public equals(param0: any): boolean;
							public constructor(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format);
						}
						export class EventTimeAndPlaybackState {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackStats.EventTimeAndPlaybackState>;
							public eventTime: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime;
							public playbackState: number;
							public hashCode(): number;
							public constructor(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number);
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module analytics {
					export class PlaybackStatsListener implements com.google.android.exoplayer2.analytics.AnalyticsListener, com.google.android.exoplayer2.analytics.PlaybackSessionManager.Listener {
						public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackStatsListener>;
						public onVideoEnabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onUpstreamDiscarded(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onVolumeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onPlayerReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onAudioPositionAdvancing(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onVideoInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
						public onPlayerError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.ExoPlaybackException): void;
						/** @deprecated */
						public onPlayerStateChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean, param2: number): void;
						public onIsPlayingChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
						public onMediaItemTransition(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.MediaItem, param2: number): void;
						public onDroppedVideoFrames(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number): void;
						public constructor(param0: boolean, param1: com.google.android.exoplayer2.analytics.PlaybackStatsListener.Callback);
						public onStaticMetadataChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
						/** @deprecated */
						public onDecoderInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.Format): void;
						public onDrmSessionReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onLoadCanceled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onSeekStarted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onAudioDecoderReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
						public onSessionFinished(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: boolean): void;
						/** @deprecated */
						public onSeekProcessed(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onSessionActive(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
						public onIsLoadingChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
						public onTimelineChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.analytics.AnalyticsListener.Events): void;
						public onVideoFrameProcessingOffset(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number): void;
						/** @deprecated */
						public onAudioInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format): void;
						/** @deprecated */
						public onDecoderDisabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onDownstreamFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onPlayWhenReadyChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean, param2: number): void;
						public onVideoDisabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onTracksChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.TrackGroupArray, param2: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onAudioInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
						public onAdPlaybackStarted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: string): void;
						public onLoadStarted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						/** @deprecated */
						public onVideoInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format): void;
						public onDrmKeysRemoved(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onBandwidthEstimate(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number, param3: number): void;
						public onPlaybackSuppressionReasonChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public getPlaybackStats(): com.google.android.exoplayer2.analytics.PlaybackStats;
						public onLoadCompleted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						public getCombinedPlaybackStats(): com.google.android.exoplayer2.analytics.PlaybackStats;
						public onDrmKeysLoaded(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onLoadError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData, param3: java.io.IOException, param4: boolean): void;
						public onRepeatModeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onShuffleModeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
						/** @deprecated */
						public onDecoderEnabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onAudioDisabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onDrmKeysRestored(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onSessionCreated(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
						public onSkipSilenceEnabledChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
						public onDrmSessionAcquired(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onVideoDecoderInitialized(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: number): void;
						public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.PlaybackParameters): void;
						public onAudioAttributesChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public onSurfaceSizeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number): void;
						/** @deprecated */
						public onLoadingChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
						public onPositionDiscontinuity(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onDrmSessionManagerError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.lang.Exception): void;
						public onPlaybackStateChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onAudioSessionIdChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onAudioDecoderInitialized(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: number): void;
						public onAudioEnabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onVideoDecoderReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
						public onAudioSinkError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.lang.Exception): void;
						public onMetadata(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.metadata.Metadata): void;
						public onAudioUnderrun(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number, param3: number): void;
						public onRenderedFirstFrame(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: globalAndroid.view.Surface): void;
						/** @deprecated */
						public onDecoderInitialized(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: string, param3: number): void;
						public onVideoSizeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number, param3: number, param4: number): void;
					}
					export module PlaybackStatsListener {
						export class Callback {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackStatsListener.Callback>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.analytics.PlaybackStatsListener$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPlaybackStatsReady(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.analytics.PlaybackStats): void;
							});
							public constructor();
							public onPlaybackStatsReady(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.analytics.PlaybackStats): void;
						}
						export class PlaybackStatsTracker {
							public static class: java.lang.Class<com.google.android.exoplayer2.analytics.PlaybackStatsListener.PlaybackStatsTracker>;
							public build(param0: boolean): com.google.android.exoplayer2.analytics.PlaybackStats;
							public onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param2: boolean, param3: boolean, param4: boolean, param5: number, param6: boolean, param7: boolean, param8: com.google.android.exoplayer2.ExoPlaybackException, param9: java.lang.Exception, param10: number, param11: number, param12: com.google.android.exoplayer2.Format, param13: com.google.android.exoplayer2.Format, param14: number, param15: number): void;
							public onFinished(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
							public constructor(param0: boolean, param1: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime);
							public onForeground(): void;
							public onInterruptedByAd(): void;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AacUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AacUtil>;
						public static AAC_LC_AUDIO_SAMPLE_COUNT: number;
						public static AAC_XHE_AUDIO_SAMPLE_COUNT: number;
						public static AAC_HE_AUDIO_SAMPLE_COUNT: number;
						public static AAC_LD_AUDIO_SAMPLE_COUNT: number;
						public static AAC_LC_MAX_RATE_BYTES_PER_SECOND: number;
						public static AAC_HE_V1_MAX_RATE_BYTES_PER_SECOND: number;
						public static AAC_HE_V2_MAX_RATE_BYTES_PER_SECOND: number;
						public static AAC_XHE_MAX_RATE_BYTES_PER_SECOND: number;
						public static AAC_ELD_MAX_RATE_BYTES_PER_SECOND: number;
						public static AUDIO_OBJECT_TYPE_AAC_LC: number;
						public static AUDIO_OBJECT_TYPE_AAC_SBR: number;
						public static AUDIO_OBJECT_TYPE_AAC_ER_BSAC: number;
						public static AUDIO_OBJECT_TYPE_AAC_ELD: number;
						public static AUDIO_OBJECT_TYPE_AAC_PS: number;
						public static AUDIO_OBJECT_TYPE_AAC_XHE: number;
						public static buildAacLcAudioSpecificConfig(param0: number, param1: number): androidNative.Array<number>;
						public static parseAudioSpecificConfig(param0: com.google.android.exoplayer2.util.ParsableBitArray, param1: boolean): com.google.android.exoplayer2.audio.AacUtil.Config;
						public static getEncodingForAudioObjectType(param0: number): number;
						public static buildAudioSpecificConfig(param0: number, param1: number, param2: number): androidNative.Array<number>;
						public static parseAudioSpecificConfig(param0: androidNative.Array<number>): com.google.android.exoplayer2.audio.AacUtil.Config;
					}
					export module AacUtil {
						export class AacAudioObjectType {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AacUtil.AacAudioObjectType>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.audio.AacUtil$AacAudioObjectType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
						export class Config {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AacUtil.Config>;
							public sampleRateHz: number;
							public channelCount: number;
							public codecs: string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class Ac3Util {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.Ac3Util>;
						public static AC3_MAX_RATE_BYTES_PER_SECOND: number;
						public static E_AC3_MAX_RATE_BYTES_PER_SECOND: number;
						public static TRUEHD_MAX_RATE_BYTES_PER_SECOND: number;
						public static TRUEHD_RECHUNK_SAMPLE_COUNT: number;
						public static TRUEHD_SYNCFRAME_PREFIX_LENGTH: number;
						public static parseAc3SyncframeInfo(param0: com.google.android.exoplayer2.util.ParsableBitArray): com.google.android.exoplayer2.audio.Ac3Util.SyncFrameInfo;
						public static parseTrueHdSyncframeAudioSampleCount(param0: androidNative.Array<number>): number;
						public static parseAc3SyncframeAudioSampleCount(param0: java.nio.ByteBuffer): number;
						public static findTrueHdSyncframeOffset(param0: java.nio.ByteBuffer): number;
						public static parseTrueHdSyncframeAudioSampleCount(param0: java.nio.ByteBuffer, param1: number): number;
						public static parseEAc3AnnexFFormat(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: string, param2: string, param3: com.google.android.exoplayer2.drm.DrmInitData): com.google.android.exoplayer2.Format;
						public static parseAc3AnnexFFormat(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: string, param2: string, param3: com.google.android.exoplayer2.drm.DrmInitData): com.google.android.exoplayer2.Format;
						public static parseAc3SyncframeSize(param0: androidNative.Array<number>): number;
					}
					export module Ac3Util {
						export class SyncFrameInfo {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.Ac3Util.SyncFrameInfo>;
							public static STREAM_TYPE_UNDEFINED: number;
							public static STREAM_TYPE_TYPE0: number;
							public static STREAM_TYPE_TYPE1: number;
							public static STREAM_TYPE_TYPE2: number;
							public mimeType: string;
							public streamType: number;
							public sampleRate: number;
							public channelCount: number;
							public frameSize: number;
							public sampleCount: number;
						}
						export module SyncFrameInfo {
							export class StreamType {
								public static class: java.lang.Class<com.google.android.exoplayer2.audio.Ac3Util.SyncFrameInfo.StreamType>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.audio.Ac3Util$SyncFrameInfo$StreamType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class Ac4Util {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.Ac4Util>;
						public static AC40_SYNCWORD: number;
						public static AC41_SYNCWORD: number;
						public static MAX_RATE_BYTES_PER_SECOND: number;
						public static SAMPLE_HEADER_SIZE: number;
						public static HEADER_SIZE_FOR_PARSER: number;
						public static parseAc4SyncframeSize(param0: androidNative.Array<number>, param1: number): number;
						public static parseAc4AnnexEFormat(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: string, param2: string, param3: com.google.android.exoplayer2.drm.DrmInitData): com.google.android.exoplayer2.Format;
						public static getAc4SampleHeader(param0: number, param1: com.google.android.exoplayer2.util.ParsableByteArray): void;
						public static parseAc4SyncframeAudioSampleCount(param0: java.nio.ByteBuffer): number;
						public static parseAc4SyncframeInfo(param0: com.google.android.exoplayer2.util.ParsableBitArray): com.google.android.exoplayer2.audio.Ac4Util.SyncFrameInfo;
					}
					export module Ac4Util {
						export class SyncFrameInfo {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.Ac4Util.SyncFrameInfo>;
							public bitstreamVersion: number;
							public sampleRate: number;
							public channelCount: number;
							public frameSize: number;
							public sampleCount: number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioAttributes {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioAttributes>;
						public static DEFAULT: com.google.android.exoplayer2.audio.AudioAttributes;
						public contentType: number;
						public flags: number;
						public usage: number;
						public allowedCapturePolicy: number;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public getAudioAttributesV21(): any;
					}
					export module AudioAttributes {
						export class Builder {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioAttributes.Builder>;
							public constructor();
							public setUsage(param0: number): com.google.android.exoplayer2.audio.AudioAttributes.Builder;
							public setContentType(param0: number): com.google.android.exoplayer2.audio.AudioAttributes.Builder;
							public setAllowedCapturePolicy(param0: number): com.google.android.exoplayer2.audio.AudioAttributes.Builder;
							public setFlags(param0: number): com.google.android.exoplayer2.audio.AudioAttributes.Builder;
							public build(): com.google.android.exoplayer2.audio.AudioAttributes;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioCapabilities {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioCapabilities>;
						public static DEFAULT_AUDIO_CAPABILITIES: com.google.android.exoplayer2.audio.AudioCapabilities;
						public getMaxChannelCount(): number;
						public constructor(param0: androidNative.Array<number>, param1: number);
						public supportsEncoding(param0: number): boolean;
						public static getCapabilities(param0: globalAndroid.content.Context): com.google.android.exoplayer2.audio.AudioCapabilities;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioCapabilitiesReceiver {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver>;
						public unregister(): void;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver.Listener);
						public register(): com.google.android.exoplayer2.audio.AudioCapabilities;
					}
					export module AudioCapabilitiesReceiver {
						export class ExternalSurroundSoundSettingObserver {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver.ExternalSurroundSoundSettingObserver>;
							public unregister(): void;
							public onChange(param0: boolean): void;
							public constructor(param0: com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver, param1: globalAndroid.os.Handler, param2: globalAndroid.content.ContentResolver, param3: globalAndroid.net.Uri);
							public register(): void;
						}
						export class HdmiAudioPlugBroadcastReceiver {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver.HdmiAudioPlugBroadcastReceiver>;
							public onReceive(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): void;
						}
						export class Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioCapabilitiesReceiver$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onAudioCapabilitiesChanged(param0: com.google.android.exoplayer2.audio.AudioCapabilities): void;
							});
							public constructor();
							public onAudioCapabilitiesChanged(param0: com.google.android.exoplayer2.audio.AudioCapabilities): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onAudioSessionIdChanged(param0: number): void;
							onAudioAttributesChanged(param0: com.google.android.exoplayer2.audio.AudioAttributes): void;
							onVolumeChanged(param0: number): void;
							onSkipSilenceEnabledChanged(param0: boolean): void;
						});
						public constructor();
						public onAudioAttributesChanged(param0: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public onVolumeChanged(param0: number): void;
						public onSkipSilenceEnabledChanged(param0: boolean): void;
						public onAudioSessionIdChanged(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioProcessor>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioProcessor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							configure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
							isActive(): boolean;
							queueInput(param0: java.nio.ByteBuffer): void;
							queueEndOfStream(): void;
							getOutput(): java.nio.ByteBuffer;
							isEnded(): boolean;
							flush(): void;
							reset(): void;
							<clinit>(): void;
						});
						public constructor();
						public static EMPTY_BUFFER: java.nio.ByteBuffer;
						public queueEndOfStream(): void;
						public getOutput(): java.nio.ByteBuffer;
						public flush(): void;
						public queueInput(param0: java.nio.ByteBuffer): void;
						public isEnded(): boolean;
						public reset(): void;
						public configure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public isActive(): boolean;
					}
					export module AudioProcessor {
						export class AudioFormat {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat>;
							public static NOT_SET: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
							public sampleRate: number;
							public channelCount: number;
							public encoding: number;
							public bytesPerFrame: number;
							public constructor(param0: number, param1: number, param2: number);
							public toString(): string;
						}
						export class UnhandledAudioFormatException {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioProcessor.UnhandledAudioFormatException>;
							public constructor(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioRendererEventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioRendererEventListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioRendererEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onAudioEnabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onAudioDecoderInitialized(param0: string, param1: number, param2: number): void;
							onAudioInputFormatChanged(param0: com.google.android.exoplayer2.Format): void;
							onAudioInputFormatChanged(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
							onAudioPositionAdvancing(param0: number): void;
							onAudioUnderrun(param0: number, param1: number, param2: number): void;
							onAudioDecoderReleased(param0: string): void;
							onAudioDisabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onSkipSilenceEnabledChanged(param0: boolean): void;
							onAudioSinkError(param0: java.lang.Exception): void;
						});
						public constructor();
						public onAudioEnabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						/** @deprecated */
						public onAudioInputFormatChanged(param0: com.google.android.exoplayer2.Format): void;
						public onAudioSinkError(param0: java.lang.Exception): void;
						public onAudioInputFormatChanged(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
						public onAudioPositionAdvancing(param0: number): void;
						public onSkipSilenceEnabledChanged(param0: boolean): void;
						public onAudioUnderrun(param0: number, param1: number, param2: number): void;
						public onAudioDecoderReleased(param0: string): void;
						public onAudioDisabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onAudioDecoderInitialized(param0: string, param1: number, param2: number): void;
					}
					export module AudioRendererEventListener {
						export class EventDispatcher {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioRendererEventListener.EventDispatcher>;
							public audioSinkError(param0: java.lang.Exception): void;
							public constructor(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.audio.AudioRendererEventListener);
							public skipSilenceEnabledChanged(param0: boolean): void;
							public enabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							public underrun(param0: number, param1: number, param2: number): void;
							public disabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							public decoderInitialized(param0: string, param1: number, param2: number): void;
							public decoderReleased(param0: string): void;
							public inputFormatChanged(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
							public positionAdvancing(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioSink {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioSink>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioSink interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setListener(param0: com.google.android.exoplayer2.audio.AudioSink.Listener): void;
							supportsFormat(param0: com.google.android.exoplayer2.Format): boolean;
							getFormatSupport(param0: com.google.android.exoplayer2.Format): number;
							getCurrentPositionUs(param0: boolean): number;
							configure(param0: com.google.android.exoplayer2.Format, param1: number, param2: androidNative.Array<number>): void;
							play(): void;
							handleDiscontinuity(): void;
							handleBuffer(param0: java.nio.ByteBuffer, param1: number, param2: number): boolean;
							playToEndOfStream(): void;
							isEnded(): boolean;
							hasPendingData(): boolean;
							setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
							getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
							setSkipSilenceEnabled(param0: boolean): void;
							getSkipSilenceEnabled(): boolean;
							setAudioAttributes(param0: com.google.android.exoplayer2.audio.AudioAttributes): void;
							setAudioSessionId(param0: number): void;
							setAuxEffectInfo(param0: com.google.android.exoplayer2.audio.AuxEffectInfo): void;
							enableTunnelingV21(): void;
							disableTunneling(): void;
							setVolume(param0: number): void;
							pause(): void;
							flush(): void;
							experimentalFlushWithoutAudioTrackRelease(): void;
							reset(): void;
						});
						public constructor();
						public static SINK_FORMAT_UNSUPPORTED: number;
						public static SINK_FORMAT_SUPPORTED_DIRECTLY: number;
						public static CURRENT_POSITION_NOT_SET: number;
						public static SINK_FORMAT_SUPPORTED_WITH_TRANSCODING: number;
						public setAudioAttributes(param0: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public pause(): void;
						public handleDiscontinuity(): void;
						public getFormatSupport(param0: com.google.android.exoplayer2.Format): number;
						public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						public setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
						public setAuxEffectInfo(param0: com.google.android.exoplayer2.audio.AuxEffectInfo): void;
						public hasPendingData(): boolean;
						public setListener(param0: com.google.android.exoplayer2.audio.AudioSink.Listener): void;
						public isEnded(): boolean;
						public disableTunneling(): void;
						public setAudioSessionId(param0: number): void;
						public getCurrentPositionUs(param0: boolean): number;
						public playToEndOfStream(): void;
						public experimentalFlushWithoutAudioTrackRelease(): void;
						public flush(): void;
						public setSkipSilenceEnabled(param0: boolean): void;
						public handleBuffer(param0: java.nio.ByteBuffer, param1: number, param2: number): boolean;
						public supportsFormat(param0: com.google.android.exoplayer2.Format): boolean;
						public configure(param0: com.google.android.exoplayer2.Format, param1: number, param2: androidNative.Array<number>): void;
						public enableTunnelingV21(): void;
						public play(): void;
						public setVolume(param0: number): void;
						public reset(): void;
						public getSkipSilenceEnabled(): boolean;
					}
					export module AudioSink {
						export class ConfigurationException {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioSink.ConfigurationException>;
							public format: com.google.android.exoplayer2.Format;
							public constructor(param0: string, param1: com.google.android.exoplayer2.Format);
							public constructor(param0: java.lang.Throwable, param1: com.google.android.exoplayer2.Format);
						}
						export class InitializationException {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioSink.InitializationException>;
							public audioTrackState: number;
							public isRecoverable: boolean;
							public format: com.google.android.exoplayer2.Format;
							public constructor(param0: number, param1: number, param2: number, param3: number, param4: com.google.android.exoplayer2.Format, param5: boolean, param6: java.lang.Exception);
						}
						export class Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioSink.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioSink$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPositionDiscontinuity(): void;
								onPositionAdvancing(param0: number): void;
								onUnderrun(param0: number, param1: number, param2: number): void;
								onSkipSilenceEnabledChanged(param0: boolean): void;
								onOffloadBufferEmptying(): void;
								onOffloadBufferFull(param0: number): void;
								onAudioSinkError(param0: java.lang.Exception): void;
							});
							public constructor();
							public onPositionAdvancing(param0: number): void;
							public onOffloadBufferEmptying(): void;
							public onSkipSilenceEnabledChanged(param0: boolean): void;
							public onOffloadBufferFull(param0: number): void;
							public onAudioSinkError(param0: java.lang.Exception): void;
							public onPositionDiscontinuity(): void;
							public onUnderrun(param0: number, param1: number, param2: number): void;
						}
						export class SinkFormatSupport {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioSink.SinkFormatSupport>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioSink$SinkFormatSupport interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
						export class WriteException {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioSink.WriteException>;
							public errorCode: number;
							public isRecoverable: boolean;
							public format: com.google.android.exoplayer2.Format;
							public constructor(param0: number, param1: com.google.android.exoplayer2.Format, param2: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioTimestampPoller {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioTimestampPoller>;
						public getTimestampPositionFrames(): number;
						public acceptTimestamp(): void;
						public hasTimestamp(): boolean;
						public maybePollTimestamp(param0: number): boolean;
						public rejectTimestamp(): void;
						public hasAdvancingTimestamp(): boolean;
						public getTimestampSystemTimeUs(): number;
						public constructor(param0: globalAndroid.media.AudioTrack);
						public reset(): void;
					}
					export module AudioTimestampPoller {
						export class AudioTimestampV19 {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioTimestampPoller.AudioTimestampV19>;
							public getTimestampSystemTimeUs(): number;
							public maybeUpdateTimestamp(): boolean;
							public constructor(param0: globalAndroid.media.AudioTrack);
							public getTimestampPositionFrames(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AudioTrackPositionTracker {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioTrackPositionTracker>;
						public constructor(param0: com.google.android.exoplayer2.audio.AudioTrackPositionTracker.Listener);
						public getCurrentPositionUs(param0: boolean): number;
						public getPendingBufferDurationMs(param0: number): number;
						public isPlaying(): boolean;
						public setAudioTrackPlaybackSpeed(param0: number): void;
						public setAudioTrack(param0: globalAndroid.media.AudioTrack, param1: boolean, param2: number, param3: number, param4: number): void;
						public pause(): boolean;
						public mayHandleBuffer(param0: number): boolean;
						public hasPendingData(param0: number): boolean;
						public isStalled(param0: number): boolean;
						public start(): void;
						public handleEndOfStream(param0: number): void;
						public getAvailableBufferSize(param0: number): number;
						public reset(): void;
					}
					export module AudioTrackPositionTracker {
						export class Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.AudioTrackPositionTracker.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.audio.AudioTrackPositionTracker$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPositionAdvancing(param0: number): void;
								onPositionFramesMismatch(param0: number, param1: number, param2: number, param3: number): void;
								onSystemTimeUsMismatch(param0: number, param1: number, param2: number, param3: number): void;
								onInvalidLatency(param0: number): void;
								onUnderrun(param0: number, param1: number): void;
							});
							public constructor();
							public onPositionAdvancing(param0: number): void;
							public onSystemTimeUsMismatch(param0: number, param1: number, param2: number, param3: number): void;
							public onUnderrun(param0: number, param1: number): void;
							public onInvalidLatency(param0: number): void;
							public onPositionFramesMismatch(param0: number, param1: number, param2: number, param3: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class AuxEffectInfo {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.AuxEffectInfo>;
						public static NO_AUX_EFFECT_ID: number;
						public effectId: number;
						public sendLevel: number;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public constructor(param0: number, param1: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export abstract class BaseAudioProcessor extends com.google.android.exoplayer2.audio.AudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.BaseAudioProcessor>;
						public inputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public outputAudioFormat: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public constructor();
						public queueEndOfStream(): void;
						public onConfigure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public flush(): void;
						public queueInput(param0: java.nio.ByteBuffer): void;
						public onQueueEndOfStream(): void;
						public replaceOutputBuffer(param0: number): java.nio.ByteBuffer;
						public configure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public hasPendingOutput(): boolean;
						public onFlush(): void;
						public getOutput(): java.nio.ByteBuffer;
						public onReset(): void;
						public isEnded(): boolean;
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class ChannelMappingAudioProcessor extends com.google.android.exoplayer2.audio.BaseAudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.ChannelMappingAudioProcessor>;
						public setChannelMap(param0: androidNative.Array<number>): void;
						public onFlush(): void;
						public queueEndOfStream(): void;
						public getOutput(): java.nio.ByteBuffer;
						public onConfigure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public onReset(): void;
						public flush(): void;
						public queueInput(param0: java.nio.ByteBuffer): void;
						public isEnded(): boolean;
						public reset(): void;
						public configure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export abstract class DecoderAudioRenderer<T>  extends com.google.android.exoplayer2.BaseRenderer implements com.google.android.exoplayer2.util.MediaClock  {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.DecoderAudioRenderer<any>>;
						public sinkSupportsFormat(param0: com.google.android.exoplayer2.Format): boolean;
						public onPositionReset(param0: number, param1: boolean): void;
						public getPositionUs(): number;
						public canReuseDecoder(param0: string, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.decoder.DecoderReuseEvaluation;
						public static create(param0: number): number;
						public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						public experimentalSetEnableKeepAudioTrackOnSeek(param0: boolean): void;
						public static getTunnelingSupport(param0: number): number;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public onDisabled(): void;
						public isEnded(): boolean;
						public setPlaybackSpeed(param0: number, param1: number): void;
						public constructor();
						public onPositionDiscontinuity(): void;
						public setCurrentStreamFinal(): void;
						public isReady(): boolean;
						public disable(): void;
						public handleMessage(param0: number, param1: any): void;
						public supportsFormat(param0: com.google.android.exoplayer2.Format): number;
						public start(): void;
						public getState(): number;
						public onStopped(): void;
						public getReadingPositionUs(): number;
						public reset(): void;
						public constructor(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.audio.AudioRendererEventListener, param2: com.google.android.exoplayer2.audio.AudioSink);
						public onStarted(): void;
						public render(param0: number, param1: number): void;
						public getName(): string;
						public replaceStream(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: com.google.android.exoplayer2.source.SampleStream, param2: number, param3: number): void;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
						public static getAdaptiveSupport(param0: number): number;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public getOutputFormat(param0: any): com.google.android.exoplayer2.Format;
						public resetPosition(param0: number): void;
						public constructor(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.audio.AudioRendererEventListener, param2: com.google.android.exoplayer2.audio.AudioCapabilities, param3: androidNative.Array<com.google.android.exoplayer2.audio.AudioProcessor>);
						public createDecoder(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.drm.ExoMediaCrypto): any;
						public enable(param0: com.google.android.exoplayer2.RendererConfiguration, param1: androidNative.Array<com.google.android.exoplayer2.Format>, param2: com.google.android.exoplayer2.source.SampleStream, param3: number, param4: boolean, param5: boolean, param6: number, param7: number): void;
						public hasReadStreamToEnd(): boolean;
						public setIndex(param0: number): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public getSinkFormatSupport(param0: com.google.android.exoplayer2.Format): number;
						public onEnabled(param0: boolean, param1: boolean): void;
						public static getFormatSupport(param0: number): number;
						public constructor(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.audio.AudioRendererEventListener, param2: androidNative.Array<com.google.android.exoplayer2.audio.AudioProcessor>);
						public static create(param0: number, param1: number, param2: number): number;
						public constructor(param0: number);
						public maybeThrowStreamError(): void;
						public supportsFormatInternal(param0: com.google.android.exoplayer2.Format): number;
					}
					export module DecoderAudioRenderer {
						export class AudioSinkListener extends com.google.android.exoplayer2.audio.AudioSink.Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DecoderAudioRenderer.AudioSinkListener>;
							public onPositionAdvancing(param0: number): void;
							public onOffloadBufferEmptying(): void;
							public onSkipSilenceEnabledChanged(param0: boolean): void;
							public onOffloadBufferFull(param0: number): void;
							public onAudioSinkError(param0: java.lang.Exception): void;
							public onPositionDiscontinuity(): void;
							public onUnderrun(param0: number, param1: number, param2: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class DefaultAudioSink extends com.google.android.exoplayer2.audio.AudioSink {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink>;
						public static DEFAULT_PLAYBACK_SPEED: number;
						public static MIN_PLAYBACK_SPEED: number;
						public static MAX_PLAYBACK_SPEED: number;
						public static MIN_PITCH: number;
						public static MAX_PITCH: number;
						public static failOnSpuriousAudioTimestamp: boolean;
						public setAudioAttributes(param0: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public pause(): void;
						public constructor(param0: com.google.android.exoplayer2.audio.AudioCapabilities, param1: androidNative.Array<com.google.android.exoplayer2.audio.AudioProcessor>);
						public handleDiscontinuity(): void;
						public getFormatSupport(param0: com.google.android.exoplayer2.Format): number;
						public constructor(param0: com.google.android.exoplayer2.audio.AudioCapabilities, param1: com.google.android.exoplayer2.audio.DefaultAudioSink.AudioProcessorChain, param2: boolean, param3: boolean, param4: boolean);
						public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						public setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
						public setAuxEffectInfo(param0: com.google.android.exoplayer2.audio.AuxEffectInfo): void;
						public hasPendingData(): boolean;
						public setListener(param0: com.google.android.exoplayer2.audio.AudioSink.Listener): void;
						public isEnded(): boolean;
						public disableTunneling(): void;
						public setAudioSessionId(param0: number): void;
						public getCurrentPositionUs(param0: boolean): number;
						public playToEndOfStream(): void;
						public experimentalFlushWithoutAudioTrackRelease(): void;
						public flush(): void;
						public setSkipSilenceEnabled(param0: boolean): void;
						public handleBuffer(param0: java.nio.ByteBuffer, param1: number, param2: number): boolean;
						public supportsFormat(param0: com.google.android.exoplayer2.Format): boolean;
						public configure(param0: com.google.android.exoplayer2.Format, param1: number, param2: androidNative.Array<number>): void;
						public constructor(param0: com.google.android.exoplayer2.audio.AudioCapabilities, param1: androidNative.Array<com.google.android.exoplayer2.audio.AudioProcessor>, param2: boolean);
						public enableTunnelingV21(): void;
						public play(): void;
						public setVolume(param0: number): void;
						public reset(): void;
						public getSkipSilenceEnabled(): boolean;
					}
					export module DefaultAudioSink {
						export class AudioProcessorChain {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink.AudioProcessorChain>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.audio.DefaultAudioSink$AudioProcessorChain interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getAudioProcessors(): androidNative.Array<com.google.android.exoplayer2.audio.AudioProcessor>;
								applyPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): com.google.android.exoplayer2.PlaybackParameters;
								applySkipSilenceEnabled(param0: boolean): boolean;
								getMediaDuration(param0: number): number;
								getSkippedOutputFrameCount(): number;
							});
							public constructor();
							public applySkipSilenceEnabled(param0: boolean): boolean;
							public getAudioProcessors(): androidNative.Array<com.google.android.exoplayer2.audio.AudioProcessor>;
							public getMediaDuration(param0: number): number;
							public getSkippedOutputFrameCount(): number;
							public applyPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): com.google.android.exoplayer2.PlaybackParameters;
						}
						export class Configuration {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink.Configuration>;
							public inputFormat: com.google.android.exoplayer2.Format;
							public inputPcmFrameSize: number;
							public outputMode: number;
							public outputPcmFrameSize: number;
							public outputSampleRate: number;
							public outputChannelConfig: number;
							public outputEncoding: number;
							public bufferSize: number;
							public availableAudioProcessors: androidNative.Array<com.google.android.exoplayer2.audio.AudioProcessor>;
							public constructor(param0: com.google.android.exoplayer2.Format, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: boolean, param9: androidNative.Array<com.google.android.exoplayer2.audio.AudioProcessor>);
							public buildAudioTrack(param0: boolean, param1: com.google.android.exoplayer2.audio.AudioAttributes, param2: number): globalAndroid.media.AudioTrack;
							public inputFramesToDurationUs(param0: number): number;
							public canReuseAudioTrack(param0: com.google.android.exoplayer2.audio.DefaultAudioSink.Configuration): boolean;
							public outputModeIsOffload(): boolean;
							public framesToDurationUs(param0: number): number;
							public durationUsToFrames(param0: number): number;
						}
						export class DefaultAudioProcessorChain extends com.google.android.exoplayer2.audio.DefaultAudioSink.AudioProcessorChain {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink.DefaultAudioProcessorChain>;
							public applySkipSilenceEnabled(param0: boolean): boolean;
							public constructor(param0: androidNative.Array<com.google.android.exoplayer2.audio.AudioProcessor>);
							public constructor(param0: androidNative.Array<com.google.android.exoplayer2.audio.AudioProcessor>, param1: com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor, param2: com.google.android.exoplayer2.audio.SonicAudioProcessor);
							public getAudioProcessors(): androidNative.Array<com.google.android.exoplayer2.audio.AudioProcessor>;
							public getMediaDuration(param0: number): number;
							public getSkippedOutputFrameCount(): number;
							public applyPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): com.google.android.exoplayer2.PlaybackParameters;
						}
						export class InvalidAudioTrackTimestampException {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink.InvalidAudioTrackTimestampException>;
						}
						export class MediaPositionParameters {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink.MediaPositionParameters>;
							public playbackParameters: com.google.android.exoplayer2.PlaybackParameters;
							public skipSilence: boolean;
							public mediaTimeUs: number;
							public audioTrackPositionUs: number;
						}
						export class PendingExceptionHolder<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink.PendingExceptionHolder<any>>;
							public clear(): void;
							public throwExceptionIfDeadlineIsReached(param0: T): void;
							public constructor(param0: number);
						}
						export class PositionTrackerListener extends com.google.android.exoplayer2.audio.AudioTrackPositionTracker.Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink.PositionTrackerListener>;
							public onPositionAdvancing(param0: number): void;
							public onSystemTimeUsMismatch(param0: number, param1: number, param2: number, param3: number): void;
							public onUnderrun(param0: number, param1: number): void;
							public onInvalidLatency(param0: number): void;
							public onPositionFramesMismatch(param0: number, param1: number, param2: number, param3: number): void;
						}
						export class StreamEventCallbackV29 {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.DefaultAudioSink.StreamEventCallbackV29>;
							public unregister(param0: globalAndroid.media.AudioTrack): void;
							public constructor(param0: com.google.android.exoplayer2.audio.DefaultAudioSink);
							public register(param0: globalAndroid.media.AudioTrack): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class DtsUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.DtsUtil>;
						public static DTS_MAX_RATE_BYTES_PER_SECOND: number;
						public static DTS_HD_MAX_RATE_BYTES_PER_SECOND: number;
						public static parseDtsFormat(param0: androidNative.Array<number>, param1: string, param2: string, param3: com.google.android.exoplayer2.drm.DrmInitData): com.google.android.exoplayer2.Format;
						public static parseDtsAudioSampleCount(param0: androidNative.Array<number>): number;
						public static isSyncWord(param0: number): boolean;
						public static parseDtsAudioSampleCount(param0: java.nio.ByteBuffer): number;
						public static getDtsFrameSize(param0: androidNative.Array<number>): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class FloatResamplingAudioProcessor extends com.google.android.exoplayer2.audio.BaseAudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.FloatResamplingAudioProcessor>;
						public queueEndOfStream(): void;
						public getOutput(): java.nio.ByteBuffer;
						public onConfigure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public flush(): void;
						public queueInput(param0: java.nio.ByteBuffer): void;
						public isEnded(): boolean;
						public reset(): void;
						public configure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class ForwardingAudioSink extends com.google.android.exoplayer2.audio.AudioSink {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.ForwardingAudioSink>;
						public setAudioAttributes(param0: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public pause(): void;
						public handleDiscontinuity(): void;
						public getFormatSupport(param0: com.google.android.exoplayer2.Format): number;
						public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						public setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
						public setAuxEffectInfo(param0: com.google.android.exoplayer2.audio.AuxEffectInfo): void;
						public hasPendingData(): boolean;
						public setListener(param0: com.google.android.exoplayer2.audio.AudioSink.Listener): void;
						public isEnded(): boolean;
						public disableTunneling(): void;
						public setAudioSessionId(param0: number): void;
						public getCurrentPositionUs(param0: boolean): number;
						public playToEndOfStream(): void;
						public experimentalFlushWithoutAudioTrackRelease(): void;
						public flush(): void;
						public setSkipSilenceEnabled(param0: boolean): void;
						public handleBuffer(param0: java.nio.ByteBuffer, param1: number, param2: number): boolean;
						public supportsFormat(param0: com.google.android.exoplayer2.Format): boolean;
						public configure(param0: com.google.android.exoplayer2.Format, param1: number, param2: androidNative.Array<number>): void;
						public constructor(param0: com.google.android.exoplayer2.audio.AudioSink);
						public enableTunnelingV21(): void;
						public play(): void;
						public setVolume(param0: number): void;
						public reset(): void;
						public getSkipSilenceEnabled(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class MediaCodecAudioRenderer extends com.google.android.exoplayer2.mediacodec.MediaCodecRenderer implements com.google.android.exoplayer2.util.MediaClock {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.MediaCodecAudioRenderer>;
						public supportsFormat(param0: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param1: com.google.android.exoplayer2.Format): number;
						public constructor(param0: number, param1: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter.Factory, param2: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param3: boolean, param4: number);
						public onPositionReset(param0: number, param1: boolean): void;
						public getPositionUs(): number;
						public static create(param0: number): number;
						public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						public experimentalSetEnableKeepAudioTrackOnSeek(param0: boolean): void;
						public static getTunnelingSupport(param0: number): number;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public onDisabled(): void;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param2: globalAndroid.os.Handler, param3: com.google.android.exoplayer2.audio.AudioRendererEventListener);
						public isEnded(): boolean;
						public getDecoderInfos(param0: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param1: com.google.android.exoplayer2.Format, param2: boolean): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
						public setPlaybackSpeed(param0: number, param1: number): void;
						public onPositionDiscontinuity(): void;
						public setCurrentStreamFinal(): void;
						public getCodecOperatingRateV23(param0: number, param1: com.google.android.exoplayer2.Format, param2: androidNative.Array<com.google.android.exoplayer2.Format>): number;
						public isReady(): boolean;
						public disable(): void;
						public processOutputBuffer(param0: number, param1: number, param2: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, param3: java.nio.ByteBuffer, param4: number, param5: number, param6: number, param7: number, param8: boolean, param9: boolean, param10: com.google.android.exoplayer2.Format): boolean;
						public onCodecInitialized(param0: string, param1: number, param2: number): void;
						public handleMessage(param0: number, param1: any): void;
						public canReuseCodec(param0: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.decoder.DecoderReuseEvaluation;
						public supportsFormat(param0: com.google.android.exoplayer2.Format): number;
						public start(): void;
						public getState(): number;
						public configureCodec(param0: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, param1: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, param2: com.google.android.exoplayer2.Format, param3: globalAndroid.media.MediaCrypto, param4: number): void;
						public onReset(): void;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param2: globalAndroid.os.Handler, param3: com.google.android.exoplayer2.audio.AudioRendererEventListener, param4: com.google.android.exoplayer2.audio.AudioSink);
						public onStopped(): void;
						public getReadingPositionUs(): number;
						public reset(): void;
						public getCodecMaxInputSize(param0: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, param1: com.google.android.exoplayer2.Format, param2: androidNative.Array<com.google.android.exoplayer2.Format>): number;
						public onQueueInputBuffer(param0: com.google.android.exoplayer2.decoder.DecoderInputBuffer): void;
						public onStarted(): void;
						public render(param0: number, param1: number): void;
						public getName(): string;
						public replaceStream(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: com.google.android.exoplayer2.source.SampleStream, param2: number, param3: number): void;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public getMediaFormat(param0: com.google.android.exoplayer2.Format, param1: string, param2: number, param3: number): globalAndroid.media.MediaFormat;
						public shouldUseBypass(param0: com.google.android.exoplayer2.Format): boolean;
						public setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
						public static getAdaptiveSupport(param0: number): number;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.mediacodec.MediaCodecSelector);
						public onCodecReleased(param0: string): void;
						public onInputFormatChanged(param0: com.google.android.exoplayer2.FormatHolder): com.google.android.exoplayer2.decoder.DecoderReuseEvaluation;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param2: globalAndroid.os.Handler, param3: com.google.android.exoplayer2.audio.AudioRendererEventListener, param4: com.google.android.exoplayer2.audio.AudioCapabilities, param5: androidNative.Array<com.google.android.exoplayer2.audio.AudioProcessor>);
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter.Factory, param2: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param3: boolean, param4: globalAndroid.os.Handler, param5: com.google.android.exoplayer2.audio.AudioRendererEventListener, param6: com.google.android.exoplayer2.audio.AudioSink);
						public resetPosition(param0: number): void;
						public enable(param0: com.google.android.exoplayer2.RendererConfiguration, param1: androidNative.Array<com.google.android.exoplayer2.Format>, param2: com.google.android.exoplayer2.source.SampleStream, param3: number, param4: boolean, param5: boolean, param6: number, param7: number): void;
						public hasReadStreamToEnd(): boolean;
						public setIndex(param0: number): void;
						public onProcessedStreamChange(): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public onOutputFormatChanged(param0: com.google.android.exoplayer2.Format, param1: globalAndroid.media.MediaFormat): void;
						public onEnabled(param0: boolean, param1: boolean): void;
						public static getFormatSupport(param0: number): number;
						public static create(param0: number, param1: number, param2: number): number;
						public constructor(param0: number);
						public maybeThrowStreamError(): void;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param2: boolean, param3: globalAndroid.os.Handler, param4: com.google.android.exoplayer2.audio.AudioRendererEventListener, param5: com.google.android.exoplayer2.audio.AudioSink);
						public renderToEndOfStream(): void;
					}
					export module MediaCodecAudioRenderer {
						export class AudioSinkListener extends com.google.android.exoplayer2.audio.AudioSink.Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.MediaCodecAudioRenderer.AudioSinkListener>;
							public onPositionAdvancing(param0: number): void;
							public onOffloadBufferEmptying(): void;
							public onSkipSilenceEnabledChanged(param0: boolean): void;
							public onOffloadBufferFull(param0: number): void;
							public onAudioSinkError(param0: java.lang.Exception): void;
							public onPositionDiscontinuity(): void;
							public onUnderrun(param0: number, param1: number, param2: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class MpegAudioUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.MpegAudioUtil>;
						public static MAX_FRAME_SIZE_BYTES: number;
						public static MAX_RATE_BYTES_PER_SECOND: number;
						public static getFrameSize(param0: number): number;
						public static parseMpegAudioFrameSampleCount(param0: number): number;
					}
					export module MpegAudioUtil {
						export class Header {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.MpegAudioUtil.Header>;
							public version: number;
							public mimeType: string;
							public frameSize: number;
							public sampleRate: number;
							public channels: number;
							public bitrate: number;
							public samplesPerFrame: number;
							public constructor();
							public setForHeaderData(param0: number): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class OpusUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.OpusUtil>;
						public static SAMPLE_RATE: number;
						public static buildInitializationData(param0: androidNative.Array<number>): java.util.List<native.Array<number>>;
						public static getSeekPreRollSamples(param0: java.util.List<native.Array<number>>): number;
						public static getPreSkipSamples(param0: java.util.List<native.Array<number>>): number;
						public static getChannelCount(param0: androidNative.Array<number>): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class ResamplingAudioProcessor extends com.google.android.exoplayer2.audio.BaseAudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.ResamplingAudioProcessor>;
						public queueEndOfStream(): void;
						public getOutput(): java.nio.ByteBuffer;
						public onConfigure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public flush(): void;
						public queueInput(param0: java.nio.ByteBuffer): void;
						public isEnded(): boolean;
						public reset(): void;
						public configure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class SilenceSkippingAudioProcessor extends com.google.android.exoplayer2.audio.BaseAudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.SilenceSkippingAudioProcessor>;
						public static DEFAULT_MINIMUM_SILENCE_DURATION_US: number;
						public static DEFAULT_PADDING_SILENCE_US: number;
						public static DEFAULT_SILENCE_THRESHOLD_LEVEL: number;
						public constructor();
						public queueEndOfStream(): void;
						public onConfigure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public flush(): void;
						public queueInput(param0: java.nio.ByteBuffer): void;
						public onQueueEndOfStream(): void;
						public setEnabled(param0: boolean): void;
						public configure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public onFlush(): void;
						public getOutput(): java.nio.ByteBuffer;
						public getSkippedFrames(): number;
						public onReset(): void;
						public isEnded(): boolean;
						public constructor(param0: number, param1: number, param2: number);
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class Sonic {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.Sonic>;
						public queueEndOfStream(): void;
						public getPendingInputBytes(): number;
						public queueInput(param0: java.nio.ShortBuffer): void;
						public flush(): void;
						public getOutputSize(): number;
						public constructor(param0: number, param1: number, param2: number, param3: number, param4: number);
						public getOutput(param0: java.nio.ShortBuffer): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class SonicAudioProcessor extends com.google.android.exoplayer2.audio.AudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.SonicAudioProcessor>;
						public static SAMPLE_RATE_NO_CHANGE: number;
						public constructor();
						public queueEndOfStream(): void;
						public setPitch(param0: number): void;
						public flush(): void;
						public queueInput(param0: java.nio.ByteBuffer): void;
						public configure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public setSpeed(param0: number): void;
						public getOutput(): java.nio.ByteBuffer;
						public getMediaDuration(param0: number): number;
						public setOutputSampleRateHz(param0: number): void;
						public isEnded(): boolean;
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class TeeAudioProcessor extends com.google.android.exoplayer2.audio.BaseAudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.TeeAudioProcessor>;
						public constructor();
						public queueEndOfStream(): void;
						public onConfigure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public flush(): void;
						public queueInput(param0: java.nio.ByteBuffer): void;
						public onQueueEndOfStream(): void;
						public configure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public onFlush(): void;
						public getOutput(): java.nio.ByteBuffer;
						public onReset(): void;
						public isEnded(): boolean;
						public constructor(param0: com.google.android.exoplayer2.audio.TeeAudioProcessor.AudioBufferSink);
						public reset(): void;
						public isActive(): boolean;
					}
					export module TeeAudioProcessor {
						export class AudioBufferSink {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.TeeAudioProcessor.AudioBufferSink>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.audio.TeeAudioProcessor$AudioBufferSink interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								flush(param0: number, param1: number, param2: number): void;
								handleBuffer(param0: java.nio.ByteBuffer): void;
							});
							public constructor();
							public flush(param0: number, param1: number, param2: number): void;
							public handleBuffer(param0: java.nio.ByteBuffer): void;
						}
						export class WavFileAudioBufferSink extends com.google.android.exoplayer2.audio.TeeAudioProcessor.AudioBufferSink {
							public static class: java.lang.Class<com.google.android.exoplayer2.audio.TeeAudioProcessor.WavFileAudioBufferSink>;
							public flush(param0: number, param1: number, param2: number): void;
							public handleBuffer(param0: java.nio.ByteBuffer): void;
							public constructor(param0: string);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class TrimmingAudioProcessor extends com.google.android.exoplayer2.audio.BaseAudioProcessor {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.TrimmingAudioProcessor>;
						public constructor();
						public queueEndOfStream(): void;
						public onConfigure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public flush(): void;
						public queueInput(param0: java.nio.ByteBuffer): void;
						public onQueueEndOfStream(): void;
						public configure(param0: com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat): com.google.android.exoplayer2.audio.AudioProcessor.AudioFormat;
						public setTrimFrameCount(param0: number, param1: number): void;
						public onFlush(): void;
						public getOutput(): java.nio.ByteBuffer;
						public resetTrimmedFrameCount(): void;
						public getTrimmedFrameCount(): number;
						public onReset(): void;
						public isEnded(): boolean;
						public reset(): void;
						public isActive(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module audio {
					export class WavUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.audio.WavUtil>;
						public static RIFF_FOURCC: number;
						public static WAVE_FOURCC: number;
						public static FMT_FOURCC: number;
						public static DATA_FOURCC: number;
						public static TYPE_PCM: number;
						public static TYPE_FLOAT: number;
						public static TYPE_ALAW: number;
						public static TYPE_MLAW: number;
						public static TYPE_IMA_ADPCM: number;
						public static TYPE_WAVE_FORMAT_EXTENSIBLE: number;
						public static getTypeForPcmEncoding(param0: number): number;
						public static getPcmEncodingForType(param0: number, param1: number): number;
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module common {
					export class BuildConfig {
						public static class: java.lang.Class<com.google.android.exoplayer2.common.BuildConfig>;
						public static DEBUG: boolean;
						public static LIBRARY_PACKAGE_NAME: string;
						public static APPLICATION_ID: string;
						public static BUILD_TYPE: string;
						public static FLAVOR: string;
						public static VERSION_CODE: number;
						public static VERSION_NAME: string;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module core {
					export class BuildConfig {
						public static class: java.lang.Class<com.google.android.exoplayer2.core.BuildConfig>;
						public static DEBUG: boolean;
						public static LIBRARY_PACKAGE_NAME: string;
						public static APPLICATION_ID: string;
						public static BUILD_TYPE: string;
						public static FLAVOR: string;
						public static VERSION_CODE: number;
						public static VERSION_NAME: string;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module database {
					export class DatabaseIOException {
						public static class: java.lang.Class<com.google.android.exoplayer2.database.DatabaseIOException>;
						public constructor(param0: globalAndroid.database.SQLException, param1: string);
						public constructor(param0: globalAndroid.database.SQLException);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module database {
					export class DatabaseProvider {
						public static class: java.lang.Class<com.google.android.exoplayer2.database.DatabaseProvider>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.database.DatabaseProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getWritableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
							getReadableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
						});
						public constructor();
						public static TABLE_PREFIX: string;
						public getWritableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
						public getReadableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module database {
					export class DefaultDatabaseProvider extends com.google.android.exoplayer2.database.DatabaseProvider {
						public static class: java.lang.Class<com.google.android.exoplayer2.database.DefaultDatabaseProvider>;
						public constructor(param0: globalAndroid.database.sqlite.SQLiteOpenHelper);
						public getWritableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
						public getReadableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module database {
					export class ExoDatabaseProvider implements com.google.android.exoplayer2.database.DatabaseProvider {
						public static class: java.lang.Class<com.google.android.exoplayer2.database.ExoDatabaseProvider>;
						public static DATABASE_NAME: string;
						public constructor(param0: globalAndroid.content.Context);
						public onUpgrade(param0: globalAndroid.database.sqlite.SQLiteDatabase, param1: number, param2: number): void;
						public onDowngrade(param0: globalAndroid.database.sqlite.SQLiteDatabase, param1: number, param2: number): void;
						public getWritableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
						public onCreate(param0: globalAndroid.database.sqlite.SQLiteDatabase): void;
						public getReadableDatabase(): globalAndroid.database.sqlite.SQLiteDatabase;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module database {
					export class VersionTable {
						public static class: java.lang.Class<com.google.android.exoplayer2.database.VersionTable>;
						public static VERSION_UNSET: number;
						public static FEATURE_OFFLINE: number;
						public static FEATURE_CACHE_CONTENT_METADATA: number;
						public static FEATURE_CACHE_FILE_METADATA: number;
						public static FEATURE_EXTERNAL: number;
						public static setVersion(param0: globalAndroid.database.sqlite.SQLiteDatabase, param1: number, param2: string, param3: number): void;
						public static removeVersion(param0: globalAndroid.database.sqlite.SQLiteDatabase, param1: number, param2: string): void;
						public static getVersion(param0: globalAndroid.database.sqlite.SQLiteDatabase, param1: number, param2: string): number;
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export abstract class Buffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.Buffer>;
						public clearFlag(param0: number): void;
						public constructor();
						public getFlag(param0: number): boolean;
						public isKeyFrame(): boolean;
						public isDecodeOnly(): boolean;
						public addFlag(param0: number): void;
						public clear(): void;
						public isEndOfStream(): boolean;
						public hasSupplementalData(): boolean;
						public setFlags(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export class CryptoInfo {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.CryptoInfo>;
						public iv: androidNative.Array<number>;
						public key: androidNative.Array<number>;
						public mode: number;
						public numBytesOfClearData: androidNative.Array<number>;
						public numBytesOfEncryptedData: androidNative.Array<number>;
						public numSubSamples: number;
						public encryptedBlocks: number;
						public clearBlocks: number;
						public getFrameworkCryptoInfo(): globalAndroid.media.MediaCodec.CryptoInfo;
						public increaseClearDataFirstSubSampleBy(param0: number): void;
						public constructor();
						public set(param0: number, param1: androidNative.Array<number>, param2: androidNative.Array<number>, param3: androidNative.Array<number>, param4: androidNative.Array<number>, param5: number, param6: number, param7: number): void;
						/** @deprecated */
						public getFrameworkCryptoInfoV16(): globalAndroid.media.MediaCodec.CryptoInfo;
					}
					export module CryptoInfo {
						export class PatternHolderV24 {
							public static class: java.lang.Class<com.google.android.exoplayer2.decoder.CryptoInfo.PatternHolderV24>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export class Decoder<I, O, E>  extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.Decoder<any,any,any>>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.decoder.Decoder<any,any,any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getName(): string;
							dequeueInputBuffer(): I;
							queueInputBuffer(param0: I): void;
							dequeueOutputBuffer(): O;
							flush(): void;
							release(): void;
						});
						public constructor();
						public dequeueOutputBuffer(): O;
						public dequeueInputBuffer(): I;
						public queueInputBuffer(param0: I): void;
						public flush(): void;
						public release(): void;
						public getName(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export class DecoderCounters {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.DecoderCounters>;
						public decoderInitCount: number;
						public decoderReleaseCount: number;
						public inputBufferCount: number;
						public skippedInputBufferCount: number;
						public renderedOutputBufferCount: number;
						public skippedOutputBufferCount: number;
						public droppedBufferCount: number;
						public maxConsecutiveDroppedBufferCount: number;
						public droppedToKeyframeCount: number;
						public totalVideoFrameProcessingOffsetUs: number;
						public videoFrameProcessingOffsetCount: number;
						public constructor();
						public merge(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public addVideoFrameProcessingOffset(param0: number): void;
						public ensureUpdated(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export class DecoderException {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.DecoderException>;
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export class DecoderInputBuffer extends com.google.android.exoplayer2.decoder.Buffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.DecoderInputBuffer>;
						public static BUFFER_REPLACEMENT_MODE_DISABLED: number;
						public static BUFFER_REPLACEMENT_MODE_NORMAL: number;
						public static BUFFER_REPLACEMENT_MODE_DIRECT: number;
						public cryptoInfo: com.google.android.exoplayer2.decoder.CryptoInfo;
						public data: java.nio.ByteBuffer;
						public waitingForKeys: boolean;
						public timeUs: number;
						public supplementalData: java.nio.ByteBuffer;
						public ensureSpaceForWrite(param0: number): void;
						public constructor();
						public resetSupplementalData(param0: number): void;
						public isFlagsOnly(): boolean;
						public constructor(param0: number);
						public isEncrypted(): boolean;
						public flip(): void;
						public static newFlagsOnlyInstance(): com.google.android.exoplayer2.decoder.DecoderInputBuffer;
						public clear(): void;
						public constructor(param0: number, param1: number);
					}
					export module DecoderInputBuffer {
						export class BufferReplacementMode {
							public static class: java.lang.Class<com.google.android.exoplayer2.decoder.DecoderInputBuffer.BufferReplacementMode>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.decoder.DecoderInputBuffer$BufferReplacementMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
						export class InsufficientCapacityException {
							public static class: java.lang.Class<com.google.android.exoplayer2.decoder.DecoderInputBuffer.InsufficientCapacityException>;
							public currentCapacity: number;
							public requiredCapacity: number;
							public constructor(param0: number, param1: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export class DecoderReuseEvaluation {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.DecoderReuseEvaluation>;
						public static REUSE_RESULT_NO: number;
						public static REUSE_RESULT_YES_WITH_FLUSH: number;
						public static REUSE_RESULT_YES_WITH_RECONFIGURATION: number;
						public static REUSE_RESULT_YES_WITHOUT_RECONFIGURATION: number;
						public static DISCARD_REASON_REUSE_NOT_IMPLEMENTED: number;
						public static DISCARD_REASON_WORKAROUND: number;
						public static DISCARD_REASON_APP_OVERRIDE: number;
						public static DISCARD_REASON_MIME_TYPE_CHANGED: number;
						public static DISCARD_REASON_OPERATING_RATE_CHANGED: number;
						public static DISCARD_REASON_INITIALIZATION_DATA_CHANGED: number;
						public static DISCARD_REASON_MAX_INPUT_SIZE_EXCEEDED: number;
						public static DISCARD_REASON_DRM_SESSION_CHANGED: number;
						public static DISCARD_REASON_VIDEO_MAX_RESOLUTION_EXCEEDED: number;
						public static DISCARD_REASON_VIDEO_RESOLUTION_CHANGED: number;
						public static DISCARD_REASON_VIDEO_ROTATION_CHANGED: number;
						public static DISCARD_REASON_VIDEO_COLOR_INFO_CHANGED: number;
						public static DISCARD_REASON_AUDIO_CHANNEL_COUNT_CHANGED: number;
						public static DISCARD_REASON_AUDIO_SAMPLE_RATE_CHANGED: number;
						public static DISCARD_REASON_AUDIO_ENCODING_CHANGED: number;
						public decoderName: string;
						public oldFormat: com.google.android.exoplayer2.Format;
						public newFormat: com.google.android.exoplayer2.Format;
						public result: number;
						public discardReasons: number;
						public constructor(param0: string, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.Format, param3: number, param4: number);
						public equals(param0: any): boolean;
						public hashCode(): number;
					}
					export module DecoderReuseEvaluation {
						export class DecoderDiscardReasons {
							public static class: java.lang.Class<com.google.android.exoplayer2.decoder.DecoderReuseEvaluation.DecoderDiscardReasons>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.decoder.DecoderReuseEvaluation$DecoderDiscardReasons interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
						export class DecoderReuseResult {
							public static class: java.lang.Class<com.google.android.exoplayer2.decoder.DecoderReuseEvaluation.DecoderReuseResult>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.decoder.DecoderReuseEvaluation$DecoderReuseResult interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export abstract class OutputBuffer extends com.google.android.exoplayer2.decoder.Buffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.OutputBuffer>;
						public timeUs: number;
						public skippedOutputBufferCount: number;
						public constructor();
						public release(): void;
					}
					export module OutputBuffer {
						export class Owner<S>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.decoder.OutputBuffer.Owner<any>>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.decoder.OutputBuffer$Owner interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								releaseOutputBuffer(param0: S): void;
							});
							public constructor();
							public releaseOutputBuffer(param0: S): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export abstract class SimpleDecoder<I, O, E>  extends com.google.android.exoplayer2.decoder.Decoder<any,any,any> {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.SimpleDecoder<any,any,any>>;
						public createUnexpectedDecodeException(param0: java.lang.Throwable): any;
						public decode(param0: any, param1: any, param2: boolean): any;
						public createOutputBuffer(): any;
						public setInitialInputBufferSize(param0: number): void;
						public dequeueInputBuffer(): any;
						public flush(): void;
						public releaseOutputBuffer(param0: any): void;
						public release(): void;
						public getName(): string;
						public createInputBuffer(): any;
						public constructor(param0: androidNative.Array<any>, param1: androidNative.Array<any>);
						public dequeueOutputBuffer(): any;
						public queueInputBuffer(param0: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module decoder {
					export class SimpleOutputBuffer extends com.google.android.exoplayer2.decoder.OutputBuffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.decoder.SimpleOutputBuffer>;
						public data: java.nio.ByteBuffer;
						public init(param0: number, param1: number): java.nio.ByteBuffer;
						public constructor();
						public clear(): void;
						public release(): void;
						public constructor(param0: com.google.android.exoplayer2.decoder.OutputBuffer.Owner<com.google.android.exoplayer2.decoder.SimpleOutputBuffer>);
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module device {
					export class DeviceInfo {
						public static class: java.lang.Class<com.google.android.exoplayer2.device.DeviceInfo>;
						public static PLAYBACK_TYPE_LOCAL: number;
						public static PLAYBACK_TYPE_REMOTE: number;
						public static UNKNOWN: com.google.android.exoplayer2.device.DeviceInfo;
						public playbackType: number;
						public minVolume: number;
						public maxVolume: number;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public constructor(param0: number, param1: number, param2: number);
					}
					export module DeviceInfo {
						export class PlaybackType {
							public static class: java.lang.Class<com.google.android.exoplayer2.device.DeviceInfo.PlaybackType>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.device.DeviceInfo$PlaybackType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module device {
					export class DeviceListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.device.DeviceListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.device.DeviceListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onDeviceInfoChanged(param0: com.google.android.exoplayer2.device.DeviceInfo): void;
							onDeviceVolumeChanged(param0: number, param1: boolean): void;
						});
						public constructor();
						public onDeviceInfoChanged(param0: com.google.android.exoplayer2.device.DeviceInfo): void;
						public onDeviceVolumeChanged(param0: number, param1: boolean): void;
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class ClearKeyUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.ClearKeyUtil>;
						public static adjustResponseData(param0: androidNative.Array<number>): androidNative.Array<number>;
						public static adjustRequestData(param0: androidNative.Array<number>): androidNative.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DecryptionException {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DecryptionException>;
						public errorCode: number;
						public constructor(param0: number, param1: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DefaultDrmSession extends com.google.android.exoplayer2.drm.DrmSession {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSession>;
						public schemeDatas: java.util.List<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>;
						public provision(): void;
						public onProvisionCompleted(): void;
						public static replaceSession(param0: com.google.android.exoplayer2.drm.DrmSession, param1: com.google.android.exoplayer2.drm.DrmSession): void;
						public getSchemeUuid(): java.util.UUID;
						public release(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
						public getError(): com.google.android.exoplayer2.drm.DrmSession.DrmSessionException;
						public onMediaDrmEvent(param0: number): void;
						public onProvisionError(param0: java.lang.Exception): void;
						public getState(): number;
						public getOfflineLicenseKeySetId(): androidNative.Array<number>;
						public acquire(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
						public queryKeyStatus(): java.util.Map<string,string>;
						public hasSessionId(param0: androidNative.Array<number>): boolean;
						public constructor(param0: java.util.UUID, param1: com.google.android.exoplayer2.drm.ExoMediaDrm, param2: com.google.android.exoplayer2.drm.DefaultDrmSession.ProvisioningManager, param3: com.google.android.exoplayer2.drm.DefaultDrmSession.ReferenceCountListener, param4: java.util.List<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>, param5: number, param6: boolean, param7: boolean, param8: androidNative.Array<number>, param9: java.util.HashMap<string,string>, param10: com.google.android.exoplayer2.drm.MediaDrmCallback, param11: globalAndroid.os.Looper, param12: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy);
						public getMediaCrypto(): com.google.android.exoplayer2.drm.ExoMediaCrypto;
						public playClearSamplesWithoutKeys(): boolean;
					}
					export module DefaultDrmSession {
						export class ProvisioningManager {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSession.ProvisioningManager>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.DefaultDrmSession$ProvisioningManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								provisionRequired(param0: com.google.android.exoplayer2.drm.DefaultDrmSession): void;
								onProvisionError(param0: java.lang.Exception): void;
								onProvisionCompleted(): void;
							});
							public constructor();
							public provisionRequired(param0: com.google.android.exoplayer2.drm.DefaultDrmSession): void;
							public onProvisionError(param0: java.lang.Exception): void;
							public onProvisionCompleted(): void;
						}
						export class ReferenceCountListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSession.ReferenceCountListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.DefaultDrmSession$ReferenceCountListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onReferenceCountIncremented(param0: com.google.android.exoplayer2.drm.DefaultDrmSession, param1: number): void;
								onReferenceCountDecremented(param0: com.google.android.exoplayer2.drm.DefaultDrmSession, param1: number): void;
							});
							public constructor();
							public onReferenceCountDecremented(param0: com.google.android.exoplayer2.drm.DefaultDrmSession, param1: number): void;
							public onReferenceCountIncremented(param0: com.google.android.exoplayer2.drm.DefaultDrmSession, param1: number): void;
						}
						export class RequestHandler {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSession.RequestHandler>;
							public constructor(param0: com.google.android.exoplayer2.drm.DefaultDrmSession, param1: globalAndroid.os.Looper);
							public release(): void;
							public handleMessage(param0: globalAndroid.os.Message): void;
						}
						export class RequestTask {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSession.RequestTask>;
							public taskId: number;
							public allowRetry: boolean;
							public startTimeMs: number;
							public request: any;
							public errorCount: number;
							public constructor(param0: number, param1: boolean, param2: number, param3: any);
						}
						export class ResponseHandler {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSession.ResponseHandler>;
							public constructor(param0: com.google.android.exoplayer2.drm.DefaultDrmSession, param1: globalAndroid.os.Looper);
							public handleMessage(param0: globalAndroid.os.Message): void;
						}
						export class UnexpectedDrmSessionException {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSession.UnexpectedDrmSessionException>;
							public constructor(param0: java.lang.Throwable);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DefaultDrmSessionManager extends com.google.android.exoplayer2.drm.DrmSessionManager {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager>;
						public static PLAYREADY_CUSTOM_DATA_KEY: string;
						public static MODE_PLAYBACK: number;
						public static MODE_QUERY: number;
						public static MODE_DOWNLOAD: number;
						public static MODE_RELEASE: number;
						public static INITIAL_DRM_REQUEST_RETRY_COUNT: number;
						public static DEFAULT_SESSION_KEEPALIVE_MS: number;
						/** @deprecated */
						public static getDummyDrmSessionManager(): com.google.android.exoplayer2.drm.DrmSessionManager;
						public prepare(): void;
						/** @deprecated */
						public constructor(param0: java.util.UUID, param1: com.google.android.exoplayer2.drm.ExoMediaDrm, param2: com.google.android.exoplayer2.drm.MediaDrmCallback, param3: java.util.HashMap<string,string>, param4: boolean);
						public acquireSession(param0: globalAndroid.os.Looper, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher, param2: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.drm.DrmSession;
						/** @deprecated */
						public constructor(param0: java.util.UUID, param1: com.google.android.exoplayer2.drm.ExoMediaDrm, param2: com.google.android.exoplayer2.drm.MediaDrmCallback, param3: java.util.HashMap<string,string>);
						/** @deprecated */
						public constructor(param0: java.util.UUID, param1: com.google.android.exoplayer2.drm.ExoMediaDrm, param2: com.google.android.exoplayer2.drm.MediaDrmCallback, param3: java.util.HashMap<string,string>, param4: boolean, param5: number);
						public setMode(param0: number, param1: androidNative.Array<number>): void;
						public release(): void;
						public getExoMediaCryptoType(param0: com.google.android.exoplayer2.Format): java.lang.Class<any>;
					}
					export module DefaultDrmSessionManager {
						export class Builder {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder>;
							public constructor();
							public setKeyRequestParameters(param0: java.util.Map<string,string>): com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder;
							public setUseDrmSessionsForClearContent(param0: androidNative.Array<number>): com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder;
							public build(param0: com.google.android.exoplayer2.drm.MediaDrmCallback): com.google.android.exoplayer2.drm.DefaultDrmSessionManager;
							public setPlayClearSamplesWithoutKeys(param0: boolean): com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder;
							public setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder;
							public setUuidAndExoMediaDrmProvider(param0: java.util.UUID, param1: com.google.android.exoplayer2.drm.ExoMediaDrm.Provider): com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder;
							public setSessionKeepaliveMs(param0: number): com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder;
							public setMultiSession(param0: boolean): com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Builder;
						}
						export class MediaDrmEventListener extends com.google.android.exoplayer2.drm.ExoMediaDrm.OnEventListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager.MediaDrmEventListener>;
							public onEvent(param0: com.google.android.exoplayer2.drm.ExoMediaDrm, param1: androidNative.Array<number>, param2: number, param3: number, param4: androidNative.Array<number>): void;
						}
						export class MediaDrmHandler {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager.MediaDrmHandler>;
							public handleMessage(param0: globalAndroid.os.Message): void;
							public constructor(param0: com.google.android.exoplayer2.drm.DefaultDrmSessionManager, param1: globalAndroid.os.Looper);
						}
						export class MissingSchemeDataException {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager.MissingSchemeDataException>;
						}
						export class Mode {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager.Mode>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.DefaultDrmSessionManager$Mode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
						export class ProvisioningManagerImpl extends com.google.android.exoplayer2.drm.DefaultDrmSession.ProvisioningManager {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager.ProvisioningManagerImpl>;
							public provisionRequired(param0: com.google.android.exoplayer2.drm.DefaultDrmSession): void;
							public onProvisionError(param0: java.lang.Exception): void;
							public onProvisionCompleted(): void;
						}
						export class ReferenceCountListenerImpl extends com.google.android.exoplayer2.drm.DefaultDrmSession.ReferenceCountListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManager.ReferenceCountListenerImpl>;
							public onReferenceCountDecremented(param0: com.google.android.exoplayer2.drm.DefaultDrmSession, param1: number): void;
							public onReferenceCountIncremented(param0: com.google.android.exoplayer2.drm.DefaultDrmSession, param1: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DefaultDrmSessionManagerProvider extends com.google.android.exoplayer2.drm.DrmSessionManagerProvider {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DefaultDrmSessionManagerProvider>;
						public constructor();
						public get(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.drm.DrmSessionManager;
						public setDrmUserAgent(param0: string): void;
						public setDrmHttpDataSourceFactory(param0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DrmInitData extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmInitData>;
						public schemeType: string;
						public schemeDataCount: number;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.drm.DrmInitData>;
						public describeContents(): number;
						public static createSessionCreationData(param0: com.google.android.exoplayer2.drm.DrmInitData, param1: com.google.android.exoplayer2.drm.DrmInitData): com.google.android.exoplayer2.drm.DrmInitData;
						public constructor(param0: string, param1: java.util.List<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>);
						public get(param0: number): com.google.android.exoplayer2.drm.DrmInitData.SchemeData;
						public constructor(param0: androidNative.Array<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>);
						public constructor(param0: string, param1: androidNative.Array<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>);
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public merge(param0: com.google.android.exoplayer2.drm.DrmInitData): com.google.android.exoplayer2.drm.DrmInitData;
						public compare(param0: com.google.android.exoplayer2.drm.DrmInitData.SchemeData, param1: com.google.android.exoplayer2.drm.DrmInitData.SchemeData): number;
						public copyWithSchemeType(param0: string): com.google.android.exoplayer2.drm.DrmInitData;
						public constructor(param0: java.util.List<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>);
					}
					export module DrmInitData {
						export class SchemeData {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>;
							public uuid: java.util.UUID;
							public licenseServerUrl: string;
							public mimeType: string;
							public data: androidNative.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: java.util.UUID, param1: string, param2: string, param3: androidNative.Array<number>);
							public describeContents(): number;
							public canReplace(param0: com.google.android.exoplayer2.drm.DrmInitData.SchemeData): boolean;
							public copyWithData(param0: androidNative.Array<number>): com.google.android.exoplayer2.drm.DrmInitData.SchemeData;
							public equals(param0: any): boolean;
							public hasData(): boolean;
							public constructor(param0: java.util.UUID, param1: string, param2: androidNative.Array<number>);
							public matches(param0: java.util.UUID): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DrmSession {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmSession>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.drm.DrmSession interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							replaceSession(param0: com.google.android.exoplayer2.drm.DrmSession, param1: com.google.android.exoplayer2.drm.DrmSession): void;
							getState(): number;
							playClearSamplesWithoutKeys(): boolean;
							getError(): com.google.android.exoplayer2.drm.DrmSession.DrmSessionException;
							getSchemeUuid(): java.util.UUID;
							getMediaCrypto(): com.google.android.exoplayer2.drm.ExoMediaCrypto;
							queryKeyStatus(): java.util.Map<string,string>;
							getOfflineLicenseKeySetId(): androidNative.Array<number>;
							acquire(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
							release(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
						});
						public constructor();
						public static STATE_OPENING: number;
						public static STATE_OPENED_WITH_KEYS: number;
						public static STATE_RELEASED: number;
						public static STATE_OPENED: number;
						public static STATE_ERROR: number;
						public getSchemeUuid(): java.util.UUID;
						public release(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
						public getError(): com.google.android.exoplayer2.drm.DrmSession.DrmSessionException;
						public getState(): number;
						public getOfflineLicenseKeySetId(): androidNative.Array<number>;
						public acquire(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
						public queryKeyStatus(): java.util.Map<string,string>;
						public getMediaCrypto(): com.google.android.exoplayer2.drm.ExoMediaCrypto;
						public static replaceSession(param0: com.google.android.exoplayer2.drm.DrmSession, param1: com.google.android.exoplayer2.drm.DrmSession): void;
						public playClearSamplesWithoutKeys(): boolean;
					}
					export module DrmSession {
						export class DrmSessionException {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmSession.DrmSessionException>;
							public constructor(param0: java.lang.Throwable);
						}
						export class State {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmSession.State>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.DrmSession$State interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DrmSessionEventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmSessionEventListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.drm.DrmSessionEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onDrmSessionAcquired(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							onDrmKeysLoaded(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							onDrmSessionManagerError(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: java.lang.Exception): void;
							onDrmKeysRestored(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							onDrmKeysRemoved(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							onDrmSessionReleased(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						});
						public constructor();
						public onDrmKeysRestored(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmSessionReleased(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmSessionAcquired(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmKeysLoaded(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmKeysRemoved(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public onDrmSessionManagerError(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: java.lang.Exception): void;
					}
					export module DrmSessionEventListener {
						export class EventDispatcher {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher>;
							public windowIndex: number;
							public mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public constructor();
							public drmKeysLoaded(): void;
							public drmSessionManagerError(param0: java.lang.Exception): void;
							public drmSessionAcquired(): void;
							public drmSessionReleased(): void;
							public drmKeysRemoved(): void;
							public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							public removeEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							public drmKeysRestored(): void;
							public withParameters(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher;
						}
						export module EventDispatcher {
							export class ListenerAndHandler {
								public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher.ListenerAndHandler>;
								public handler: globalAndroid.os.Handler;
								public listener: com.google.android.exoplayer2.drm.DrmSessionEventListener;
								public constructor(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DrmSessionManager {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmSessionManager>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.drm.DrmSessionManager interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getDummyDrmSessionManager(): com.google.android.exoplayer2.drm.DrmSessionManager;
							prepare(): void;
							release(): void;
							acquireSession(param0: globalAndroid.os.Looper, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher, param2: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.drm.DrmSession;
							getExoMediaCryptoType(param0: com.google.android.exoplayer2.Format): java.lang.Class<any>;
							<clinit>(): void;
						});
						public constructor();
						public static DRM_UNSUPPORTED: com.google.android.exoplayer2.drm.DrmSessionManager;
						public static DUMMY: com.google.android.exoplayer2.drm.DrmSessionManager;
						/** @deprecated */
						public static getDummyDrmSessionManager(): com.google.android.exoplayer2.drm.DrmSessionManager;
						public prepare(): void;
						public acquireSession(param0: globalAndroid.os.Looper, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher, param2: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.drm.DrmSession;
						public release(): void;
						public getExoMediaCryptoType(param0: com.google.android.exoplayer2.Format): java.lang.Class<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DrmSessionManagerProvider {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DrmSessionManagerProvider>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.drm.DrmSessionManagerProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							get(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.drm.DrmSessionManager;
						});
						public constructor();
						public get(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.drm.DrmSessionManager;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class DummyExoMediaDrm extends com.google.android.exoplayer2.drm.ExoMediaDrm {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.DummyExoMediaDrm>;
						public constructor();
						public getMetrics(): any;
						public acquire(): void;
						public getProvisionRequest(): com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest;
						public createMediaCrypto(param0: androidNative.Array<number>): com.google.android.exoplayer2.drm.ExoMediaCrypto;
						public closeSession(param0: androidNative.Array<number>): void;
						public getExoMediaCryptoType(): java.lang.Class<com.google.android.exoplayer2.drm.UnsupportedMediaCrypto>;
						public provideProvisionResponse(param0: androidNative.Array<number>): void;
						public getPropertyString(param0: string): string;
						public queryKeyStatus(param0: androidNative.Array<number>): java.util.Map<string,string>;
						public release(): void;
						public setPropertyString(param0: string, param1: string): void;
						public getKeyRequest(param0: androidNative.Array<number>, param1: java.util.List<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>, param2: number, param3: java.util.HashMap<string,string>): com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest;
						public restoreKeys(param0: androidNative.Array<number>, param1: androidNative.Array<number>): void;
						public setOnKeyStatusChangeListener(param0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnKeyStatusChangeListener): void;
						public setOnEventListener(param0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnEventListener): void;
						public openSession(): androidNative.Array<number>;
						public setOnExpirationUpdateListener(param0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnExpirationUpdateListener): void;
						public getExoMediaCryptoType(): java.lang.Class<any>;
						public getPropertyByteArray(param0: string): androidNative.Array<number>;
						public static getInstance(): com.google.android.exoplayer2.drm.DummyExoMediaDrm;
						public setPropertyByteArray(param0: string, param1: androidNative.Array<number>): void;
						public provideKeyResponse(param0: androidNative.Array<number>, param1: androidNative.Array<number>): androidNative.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class ErrorStateDrmSession extends com.google.android.exoplayer2.drm.DrmSession {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.ErrorStateDrmSession>;
						public getSchemeUuid(): java.util.UUID;
						public release(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
						public getError(): com.google.android.exoplayer2.drm.DrmSession.DrmSessionException;
						public constructor(param0: com.google.android.exoplayer2.drm.DrmSession.DrmSessionException);
						public getState(): number;
						public getOfflineLicenseKeySetId(): androidNative.Array<number>;
						public acquire(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): void;
						public queryKeyStatus(): java.util.Map<string,string>;
						public getMediaCrypto(): com.google.android.exoplayer2.drm.ExoMediaCrypto;
						public playClearSamplesWithoutKeys(): boolean;
						public static replaceSession(param0: com.google.android.exoplayer2.drm.DrmSession, param1: com.google.android.exoplayer2.drm.DrmSession): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class ExoMediaCrypto {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaCrypto>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.drm.ExoMediaCrypto interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class ExoMediaDrm {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.drm.ExoMediaDrm interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setOnEventListener(param0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnEventListener): void;
							setOnKeyStatusChangeListener(param0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnKeyStatusChangeListener): void;
							setOnExpirationUpdateListener(param0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnExpirationUpdateListener): void;
							openSession(): androidNative.Array<number>;
							closeSession(param0: androidNative.Array<number>): void;
							getKeyRequest(param0: androidNative.Array<number>, param1: java.util.List<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>, param2: number, param3: java.util.HashMap<string,string>): com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest;
							provideKeyResponse(param0: androidNative.Array<number>, param1: androidNative.Array<number>): androidNative.Array<number>;
							getProvisionRequest(): com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest;
							provideProvisionResponse(param0: androidNative.Array<number>): void;
							queryKeyStatus(param0: androidNative.Array<number>): java.util.Map<string,string>;
							acquire(): void;
							release(): void;
							restoreKeys(param0: androidNative.Array<number>, param1: androidNative.Array<number>): void;
							getMetrics(): any;
							getPropertyString(param0: string): string;
							getPropertyByteArray(param0: string): androidNative.Array<number>;
							setPropertyString(param0: string, param1: string): void;
							setPropertyByteArray(param0: string, param1: androidNative.Array<number>): void;
							createMediaCrypto(param0: androidNative.Array<number>): com.google.android.exoplayer2.drm.ExoMediaCrypto;
							getExoMediaCryptoType(): java.lang.Class<any>;
						});
						public constructor();
						public static KEY_TYPE_RELEASE: number;
						public static KEY_TYPE_STREAMING: number;
						public static EVENT_KEY_REQUIRED: number;
						public static EVENT_KEY_EXPIRED: number;
						public static EVENT_PROVISION_REQUIRED: number;
						public static KEY_TYPE_OFFLINE: number;
						public getMetrics(): any;
						public acquire(): void;
						public getProvisionRequest(): com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest;
						public createMediaCrypto(param0: androidNative.Array<number>): com.google.android.exoplayer2.drm.ExoMediaCrypto;
						public closeSession(param0: androidNative.Array<number>): void;
						public provideProvisionResponse(param0: androidNative.Array<number>): void;
						public getPropertyString(param0: string): string;
						public queryKeyStatus(param0: androidNative.Array<number>): java.util.Map<string,string>;
						public release(): void;
						public setPropertyString(param0: string, param1: string): void;
						public getKeyRequest(param0: androidNative.Array<number>, param1: java.util.List<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>, param2: number, param3: java.util.HashMap<string,string>): com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest;
						public restoreKeys(param0: androidNative.Array<number>, param1: androidNative.Array<number>): void;
						public setOnKeyStatusChangeListener(param0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnKeyStatusChangeListener): void;
						public setOnEventListener(param0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnEventListener): void;
						public openSession(): androidNative.Array<number>;
						public setOnExpirationUpdateListener(param0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnExpirationUpdateListener): void;
						public getExoMediaCryptoType(): java.lang.Class<any>;
						public getPropertyByteArray(param0: string): androidNative.Array<number>;
						public setPropertyByteArray(param0: string, param1: androidNative.Array<number>): void;
						public provideKeyResponse(param0: androidNative.Array<number>, param1: androidNative.Array<number>): androidNative.Array<number>;
					}
					export module ExoMediaDrm {
						export class AppManagedProvider extends com.google.android.exoplayer2.drm.ExoMediaDrm.Provider {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.AppManagedProvider>;
							public constructor(param0: com.google.android.exoplayer2.drm.ExoMediaDrm);
							public acquireExoMediaDrm(param0: java.util.UUID): com.google.android.exoplayer2.drm.ExoMediaDrm;
						}
						export class KeyRequest {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest>;
							public static REQUEST_TYPE_UNKNOWN: number;
							public static REQUEST_TYPE_INITIAL: number;
							public static REQUEST_TYPE_RENEWAL: number;
							public static REQUEST_TYPE_RELEASE: number;
							public static REQUEST_TYPE_NONE: number;
							public static REQUEST_TYPE_UPDATE: number;
							public constructor(param0: androidNative.Array<number>, param1: string, param2: number);
							public getRequestType(): number;
							public getLicenseServerUrl(): string;
							public getData(): androidNative.Array<number>;
							public constructor(param0: androidNative.Array<number>, param1: string);
						}
						export module KeyRequest {
							export class RequestType {
								public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest.RequestType>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.drm.ExoMediaDrm$KeyRequest$RequestType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
						export class KeyStatus {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.KeyStatus>;
							public constructor(param0: number, param1: androidNative.Array<number>);
							public getStatusCode(): number;
							public getKeyId(): androidNative.Array<number>;
						}
						export class OnEventListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.OnEventListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.ExoMediaDrm$OnEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onEvent(param0: com.google.android.exoplayer2.drm.ExoMediaDrm, param1: androidNative.Array<number>, param2: number, param3: number, param4: androidNative.Array<number>): void;
							});
							public constructor();
							public onEvent(param0: com.google.android.exoplayer2.drm.ExoMediaDrm, param1: androidNative.Array<number>, param2: number, param3: number, param4: androidNative.Array<number>): void;
						}
						export class OnExpirationUpdateListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.OnExpirationUpdateListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.ExoMediaDrm$OnExpirationUpdateListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onExpirationUpdate(param0: com.google.android.exoplayer2.drm.ExoMediaDrm, param1: androidNative.Array<number>, param2: number): void;
							});
							public constructor();
							public onExpirationUpdate(param0: com.google.android.exoplayer2.drm.ExoMediaDrm, param1: androidNative.Array<number>, param2: number): void;
						}
						export class OnKeyStatusChangeListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.OnKeyStatusChangeListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.ExoMediaDrm$OnKeyStatusChangeListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onKeyStatusChange(param0: com.google.android.exoplayer2.drm.ExoMediaDrm, param1: androidNative.Array<number>, param2: java.util.List<com.google.android.exoplayer2.drm.ExoMediaDrm.KeyStatus>, param3: boolean): void;
							});
							public constructor();
							public onKeyStatusChange(param0: com.google.android.exoplayer2.drm.ExoMediaDrm, param1: androidNative.Array<number>, param2: java.util.List<com.google.android.exoplayer2.drm.ExoMediaDrm.KeyStatus>, param3: boolean): void;
						}
						export class Provider {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.Provider>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.ExoMediaDrm$Provider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								acquireExoMediaDrm(param0: java.util.UUID): com.google.android.exoplayer2.drm.ExoMediaDrm;
							});
							public constructor();
							public acquireExoMediaDrm(param0: java.util.UUID): com.google.android.exoplayer2.drm.ExoMediaDrm;
						}
						export class ProvisionRequest {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest>;
							public getDefaultUrl(): string;
							public getData(): androidNative.Array<number>;
							public constructor(param0: androidNative.Array<number>, param1: string);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class FrameworkMediaCrypto extends com.google.android.exoplayer2.drm.ExoMediaCrypto {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.FrameworkMediaCrypto>;
						public static WORKAROUND_DEVICE_NEEDS_KEYS_TO_CONFIGURE_CODEC: boolean;
						public uuid: java.util.UUID;
						public sessionId: androidNative.Array<number>;
						public forceAllowInsecureDecoderComponents: boolean;
						public constructor(param0: java.util.UUID, param1: androidNative.Array<number>, param2: boolean);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class FrameworkMediaDrm extends com.google.android.exoplayer2.drm.ExoMediaDrm {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.FrameworkMediaDrm>;
						public static DEFAULT_PROVIDER: com.google.android.exoplayer2.drm.ExoMediaDrm.Provider;
						public static newInstance(param0: java.util.UUID): com.google.android.exoplayer2.drm.FrameworkMediaDrm;
						public getMetrics(): any;
						public acquire(): void;
						public getProvisionRequest(): com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest;
						public createMediaCrypto(param0: androidNative.Array<number>): com.google.android.exoplayer2.drm.ExoMediaCrypto;
						public closeSession(param0: androidNative.Array<number>): void;
						public provideProvisionResponse(param0: androidNative.Array<number>): void;
						public getPropertyString(param0: string): string;
						public getExoMediaCryptoType(): java.lang.Class<com.google.android.exoplayer2.drm.FrameworkMediaCrypto>;
						public queryKeyStatus(param0: androidNative.Array<number>): java.util.Map<string,string>;
						public release(): void;
						public setPropertyString(param0: string, param1: string): void;
						public getKeyRequest(param0: androidNative.Array<number>, param1: java.util.List<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>, param2: number, param3: java.util.HashMap<string,string>): com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest;
						public restoreKeys(param0: androidNative.Array<number>, param1: androidNative.Array<number>): void;
						public setOnKeyStatusChangeListener(param0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnKeyStatusChangeListener): void;
						public setOnEventListener(param0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnEventListener): void;
						public openSession(): androidNative.Array<number>;
						public setOnExpirationUpdateListener(param0: com.google.android.exoplayer2.drm.ExoMediaDrm.OnExpirationUpdateListener): void;
						public getExoMediaCryptoType(): java.lang.Class<any>;
						public getPropertyByteArray(param0: string): androidNative.Array<number>;
						public setPropertyByteArray(param0: string, param1: androidNative.Array<number>): void;
						public createMediaCrypto(param0: androidNative.Array<number>): com.google.android.exoplayer2.drm.FrameworkMediaCrypto;
						public static isCryptoSchemeSupported(param0: java.util.UUID): boolean;
						public provideKeyResponse(param0: androidNative.Array<number>, param1: androidNative.Array<number>): androidNative.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class HttpMediaDrmCallback extends com.google.android.exoplayer2.drm.MediaDrmCallback {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.HttpMediaDrmCallback>;
						public clearAllKeyRequestProperties(): void;
						public constructor(param0: string, param1: boolean, param2: com.google.android.exoplayer2.upstream.HttpDataSource.Factory);
						public executeProvisionRequest(param0: java.util.UUID, param1: com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest): androidNative.Array<number>;
						public clearKeyRequestProperty(param0: string): void;
						public setKeyRequestProperty(param0: string, param1: string): void;
						public constructor(param0: string, param1: com.google.android.exoplayer2.upstream.HttpDataSource.Factory);
						public executeKeyRequest(param0: java.util.UUID, param1: com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest): androidNative.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class KeysExpiredException {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.KeysExpiredException>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class LocalMediaDrmCallback extends com.google.android.exoplayer2.drm.MediaDrmCallback {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.LocalMediaDrmCallback>;
						public constructor(param0: androidNative.Array<number>);
						public executeProvisionRequest(param0: java.util.UUID, param1: com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest): androidNative.Array<number>;
						public executeKeyRequest(param0: java.util.UUID, param1: com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest): androidNative.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class MediaDrmCallback {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.MediaDrmCallback>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.drm.MediaDrmCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							executeProvisionRequest(param0: java.util.UUID, param1: com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest): androidNative.Array<number>;
							executeKeyRequest(param0: java.util.UUID, param1: com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest): androidNative.Array<number>;
						});
						public constructor();
						public executeProvisionRequest(param0: java.util.UUID, param1: com.google.android.exoplayer2.drm.ExoMediaDrm.ProvisionRequest): androidNative.Array<number>;
						public executeKeyRequest(param0: java.util.UUID, param1: com.google.android.exoplayer2.drm.ExoMediaDrm.KeyRequest): androidNative.Array<number>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class MediaDrmCallbackException {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.MediaDrmCallbackException>;
						public dataSpec: com.google.android.exoplayer2.upstream.DataSpec;
						public uriAfterRedirects: globalAndroid.net.Uri;
						public responseHeaders: java.util.Map<string,java.util.List<string>>;
						public bytesLoaded: number;
						public constructor(param0: com.google.android.exoplayer2.upstream.DataSpec, param1: globalAndroid.net.Uri, param2: java.util.Map<string,java.util.List<string>>, param3: number, param4: java.lang.Throwable);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class OfflineLicenseHelper {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.OfflineLicenseHelper>;
						public static newWidevineInstance(param0: string, param1: com.google.android.exoplayer2.upstream.HttpDataSource.Factory, param2: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): com.google.android.exoplayer2.drm.OfflineLicenseHelper;
						public renewLicense(param0: androidNative.Array<number>): androidNative.Array<number>;
						public constructor(param0: com.google.android.exoplayer2.drm.DefaultDrmSessionManager, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher);
						public getLicenseDurationRemainingSec(param0: androidNative.Array<number>): globalAndroid.util.Pair<java.lang.Long,java.lang.Long>;
						/** @deprecated */
						public constructor(param0: java.util.UUID, param1: com.google.android.exoplayer2.drm.ExoMediaDrm.Provider, param2: com.google.android.exoplayer2.drm.MediaDrmCallback, param3: java.util.Map<string,string>, param4: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher);
						public static newWidevineInstance(param0: string, param1: boolean, param2: com.google.android.exoplayer2.upstream.HttpDataSource.Factory, param3: java.util.Map<string,string>, param4: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): com.google.android.exoplayer2.drm.OfflineLicenseHelper;
						public downloadLicense(param0: com.google.android.exoplayer2.Format): androidNative.Array<number>;
						public static newWidevineInstance(param0: string, param1: boolean, param2: com.google.android.exoplayer2.upstream.HttpDataSource.Factory, param3: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): com.google.android.exoplayer2.drm.OfflineLicenseHelper;
						public release(): void;
						public releaseLicense(param0: androidNative.Array<number>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class UnsupportedDrmException {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.UnsupportedDrmException>;
						public static REASON_UNSUPPORTED_SCHEME: number;
						public static REASON_INSTANTIATION_ERROR: number;
						public reason: number;
						public constructor(param0: number);
						public constructor(param0: number, param1: java.lang.Exception);
					}
					export module UnsupportedDrmException {
						export class Reason {
							public static class: java.lang.Class<com.google.android.exoplayer2.drm.UnsupportedDrmException.Reason>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.drm.UnsupportedDrmException$Reason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class UnsupportedMediaCrypto extends com.google.android.exoplayer2.drm.ExoMediaCrypto {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.UnsupportedMediaCrypto>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module drm {
					export class WidevineUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.drm.WidevineUtil>;
						public static PROPERTY_LICENSE_DURATION_REMAINING: string;
						public static PROPERTY_PLAYBACK_DURATION_REMAINING: string;
						public static getLicenseDurationRemainingSec(param0: com.google.android.exoplayer2.drm.DrmSession): globalAndroid.util.Pair<java.lang.Long,java.lang.Long>;
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export abstract class BinarySearchSeeker {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.BinarySearchSeeker>;
						public seekMap: com.google.android.exoplayer2.extractor.BinarySearchSeeker.BinarySearchSeekMap;
						public timestampSeeker: com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSeeker;
						public seekOperationParams: com.google.android.exoplayer2.extractor.BinarySearchSeeker.SeekOperationParams;
						public isSeeking(): boolean;
						public setSeekTargetUs(param0: number): void;
						public constructor(param0: com.google.android.exoplayer2.extractor.BinarySearchSeeker.SeekTimestampConverter, param1: com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSeeker, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number);
						public handlePendingSeek(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
						public createSeekParamsForTargetTimeUs(param0: number): com.google.android.exoplayer2.extractor.BinarySearchSeeker.SeekOperationParams;
						public markSeekOperationFinished(param0: boolean, param1: number): void;
						public onSeekOperationFinished(param0: boolean, param1: number): void;
						public skipInputUntilPosition(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: number): boolean;
						public getSeekMap(): com.google.android.exoplayer2.extractor.SeekMap;
						public seekToPosition(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: number, param2: com.google.android.exoplayer2.extractor.PositionHolder): number;
					}
					export module BinarySearchSeeker {
						export class BinarySearchSeekMap extends com.google.android.exoplayer2.extractor.SeekMap {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.BinarySearchSeeker.BinarySearchSeekMap>;
							public getDurationUs(): number;
							public timeUsToTargetTime(param0: number): number;
							public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
							public constructor(param0: com.google.android.exoplayer2.extractor.BinarySearchSeeker.SeekTimestampConverter, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number);
							public isSeekable(): boolean;
						}
						export class DefaultSeekTimestampConverter extends com.google.android.exoplayer2.extractor.BinarySearchSeeker.SeekTimestampConverter {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.BinarySearchSeeker.DefaultSeekTimestampConverter>;
							public constructor();
							public timeUsToTargetTime(param0: number): number;
						}
						export class SeekOperationParams {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.BinarySearchSeeker.SeekOperationParams>;
							public static calculateNextSearchBytePosition(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): number;
							public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number);
						}
						export class SeekTimestampConverter {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.BinarySearchSeeker.SeekTimestampConverter>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.extractor.BinarySearchSeeker$SeekTimestampConverter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								timeUsToTargetTime(param0: number): number;
							});
							public constructor();
							public timeUsToTargetTime(param0: number): number;
						}
						export class TimestampSearchResult {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSearchResult>;
							public static TYPE_TARGET_TIMESTAMP_FOUND: number;
							public static TYPE_POSITION_OVERESTIMATED: number;
							public static TYPE_POSITION_UNDERESTIMATED: number;
							public static TYPE_NO_TIMESTAMP: number;
							public static NO_TIMESTAMP_IN_RANGE_RESULT: com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSearchResult;
							public static overestimatedResult(param0: number, param1: number): com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSearchResult;
							public static targetFoundResult(param0: number): com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSearchResult;
							public static underestimatedResult(param0: number, param1: number): com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSearchResult;
						}
						export class TimestampSeeker {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSeeker>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.extractor.BinarySearchSeeker$TimestampSeeker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								searchForTimestamp(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: number): com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSearchResult;
								onSeekFinished(): void;
							});
							public constructor();
							public searchForTimestamp(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: number): com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSearchResult;
							public onSeekFinished(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class BuildConfig {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.BuildConfig>;
						public static DEBUG: boolean;
						public static LIBRARY_PACKAGE_NAME: string;
						public static APPLICATION_ID: string;
						public static BUILD_TYPE: string;
						public static FLAVOR: string;
						public static VERSION_CODE: number;
						public static VERSION_NAME: string;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class CeaUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.CeaUtil>;
						public static USER_DATA_IDENTIFIER_GA94: number;
						public static USER_DATA_TYPE_CODE_MPEG_CC: number;
						public static consumeCcData(param0: number, param1: com.google.android.exoplayer2.util.ParsableByteArray, param2: androidNative.Array<com.google.android.exoplayer2.extractor.TrackOutput>): void;
						public static consume(param0: number, param1: com.google.android.exoplayer2.util.ParsableByteArray, param2: androidNative.Array<com.google.android.exoplayer2.extractor.TrackOutput>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class ChunkIndex extends com.google.android.exoplayer2.extractor.SeekMap {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ChunkIndex>;
						public length: number;
						public sizes: androidNative.Array<number>;
						public offsets: androidNative.Array<number>;
						public durationsUs: androidNative.Array<number>;
						public timesUs: androidNative.Array<number>;
						public getDurationUs(): number;
						public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
						public constructor(param0: androidNative.Array<number>, param1: androidNative.Array<number>, param2: androidNative.Array<number>, param3: androidNative.Array<number>);
						public isSeekable(): boolean;
						public getChunkIndex(param0: number): number;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class ConstantBitrateSeekMap extends com.google.android.exoplayer2.extractor.SeekMap {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ConstantBitrateSeekMap>;
						public getDurationUs(): number;
						public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
						public isSeekable(): boolean;
						public getTimeUsAtPosition(param0: number): number;
						public constructor(param0: number, param1: number, param2: number, param3: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class DefaultExtractorInput extends com.google.android.exoplayer2.extractor.ExtractorInput {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.DefaultExtractorInput>;
						public skip(param0: number): number;
						public peek(param0: androidNative.Array<number>, param1: number, param2: number): number;
						public setRetryPosition(param0: number, param1: java.lang.Throwable): void;
						public peekFully(param0: androidNative.Array<number>, param1: number, param2: number): void;
						public resetPeekPosition(): void;
						public getPosition(): number;
						public getLength(): number;
						public advancePeekPosition(param0: number, param1: boolean): boolean;
						public readFully(param0: androidNative.Array<number>, param1: number, param2: number, param3: boolean): boolean;
						public constructor(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: number);
						public readFully(param0: androidNative.Array<number>, param1: number, param2: number): void;
						public peekFully(param0: androidNative.Array<number>, param1: number, param2: number, param3: boolean): boolean;
						public advancePeekPosition(param0: number): void;
						public getPeekPosition(): number;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
						public skipFully(param0: number, param1: boolean): boolean;
						public skipFully(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class DefaultExtractorsFactory extends com.google.android.exoplayer2.extractor.ExtractorsFactory {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.DefaultExtractorsFactory>;
						public constructor();
						public setMp3ExtractorFlags(param0: number): com.google.android.exoplayer2.extractor.DefaultExtractorsFactory;
						public createExtractors(param0: globalAndroid.net.Uri, param1: java.util.Map<string,java.util.List<string>>): androidNative.Array<com.google.android.exoplayer2.extractor.Extractor>;
						public setFlacExtractorFlags(param0: number): com.google.android.exoplayer2.extractor.DefaultExtractorsFactory;
						public setTsExtractorTimestampSearchBytes(param0: number): com.google.android.exoplayer2.extractor.DefaultExtractorsFactory;
						public setConstantBitrateSeekingEnabled(param0: boolean): com.google.android.exoplayer2.extractor.DefaultExtractorsFactory;
						public setMatroskaExtractorFlags(param0: number): com.google.android.exoplayer2.extractor.DefaultExtractorsFactory;
						public setAmrExtractorFlags(param0: number): com.google.android.exoplayer2.extractor.DefaultExtractorsFactory;
						public createExtractors(): androidNative.Array<com.google.android.exoplayer2.extractor.Extractor>;
						public setFragmentedMp4ExtractorFlags(param0: number): com.google.android.exoplayer2.extractor.DefaultExtractorsFactory;
						public setAdtsExtractorFlags(param0: number): com.google.android.exoplayer2.extractor.DefaultExtractorsFactory;
						public setTsExtractorMode(param0: number): com.google.android.exoplayer2.extractor.DefaultExtractorsFactory;
						public setMp4ExtractorFlags(param0: number): com.google.android.exoplayer2.extractor.DefaultExtractorsFactory;
						public setTsExtractorFlags(param0: number): com.google.android.exoplayer2.extractor.DefaultExtractorsFactory;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class DummyExtractorOutput extends com.google.android.exoplayer2.extractor.ExtractorOutput {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.DummyExtractorOutput>;
						public constructor();
						public track(param0: number, param1: number): com.google.android.exoplayer2.extractor.TrackOutput;
						public endTracks(): void;
						public seekMap(param0: com.google.android.exoplayer2.extractor.SeekMap): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class DummyTrackOutput extends com.google.android.exoplayer2.extractor.TrackOutput {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.DummyTrackOutput>;
						public constructor();
						public sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean, param3: number): number;
						public format(param0: com.google.android.exoplayer2.Format): void;
						public sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): void;
						public sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number, param2: number): void;
						public sampleMetadata(param0: number, param1: number, param2: number, param3: number, param4: com.google.android.exoplayer2.extractor.TrackOutput.CryptoData): void;
						public sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class Extractor {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.Extractor>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.extractor.Extractor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
							seek(param0: number, param1: number): void;
							release(): void;
						});
						public constructor();
						public static RESULT_CONTINUE: number;
						public static RESULT_SEEK: number;
						public static RESULT_END_OF_INPUT: number;
						public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
						public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
						public seek(param0: number, param1: number): void;
						public release(): void;
						public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
					}
					export module Extractor {
						export class ReadResult {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.Extractor.ReadResult>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.extractor.Extractor$ReadResult interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class ExtractorInput extends com.google.android.exoplayer2.upstream.DataReader {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ExtractorInput>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.extractor.ExtractorInput interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							read(param0: androidNative.Array<number>, param1: number, param2: number): number;
							readFully(param0: androidNative.Array<number>, param1: number, param2: number, param3: boolean): boolean;
							readFully(param0: androidNative.Array<number>, param1: number, param2: number): void;
							skip(param0: number): number;
							skipFully(param0: number, param1: boolean): boolean;
							skipFully(param0: number): void;
							peek(param0: androidNative.Array<number>, param1: number, param2: number): number;
							peekFully(param0: androidNative.Array<number>, param1: number, param2: number, param3: boolean): boolean;
							peekFully(param0: androidNative.Array<number>, param1: number, param2: number): void;
							advancePeekPosition(param0: number, param1: boolean): boolean;
							advancePeekPosition(param0: number): void;
							resetPeekPosition(): void;
							getPeekPosition(): number;
							getPosition(): number;
							getLength(): number;
							setRetryPosition(param0: number, param1: java.lang.Throwable): void;
							read(param0: androidNative.Array<number>, param1: number, param2: number): number;
						});
						public constructor();
						public skip(param0: number): number;
						public peek(param0: androidNative.Array<number>, param1: number, param2: number): number;
						public setRetryPosition(param0: number, param1: java.lang.Throwable): void;
						public peekFully(param0: androidNative.Array<number>, param1: number, param2: number): void;
						public resetPeekPosition(): void;
						public getPosition(): number;
						public getLength(): number;
						public advancePeekPosition(param0: number, param1: boolean): boolean;
						public readFully(param0: androidNative.Array<number>, param1: number, param2: number, param3: boolean): boolean;
						public readFully(param0: androidNative.Array<number>, param1: number, param2: number): void;
						public peekFully(param0: androidNative.Array<number>, param1: number, param2: number, param3: boolean): boolean;
						public advancePeekPosition(param0: number): void;
						public getPeekPosition(): number;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
						public skipFully(param0: number, param1: boolean): boolean;
						public skipFully(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class ExtractorOutput {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ExtractorOutput>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.extractor.ExtractorOutput interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							track(param0: number, param1: number): com.google.android.exoplayer2.extractor.TrackOutput;
							endTracks(): void;
							seekMap(param0: com.google.android.exoplayer2.extractor.SeekMap): void;
							<clinit>(): void;
						});
						public constructor();
						public static PLACEHOLDER: com.google.android.exoplayer2.extractor.ExtractorOutput;
						public track(param0: number, param1: number): com.google.android.exoplayer2.extractor.TrackOutput;
						public endTracks(): void;
						public seekMap(param0: com.google.android.exoplayer2.extractor.SeekMap): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class ExtractorUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ExtractorUtil>;
						public static peekToLength(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: androidNative.Array<number>, param2: number, param3: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class ExtractorsFactory {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ExtractorsFactory>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.extractor.ExtractorsFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							createExtractors(): androidNative.Array<com.google.android.exoplayer2.extractor.Extractor>;
							createExtractors(param0: globalAndroid.net.Uri, param1: java.util.Map<string,java.util.List<string>>): androidNative.Array<com.google.android.exoplayer2.extractor.Extractor>;
							lambda$static$0(): androidNative.Array<com.google.android.exoplayer2.extractor.Extractor>;
							<clinit>(): void;
						});
						public constructor();
						public static EMPTY: com.google.android.exoplayer2.extractor.ExtractorsFactory;
						public createExtractors(param0: globalAndroid.net.Uri, param1: java.util.Map<string,java.util.List<string>>): androidNative.Array<com.google.android.exoplayer2.extractor.Extractor>;
						public createExtractors(): androidNative.Array<com.google.android.exoplayer2.extractor.Extractor>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class FlacFrameReader {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.FlacFrameReader>;
						public static checkAndReadFrameHeader(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: com.google.android.exoplayer2.extractor.FlacStreamMetadata, param2: number, param3: com.google.android.exoplayer2.extractor.FlacFrameReader.SampleNumberHolder): boolean;
						public static readFrameBlockSizeSamplesFromKey(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): number;
						public static getFirstSampleNumber(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.FlacStreamMetadata): number;
						public static checkFrameHeaderFromPeek(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.FlacStreamMetadata, param2: number, param3: com.google.android.exoplayer2.extractor.FlacFrameReader.SampleNumberHolder): boolean;
					}
					export module FlacFrameReader {
						export class SampleNumberHolder {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.FlacFrameReader.SampleNumberHolder>;
							public sampleNumber: number;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class FlacMetadataReader {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.FlacMetadataReader>;
						public static readStreamMarker(param0: com.google.android.exoplayer2.extractor.ExtractorInput): void;
						public static readId3Metadata(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: boolean): com.google.android.exoplayer2.metadata.Metadata;
						public static getFrameStartMarker(param0: com.google.android.exoplayer2.extractor.ExtractorInput): number;
						public static peekId3Metadata(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: boolean): com.google.android.exoplayer2.metadata.Metadata;
						public static readSeekTableMetadataBlock(param0: com.google.android.exoplayer2.util.ParsableByteArray): com.google.android.exoplayer2.extractor.FlacStreamMetadata.SeekTable;
						public static checkAndPeekStreamMarker(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
						public static readMetadataBlock(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.FlacMetadataReader.FlacStreamMetadataHolder): boolean;
					}
					export module FlacMetadataReader {
						export class FlacStreamMetadataHolder {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.FlacMetadataReader.FlacStreamMetadataHolder>;
							public flacStreamMetadata: com.google.android.exoplayer2.extractor.FlacStreamMetadata;
							public constructor(param0: com.google.android.exoplayer2.extractor.FlacStreamMetadata);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class FlacSeekTableSeekMap extends com.google.android.exoplayer2.extractor.SeekMap {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.FlacSeekTableSeekMap>;
						public getDurationUs(): number;
						public constructor(param0: com.google.android.exoplayer2.extractor.FlacStreamMetadata, param1: number);
						public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
						public isSeekable(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class FlacStreamMetadata {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.FlacStreamMetadata>;
						public static NOT_IN_LOOKUP_TABLE: number;
						public minBlockSizeSamples: number;
						public maxBlockSizeSamples: number;
						public minFrameSize: number;
						public maxFrameSize: number;
						public sampleRate: number;
						public sampleRateLookupKey: number;
						public channels: number;
						public bitsPerSample: number;
						public bitsPerSampleLookupKey: number;
						public totalSamples: number;
						public seekTable: com.google.android.exoplayer2.extractor.FlacStreamMetadata.SeekTable;
						public getMaxDecodedFrameSize(): number;
						public getDecodedBitrate(): number;
						public getDurationUs(): number;
						public getApproxBytesPerFrame(): number;
						public constructor(param0: androidNative.Array<number>, param1: number);
						public getFormat(param0: androidNative.Array<number>, param1: com.google.android.exoplayer2.metadata.Metadata): com.google.android.exoplayer2.Format;
						public copyWithPictureFrames(param0: java.util.List<com.google.android.exoplayer2.metadata.flac.PictureFrame>): com.google.android.exoplayer2.extractor.FlacStreamMetadata;
						public copyWithVorbisComments(param0: java.util.List<string>): com.google.android.exoplayer2.extractor.FlacStreamMetadata;
						public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.util.ArrayList<string>, param9: java.util.ArrayList<com.google.android.exoplayer2.metadata.flac.PictureFrame>);
						public copyWithSeekTable(param0: com.google.android.exoplayer2.extractor.FlacStreamMetadata.SeekTable): com.google.android.exoplayer2.extractor.FlacStreamMetadata;
						public getMetadataCopyWithAppendedEntriesFrom(param0: com.google.android.exoplayer2.metadata.Metadata): com.google.android.exoplayer2.metadata.Metadata;
						public getSampleNumber(param0: number): number;
					}
					export module FlacStreamMetadata {
						export class SeekTable {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.FlacStreamMetadata.SeekTable>;
							public pointSampleNumbers: androidNative.Array<number>;
							public pointOffsets: androidNative.Array<number>;
							public constructor(param0: androidNative.Array<number>, param1: androidNative.Array<number>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class ForwardingExtractorInput extends com.google.android.exoplayer2.extractor.ExtractorInput {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ForwardingExtractorInput>;
						public skip(param0: number): number;
						public peek(param0: androidNative.Array<number>, param1: number, param2: number): number;
						public setRetryPosition(param0: number, param1: java.lang.Throwable): void;
						public peekFully(param0: androidNative.Array<number>, param1: number, param2: number): void;
						public constructor(param0: com.google.android.exoplayer2.extractor.ExtractorInput);
						public resetPeekPosition(): void;
						public getPosition(): number;
						public getLength(): number;
						public advancePeekPosition(param0: number, param1: boolean): boolean;
						public readFully(param0: androidNative.Array<number>, param1: number, param2: number, param3: boolean): boolean;
						public readFully(param0: androidNative.Array<number>, param1: number, param2: number): void;
						public peekFully(param0: androidNative.Array<number>, param1: number, param2: number, param3: boolean): boolean;
						public advancePeekPosition(param0: number): void;
						public getPeekPosition(): number;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
						public skipFully(param0: number, param1: boolean): boolean;
						public skipFully(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class GaplessInfoHolder {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.GaplessInfoHolder>;
						public encoderDelay: number;
						public encoderPadding: number;
						public constructor();
						public setFromMetadata(param0: com.google.android.exoplayer2.metadata.Metadata): boolean;
						public setFromXingHeaderValue(param0: number): boolean;
						public hasGaplessInfo(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class Id3Peeker {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.Id3Peeker>;
						public constructor();
						public peekId3Data(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.metadata.id3.Id3Decoder.FramePredicate): com.google.android.exoplayer2.metadata.Metadata;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class IndexSeekMap extends com.google.android.exoplayer2.extractor.SeekMap {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.IndexSeekMap>;
						public constructor(param0: androidNative.Array<number>, param1: androidNative.Array<number>, param2: number);
						public getDurationUs(): number;
						public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
						public isSeekable(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class PositionHolder {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.PositionHolder>;
						public position: number;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class SeekMap {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.SeekMap>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.extractor.SeekMap interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							isSeekable(): boolean;
							getDurationUs(): number;
							getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
						});
						public constructor();
						public getDurationUs(): number;
						public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
						public isSeekable(): boolean;
					}
					export module SeekMap {
						export class SeekPoints {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.SeekMap.SeekPoints>;
							public first: com.google.android.exoplayer2.extractor.SeekPoint;
							public second: com.google.android.exoplayer2.extractor.SeekPoint;
							public constructor(param0: com.google.android.exoplayer2.extractor.SeekPoint, param1: com.google.android.exoplayer2.extractor.SeekPoint);
							public constructor(param0: com.google.android.exoplayer2.extractor.SeekPoint);
							public hashCode(): number;
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export class Unseekable extends com.google.android.exoplayer2.extractor.SeekMap {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.SeekMap.Unseekable>;
							public getDurationUs(): number;
							public constructor(param0: number, param1: number);
							public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
							public constructor(param0: number);
							public isSeekable(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class SeekPoint {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.SeekPoint>;
						public static START: com.google.android.exoplayer2.extractor.SeekPoint;
						public timeUs: number;
						public position: number;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public constructor(param0: number, param1: number);
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class TrackOutput {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.TrackOutput>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.extractor.TrackOutput interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							format(param0: com.google.android.exoplayer2.Format): void;
							sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean): number;
							sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): void;
							sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean, param3: number): number;
							sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number, param2: number): void;
							sampleMetadata(param0: number, param1: number, param2: number, param3: number, param4: com.google.android.exoplayer2.extractor.TrackOutput.CryptoData): void;
						});
						public constructor();
						public static SAMPLE_DATA_PART_MAIN: number;
						public static SAMPLE_DATA_PART_ENCRYPTION: number;
						public static SAMPLE_DATA_PART_SUPPLEMENTAL: number;
						public sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean, param3: number): number;
						public format(param0: com.google.android.exoplayer2.Format): void;
						public sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): void;
						public sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number, param2: number): void;
						public sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean): number;
						public sampleMetadata(param0: number, param1: number, param2: number, param3: number, param4: com.google.android.exoplayer2.extractor.TrackOutput.CryptoData): void;
					}
					export module TrackOutput {
						export class CryptoData {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.TrackOutput.CryptoData>;
							public cryptoMode: number;
							public encryptionKey: androidNative.Array<number>;
							public encryptedBlocks: number;
							public clearBlocks: number;
							public constructor(param0: number, param1: androidNative.Array<number>, param2: number, param3: number);
							public hashCode(): number;
							public equals(param0: any): boolean;
						}
						export class SampleDataPart {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.TrackOutput.SampleDataPart>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.extractor.TrackOutput$SampleDataPart interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class VorbisBitArray {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.VorbisBitArray>;
						public constructor(param0: androidNative.Array<number>);
						public skipBits(param0: number): void;
						public readBits(param0: number): number;
						public getPosition(): number;
						public setPosition(param0: number): void;
						public readBit(): boolean;
						public bitsLeft(): number;
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export class VorbisUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.extractor.VorbisUtil>;
						public static readVorbisCommentHeader(param0: com.google.android.exoplayer2.util.ParsableByteArray): com.google.android.exoplayer2.extractor.VorbisUtil.CommentHeader;
						public static readVorbisCommentHeader(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: boolean, param2: boolean): com.google.android.exoplayer2.extractor.VorbisUtil.CommentHeader;
						public static readVorbisIdentificationHeader(param0: com.google.android.exoplayer2.util.ParsableByteArray): com.google.android.exoplayer2.extractor.VorbisUtil.VorbisIdHeader;
						public static verifyVorbisHeaderCapturePattern(param0: number, param1: com.google.android.exoplayer2.util.ParsableByteArray, param2: boolean): boolean;
						public static iLog(param0: number): number;
						public static readVorbisModes(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): androidNative.Array<com.google.android.exoplayer2.extractor.VorbisUtil.Mode>;
					}
					export module VorbisUtil {
						export class CodeBook {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.VorbisUtil.CodeBook>;
							public dimensions: number;
							public entries: number;
							public lengthMap: androidNative.Array<number>;
							public lookupType: number;
							public isOrdered: boolean;
							public constructor(param0: number, param1: number, param2: androidNative.Array<number>, param3: number, param4: boolean);
						}
						export class CommentHeader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.VorbisUtil.CommentHeader>;
							public vendor: string;
							public comments: androidNative.Array<string>;
							public length: number;
							public constructor(param0: string, param1: androidNative.Array<string>, param2: number);
						}
						export class Mode {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.VorbisUtil.Mode>;
							public blockFlag: boolean;
							public windowType: number;
							public transformType: number;
							public mapping: number;
							public constructor(param0: boolean, param1: number, param2: number, param3: number);
						}
						export class VorbisIdHeader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.VorbisUtil.VorbisIdHeader>;
							public version: number;
							public channels: number;
							public sampleRate: number;
							public bitrateMaximum: number;
							public bitrateNominal: number;
							public bitrateMinimum: number;
							public blockSize0: number;
							public blockSize1: number;
							public framingFlag: boolean;
							public data: androidNative.Array<number>;
							public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: boolean, param9: androidNative.Array<number>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module amr {
						export class AmrExtractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.amr.AmrExtractor>;
							public static FACTORY: com.google.android.exoplayer2.extractor.ExtractorsFactory;
							public static FLAG_ENABLE_CONSTANT_BITRATE_SEEKING: number;
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public seek(param0: number, param1: number): void;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
							public constructor(param0: number);
						}
						export module AmrExtractor {
							export class Flags {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.amr.AmrExtractor.Flags>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.extractor.amr.AmrExtractor$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module flac {
						export class FlacBinarySearchSeeker extends com.google.android.exoplayer2.extractor.BinarySearchSeeker {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.flac.FlacBinarySearchSeeker>;
							public constructor(param0: com.google.android.exoplayer2.extractor.FlacStreamMetadata, param1: number, param2: number, param3: number);
							public constructor(param0: com.google.android.exoplayer2.extractor.BinarySearchSeeker.SeekTimestampConverter, param1: com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSeeker, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number);
						}
						export module FlacBinarySearchSeeker {
							export class FlacTimestampSeeker extends com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSeeker {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.flac.FlacBinarySearchSeeker.FlacTimestampSeeker>;
								public searchForTimestamp(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: number): com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSearchResult;
								public onSeekFinished(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module flac {
						export class FlacExtractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.flac.FlacExtractor>;
							public static FACTORY: com.google.android.exoplayer2.extractor.ExtractorsFactory;
							public static FLAG_DISABLE_ID3_METADATA: number;
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public seek(param0: number, param1: number): void;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
							public constructor(param0: number);
						}
						export module FlacExtractor {
							export class Flags {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.flac.FlacExtractor.Flags>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.extractor.flac.FlacExtractor$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module flv {
						export class AudioTagPayloadReader extends com.google.android.exoplayer2.extractor.flv.TagPayloadReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.flv.AudioTagPayloadReader>;
							public seek(): void;
							public constructor(param0: com.google.android.exoplayer2.extractor.TrackOutput);
							public parseHeader(param0: com.google.android.exoplayer2.util.ParsableByteArray): boolean;
							public parsePayload(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module flv {
						export class FlvExtractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.flv.FlvExtractor>;
							public static FACTORY: com.google.android.exoplayer2.extractor.ExtractorsFactory;
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public seek(param0: number, param1: number): void;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module flv {
						export class ScriptTagPayloadReader extends com.google.android.exoplayer2.extractor.flv.TagPayloadReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.flv.ScriptTagPayloadReader>;
							public constructor();
							public getDurationUs(): number;
							public seek(): void;
							public getKeyFrameTimesUs(): androidNative.Array<number>;
							public constructor(param0: com.google.android.exoplayer2.extractor.TrackOutput);
							public getKeyFrameTagPositions(): androidNative.Array<number>;
							public parseHeader(param0: com.google.android.exoplayer2.util.ParsableByteArray): boolean;
							public parsePayload(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module flv {
						export abstract class TagPayloadReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.flv.TagPayloadReader>;
							public output: com.google.android.exoplayer2.extractor.TrackOutput;
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): boolean;
							public seek(): void;
							public constructor(param0: com.google.android.exoplayer2.extractor.TrackOutput);
							public parseHeader(param0: com.google.android.exoplayer2.util.ParsableByteArray): boolean;
							public parsePayload(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): boolean;
						}
						export module TagPayloadReader {
							export class UnsupportedFormatException extends com.google.android.exoplayer2.ParserException {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.flv.TagPayloadReader.UnsupportedFormatException>;
								public constructor(param0: java.lang.Throwable);
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor();
								public constructor(param0: string);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module flv {
						export class VideoTagPayloadReader extends com.google.android.exoplayer2.extractor.flv.TagPayloadReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.flv.VideoTagPayloadReader>;
							public seek(): void;
							public constructor(param0: com.google.android.exoplayer2.extractor.TrackOutput);
							public parseHeader(param0: com.google.android.exoplayer2.util.ParsableByteArray): boolean;
							public parsePayload(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): boolean;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module jpeg {
						export class JpegExtractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.jpeg.JpegExtractor>;
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public seek(param0: number, param1: number): void;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module jpeg {
						export class MotionPhotoDescription {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.jpeg.MotionPhotoDescription>;
							public photoPresentationTimestampUs: number;
							public items: java.util.List<com.google.android.exoplayer2.extractor.jpeg.MotionPhotoDescription.ContainerItem>;
							public getMotionPhotoMetadata(param0: number): com.google.android.exoplayer2.metadata.mp4.MotionPhotoMetadata;
							public constructor(param0: number, param1: java.util.List<com.google.android.exoplayer2.extractor.jpeg.MotionPhotoDescription.ContainerItem>);
						}
						export module MotionPhotoDescription {
							export class ContainerItem {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.jpeg.MotionPhotoDescription.ContainerItem>;
								public mime: string;
								public semantic: string;
								public length: number;
								public padding: number;
								public constructor(param0: string, param1: string, param2: number, param3: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module jpeg {
						export class StartOffsetExtractorInput extends com.google.android.exoplayer2.extractor.ForwardingExtractorInput {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.jpeg.StartOffsetExtractorInput>;
							public skipFully(param0: number): void;
							public skip(param0: number): number;
							public advancePeekPosition(param0: number, param1: boolean): boolean;
							public getPosition(): number;
							public constructor(param0: com.google.android.exoplayer2.extractor.ExtractorInput);
							public peek(param0: androidNative.Array<number>, param1: number, param2: number): number;
							public advancePeekPosition(param0: number): void;
							public peekFully(param0: androidNative.Array<number>, param1: number, param2: number): void;
							public readFully(param0: androidNative.Array<number>, param1: number, param2: number, param3: boolean): boolean;
							public peekFully(param0: androidNative.Array<number>, param1: number, param2: number, param3: boolean): boolean;
							public constructor(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: number);
							public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
							public getLength(): number;
							public readFully(param0: androidNative.Array<number>, param1: number, param2: number): void;
							public resetPeekPosition(): void;
							public setRetryPosition(param0: number, param1: java.lang.Throwable): void;
							public skipFully(param0: number, param1: boolean): boolean;
							public getPeekPosition(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module jpeg {
						export class StartOffsetExtractorOutput extends com.google.android.exoplayer2.extractor.ExtractorOutput {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.jpeg.StartOffsetExtractorOutput>;
							public constructor(param0: number, param1: com.google.android.exoplayer2.extractor.ExtractorOutput);
							public track(param0: number, param1: number): com.google.android.exoplayer2.extractor.TrackOutput;
							public endTracks(): void;
							public seekMap(param0: com.google.android.exoplayer2.extractor.SeekMap): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module jpeg {
						export class XmpMotionPhotoDescriptionParser {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.jpeg.XmpMotionPhotoDescriptionParser>;
							public static parse(param0: string): com.google.android.exoplayer2.extractor.jpeg.MotionPhotoDescription;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mkv {
						export class DefaultEbmlReader extends com.google.android.exoplayer2.extractor.mkv.EbmlReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader>;
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.mkv.EbmlProcessor): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public reset(): void;
						}
						export module DefaultEbmlReader {
							export class MasterElement {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mkv.DefaultEbmlReader.MasterElement>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mkv {
						export class EbmlProcessor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mkv.EbmlProcessor>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.extractor.mkv.EbmlProcessor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getElementType(param0: number): number;
								isLevel1Element(param0: number): boolean;
								startMasterElement(param0: number, param1: number, param2: number): void;
								endMasterElement(param0: number): void;
								integerElement(param0: number, param1: number): void;
								floatElement(param0: number, param1: number): void;
								stringElement(param0: number, param1: string): void;
								binaryElement(param0: number, param1: number, param2: com.google.android.exoplayer2.extractor.ExtractorInput): void;
							});
							public constructor();
							public static ELEMENT_TYPE_UNKNOWN: number;
							public static ELEMENT_TYPE_MASTER: number;
							public static ELEMENT_TYPE_FLOAT: number;
							public static ELEMENT_TYPE_UNSIGNED_INT: number;
							public static ELEMENT_TYPE_STRING: number;
							public static ELEMENT_TYPE_BINARY: number;
							public isLevel1Element(param0: number): boolean;
							public stringElement(param0: number, param1: string): void;
							public getElementType(param0: number): number;
							public floatElement(param0: number, param1: number): void;
							public binaryElement(param0: number, param1: number, param2: com.google.android.exoplayer2.extractor.ExtractorInput): void;
							public startMasterElement(param0: number, param1: number, param2: number): void;
							public endMasterElement(param0: number): void;
							public integerElement(param0: number, param1: number): void;
						}
						export module EbmlProcessor {
							export class ElementType {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mkv.EbmlProcessor.ElementType>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.extractor.mkv.EbmlProcessor$ElementType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mkv {
						export class EbmlReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mkv.EbmlReader>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.extractor.mkv.EbmlReader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								init(param0: com.google.android.exoplayer2.extractor.mkv.EbmlProcessor): void;
								reset(): void;
								read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							});
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.mkv.EbmlProcessor): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mkv {
						export class MatroskaExtractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor>;
							public static FACTORY: com.google.android.exoplayer2.extractor.ExtractorsFactory;
							public static FLAG_DISABLE_SEEK_FOR_CUES: number;
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public isLevel1Element(param0: number): boolean;
							public stringElement(param0: number, param1: string): void;
							public floatElement(param0: number, param1: number): void;
							public binaryElement(param0: number, param1: number, param2: com.google.android.exoplayer2.extractor.ExtractorInput): void;
							public startMasterElement(param0: number, param1: number, param2: number): void;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
							public constructor(param0: number);
							public integerElement(param0: number, param1: number): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public seek(param0: number, param1: number): void;
							public getElementType(param0: number): number;
							public handleBlockAdditionalData(param0: com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track, param1: number, param2: com.google.android.exoplayer2.extractor.ExtractorInput, param3: number): void;
							public handleBlockAddIDExtraData(param0: com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track, param1: com.google.android.exoplayer2.extractor.ExtractorInput, param2: number): void;
							public endMasterElement(param0: number): void;
						}
						export module MatroskaExtractor {
							export class Flags {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Flags>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
							export class InnerEbmlProcessor extends com.google.android.exoplayer2.extractor.mkv.EbmlProcessor {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.InnerEbmlProcessor>;
								public stringElement(param0: number, param1: string): void;
								public isLevel1Element(param0: number): boolean;
								public binaryElement(param0: number, param1: number, param2: com.google.android.exoplayer2.extractor.ExtractorInput): void;
								public startMasterElement(param0: number, param1: number, param2: number): void;
								public integerElement(param0: number, param1: number): void;
								public getElementType(param0: number): number;
								public floatElement(param0: number, param1: number): void;
								public endMasterElement(param0: number): void;
							}
							export class Track {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track>;
								public name: string;
								public codecId: string;
								public number: number;
								public type: number;
								public defaultSampleDurationNs: number;
								public maxBlockAdditionId: number;
								public hasContentEncryption: boolean;
								public sampleStrippedBytes: androidNative.Array<number>;
								public cryptoData: com.google.android.exoplayer2.extractor.TrackOutput.CryptoData;
								public codecPrivate: androidNative.Array<number>;
								public drmInitData: com.google.android.exoplayer2.drm.DrmInitData;
								public width: number;
								public height: number;
								public displayWidth: number;
								public displayHeight: number;
								public displayUnit: number;
								public projectionType: number;
								public projectionPoseYaw: number;
								public projectionPosePitch: number;
								public projectionPoseRoll: number;
								public projectionData: androidNative.Array<number>;
								public stereoMode: number;
								public hasColorInfo: boolean;
								public colorSpace: number;
								public colorTransfer: number;
								public colorRange: number;
								public maxContentLuminance: number;
								public maxFrameAverageLuminance: number;
								public primaryRChromaticityX: number;
								public primaryRChromaticityY: number;
								public primaryGChromaticityX: number;
								public primaryGChromaticityY: number;
								public primaryBChromaticityX: number;
								public primaryBChromaticityY: number;
								public whitePointChromaticityX: number;
								public whitePointChromaticityY: number;
								public maxMasteringLuminance: number;
								public minMasteringLuminance: number;
								public dolbyVisionConfigBytes: androidNative.Array<number>;
								public channelCount: number;
								public audioBitDepth: number;
								public sampleRate: number;
								public codecDelayNs: number;
								public seekPreRollNs: number;
								public trueHdSampleRechunker: com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.TrueHdSampleRechunker;
								public flagForced: boolean;
								public flagDefault: boolean;
								public output: com.google.android.exoplayer2.extractor.TrackOutput;
								public nalUnitLengthFieldLength: number;
								public reset(): void;
								public initializeOutput(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: number): void;
								public outputPendingSampleMetadata(): void;
							}
							export class TrueHdSampleRechunker {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.TrueHdSampleRechunker>;
								public outputPendingSampleMetadata(param0: com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track): void;
								public sampleMetadata(param0: com.google.android.exoplayer2.extractor.mkv.MatroskaExtractor.Track, param1: number, param2: number, param3: number, param4: number): void;
								public reset(): void;
								public startSample(param0: com.google.android.exoplayer2.extractor.ExtractorInput): void;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mkv {
						export class Sniffer {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mkv.Sniffer>;
							public constructor();
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mkv {
						export class VarintReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mkv.VarintReader>;
							public constructor();
							public readUnsignedVarint(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: boolean, param2: boolean, param3: number): number;
							public getLastLength(): number;
							public static assembleVarint(param0: androidNative.Array<number>, param1: number, param2: boolean): number;
							public static parseUnsignedVarintLength(param0: number): number;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp3 {
						export class ConstantBitrateSeeker extends com.google.android.exoplayer2.extractor.ConstantBitrateSeekMap implements com.google.android.exoplayer2.extractor.mp3.Seeker {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp3.ConstantBitrateSeeker>;
							public getTimeUs(param0: number): number;
							public getDataEndPosition(): number;
							public getDurationUs(): number;
							public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
							public constructor(param0: number, param1: number, param2: com.google.android.exoplayer2.audio.MpegAudioUtil.Header);
							public constructor(param0: number, param1: number, param2: number, param3: number);
							public isSeekable(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp3 {
						export class IndexSeeker extends com.google.android.exoplayer2.extractor.mp3.Seeker {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp3.IndexSeeker>;
							public getTimeUs(param0: number): number;
							public constructor(param0: number, param1: number, param2: number);
							public isTimeUsInIndex(param0: number): boolean;
							public getDataEndPosition(): number;
							public getDurationUs(): number;
							public maybeAddSeekPoint(param0: number, param1: number): void;
							public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
							public isSeekable(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp3 {
						export class MlltSeeker extends com.google.android.exoplayer2.extractor.mp3.Seeker {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp3.MlltSeeker>;
							public getTimeUs(param0: number): number;
							public getDurationUs(): number;
							public getDataEndPosition(): number;
							public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
							public static create(param0: number, param1: com.google.android.exoplayer2.metadata.id3.MlltFrame, param2: number): com.google.android.exoplayer2.extractor.mp3.MlltSeeker;
							public isSeekable(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp3 {
						export class Mp3Extractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp3.Mp3Extractor>;
							public static FACTORY: com.google.android.exoplayer2.extractor.ExtractorsFactory;
							public static FLAG_ENABLE_CONSTANT_BITRATE_SEEKING: number;
							public static FLAG_ENABLE_INDEX_SEEKING: number;
							public static FLAG_DISABLE_ID3_METADATA: number;
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public constructor(param0: number, param1: number);
							public seek(param0: number, param1: number): void;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
							public constructor(param0: number);
							public disableSeeking(): void;
						}
						export module Mp3Extractor {
							export class Flags {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp3.Mp3Extractor.Flags>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.extractor.mp3.Mp3Extractor$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp3 {
						export class Seeker extends com.google.android.exoplayer2.extractor.SeekMap {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp3.Seeker>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.extractor.mp3.Seeker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getTimeUs(param0: number): number;
								getDataEndPosition(): number;
								isSeekable(): boolean;
								getDurationUs(): number;
								getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
							});
							public constructor();
							public getTimeUs(param0: number): number;
							public getDataEndPosition(): number;
							public getDurationUs(): number;
							public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
							public isSeekable(): boolean;
						}
						export module Seeker {
							export class UnseekableSeeker extends com.google.android.exoplayer2.extractor.SeekMap.Unseekable implements com.google.android.exoplayer2.extractor.mp3.Seeker {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp3.Seeker.UnseekableSeeker>;
								public getDurationUs(): number;
								public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
								public constructor(param0: number);
								public getTimeUs(param0: number): number;
								public constructor(param0: number, param1: number);
								public constructor();
								public getDataEndPosition(): number;
								public isSeekable(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp3 {
						export class VbriSeeker extends com.google.android.exoplayer2.extractor.mp3.Seeker {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp3.VbriSeeker>;
							public getTimeUs(param0: number): number;
							public getDurationUs(): number;
							public getDataEndPosition(): number;
							public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
							public static create(param0: number, param1: number, param2: com.google.android.exoplayer2.audio.MpegAudioUtil.Header, param3: com.google.android.exoplayer2.util.ParsableByteArray): com.google.android.exoplayer2.extractor.mp3.VbriSeeker;
							public isSeekable(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp3 {
						export class XingSeeker extends com.google.android.exoplayer2.extractor.mp3.Seeker {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp3.XingSeeker>;
							public static create(param0: number, param1: number, param2: com.google.android.exoplayer2.audio.MpegAudioUtil.Header, param3: com.google.android.exoplayer2.util.ParsableByteArray): com.google.android.exoplayer2.extractor.mp3.XingSeeker;
							public getTimeUs(param0: number): number;
							public getDurationUs(): number;
							public getDataEndPosition(): number;
							public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
							public isSeekable(): boolean;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp4 {
						export abstract class Atom {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.Atom>;
							public static HEADER_SIZE: number;
							public static FULL_HEADER_SIZE: number;
							public static LONG_HEADER_SIZE: number;
							public static DEFINES_LARGE_SIZE: number;
							public static EXTENDS_TO_END_SIZE: number;
							public static TYPE_ftyp: number;
							public static TYPE_avc1: number;
							public static TYPE_avc3: number;
							public static TYPE_avcC: number;
							public static TYPE_hvc1: number;
							public static TYPE_hev1: number;
							public static TYPE_hvcC: number;
							public static TYPE_vp08: number;
							public static TYPE_vp09: number;
							public static TYPE_vpcC: number;
							public static TYPE_av01: number;
							public static TYPE_av1C: number;
							public static TYPE_dvav: number;
							public static TYPE_dva1: number;
							public static TYPE_dvhe: number;
							public static TYPE_dvh1: number;
							public static TYPE_dvcC: number;
							public static TYPE_dvvC: number;
							public static TYPE_s263: number;
							public static TYPE_d263: number;
							public static TYPE_mdat: number;
							public static TYPE_mp4a: number;
							public static TYPE__mp2: number;
							public static TYPE__mp3: number;
							public static TYPE_wave: number;
							public static TYPE_lpcm: number;
							public static TYPE_sowt: number;
							public static TYPE_ac_3: number;
							public static TYPE_dac3: number;
							public static TYPE_ec_3: number;
							public static TYPE_dec3: number;
							public static TYPE_ac_4: number;
							public static TYPE_dac4: number;
							public static TYPE_dtsc: number;
							public static TYPE_dtsh: number;
							public static TYPE_dtsl: number;
							public static TYPE_dtse: number;
							public static TYPE_ddts: number;
							public static TYPE_tfdt: number;
							public static TYPE_tfhd: number;
							public static TYPE_trex: number;
							public static TYPE_trun: number;
							public static TYPE_sidx: number;
							public static TYPE_moov: number;
							public static TYPE_mpvd: number;
							public static TYPE_mvhd: number;
							public static TYPE_trak: number;
							public static TYPE_mdia: number;
							public static TYPE_minf: number;
							public static TYPE_stbl: number;
							public static TYPE_esds: number;
							public static TYPE_moof: number;
							public static TYPE_traf: number;
							public static TYPE_mvex: number;
							public static TYPE_mehd: number;
							public static TYPE_tkhd: number;
							public static TYPE_edts: number;
							public static TYPE_elst: number;
							public static TYPE_mdhd: number;
							public static TYPE_hdlr: number;
							public static TYPE_stsd: number;
							public static TYPE_pssh: number;
							public static TYPE_sinf: number;
							public static TYPE_schm: number;
							public static TYPE_schi: number;
							public static TYPE_tenc: number;
							public static TYPE_encv: number;
							public static TYPE_enca: number;
							public static TYPE_frma: number;
							public static TYPE_saiz: number;
							public static TYPE_saio: number;
							public static TYPE_sbgp: number;
							public static TYPE_sgpd: number;
							public static TYPE_uuid: number;
							public static TYPE_senc: number;
							public static TYPE_pasp: number;
							public static TYPE_TTML: number;
							public static TYPE_m1v_: number;
							public static TYPE_mp4v: number;
							public static TYPE_stts: number;
							public static TYPE_stss: number;
							public static TYPE_ctts: number;
							public static TYPE_stsc: number;
							public static TYPE_stsz: number;
							public static TYPE_stz2: number;
							public static TYPE_stco: number;
							public static TYPE_co64: number;
							public static TYPE_tx3g: number;
							public static TYPE_wvtt: number;
							public static TYPE_stpp: number;
							public static TYPE_c608: number;
							public static TYPE_samr: number;
							public static TYPE_sawb: number;
							public static TYPE_udta: number;
							public static TYPE_meta: number;
							public static TYPE_smta: number;
							public static TYPE_saut: number;
							public static TYPE_keys: number;
							public static TYPE_ilst: number;
							public static TYPE_mean: number;
							public static TYPE_name: number;
							public static TYPE_data: number;
							public static TYPE_emsg: number;
							public static TYPE_st3d: number;
							public static TYPE_sv3d: number;
							public static TYPE_proj: number;
							public static TYPE_camm: number;
							public static TYPE_mett: number;
							public static TYPE_alac: number;
							public static TYPE_alaw: number;
							public static TYPE_ulaw: number;
							public static TYPE_Opus: number;
							public static TYPE_dOps: number;
							public static TYPE_fLaC: number;
							public static TYPE_dfLa: number;
							public static TYPE_twos: number;
							public type: number;
							public static parseFullAtomVersion(param0: number): number;
							public static parseFullAtomFlags(param0: number): number;
							public toString(): string;
							public static getAtomTypeString(param0: number): string;
							public constructor(param0: number);
						}
						export module Atom {
							export class ContainerAtom extends com.google.android.exoplayer2.extractor.mp4.Atom {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom>;
								public endPosition: number;
								public leafChildren: java.util.List<com.google.android.exoplayer2.extractor.mp4.Atom.LeafAtom>;
								public containerChildren: java.util.List<com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom>;
								public toString(): string;
								public constructor(param0: number);
								public add(param0: com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom): void;
								public constructor(param0: number, param1: number);
								public add(param0: com.google.android.exoplayer2.extractor.mp4.Atom.LeafAtom): void;
								public getLeafAtomOfType(param0: number): com.google.android.exoplayer2.extractor.mp4.Atom.LeafAtom;
								public getChildAtomOfTypeCount(param0: number): number;
								public getContainerAtomOfType(param0: number): com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom;
							}
							export class LeafAtom extends com.google.android.exoplayer2.extractor.mp4.Atom {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.Atom.LeafAtom>;
								public data: com.google.android.exoplayer2.util.ParsableByteArray;
								public constructor(param0: number);
								public constructor(param0: number, param1: com.google.android.exoplayer2.util.ParsableByteArray);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp4 {
						export class AtomParsers {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.AtomParsers>;
							public static parseUdta(param0: com.google.android.exoplayer2.extractor.mp4.Atom.LeafAtom): globalAndroid.util.Pair<com.google.android.exoplayer2.metadata.Metadata,com.google.android.exoplayer2.metadata.Metadata>;
							public static parseMdtaFromMeta(param0: com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom): com.google.android.exoplayer2.metadata.Metadata;
							public static maybeSkipRemainingMetaAtomHeaderBytes(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public static parseTraks(param0: com.google.android.exoplayer2.extractor.mp4.Atom.ContainerAtom, param1: com.google.android.exoplayer2.extractor.GaplessInfoHolder, param2: number, param3: com.google.android.exoplayer2.drm.DrmInitData, param4: boolean, param5: boolean, param6: com.google.common.base.Function<com.google.android.exoplayer2.extractor.mp4.Track,com.google.android.exoplayer2.extractor.mp4.Track>): java.util.List<com.google.android.exoplayer2.extractor.mp4.TrackSampleTable>;
						}
						export module AtomParsers {
							export class ChunkIterator {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.AtomParsers.ChunkIterator>;
								public length: number;
								public index: number;
								public numSamples: number;
								public offset: number;
								public moveNext(): boolean;
								public constructor(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: com.google.android.exoplayer2.util.ParsableByteArray, param2: boolean);
							}
							export class SampleSizeBox {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.AtomParsers.SampleSizeBox>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.extractor.mp4.AtomParsers$SampleSizeBox interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									getSampleCount(): number;
									getFixedSampleSize(): number;
									readNextSampleSize(): number;
								});
								public constructor();
								public getSampleCount(): number;
								public readNextSampleSize(): number;
								public getFixedSampleSize(): number;
							}
							export class StsdData {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.AtomParsers.StsdData>;
								public static STSD_HEADER_SIZE: number;
								public trackEncryptionBoxes: androidNative.Array<com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox>;
								public format: com.google.android.exoplayer2.Format;
								public nalUnitLengthFieldLength: number;
								public requiredSampleTransformation: number;
								public constructor(param0: number);
							}
							export class StszSampleSizeBox extends com.google.android.exoplayer2.extractor.mp4.AtomParsers.SampleSizeBox {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.AtomParsers.StszSampleSizeBox>;
								public getSampleCount(): number;
								public readNextSampleSize(): number;
								public getFixedSampleSize(): number;
								public constructor(param0: com.google.android.exoplayer2.extractor.mp4.Atom.LeafAtom, param1: com.google.android.exoplayer2.Format);
							}
							export class Stz2SampleSizeBox extends com.google.android.exoplayer2.extractor.mp4.AtomParsers.SampleSizeBox {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.AtomParsers.Stz2SampleSizeBox>;
								public getSampleCount(): number;
								public constructor(param0: com.google.android.exoplayer2.extractor.mp4.Atom.LeafAtom);
								public readNextSampleSize(): number;
								public getFixedSampleSize(): number;
							}
							export class TkhdData {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.AtomParsers.TkhdData>;
								public constructor(param0: number, param1: number, param2: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp4 {
						export class DefaultSampleValues {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues>;
							public sampleDescriptionIndex: number;
							public duration: number;
							public size: number;
							public flags: number;
							public constructor(param0: number, param1: number, param2: number, param3: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp4 {
						export class FixedSampleSizeRechunker {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker>;
							public static rechunk(param0: number, param1: androidNative.Array<number>, param2: androidNative.Array<number>, param3: number): com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker.Results;
						}
						export module FixedSampleSizeRechunker {
							export class Results {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.FixedSampleSizeRechunker.Results>;
								public offsets: androidNative.Array<number>;
								public sizes: androidNative.Array<number>;
								public maximumSize: number;
								public timestamps: androidNative.Array<number>;
								public flags: androidNative.Array<number>;
								public duration: number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp4 {
						export class FragmentedMp4Extractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor>;
							public static FACTORY: com.google.android.exoplayer2.extractor.ExtractorsFactory;
							public static FLAG_WORKAROUND_EVERY_VIDEO_FRAME_IS_SYNC_FRAME: number;
							public static FLAG_WORKAROUND_IGNORE_TFDT_BOX: number;
							public static FLAG_ENABLE_EMSG_TRACK: number;
							public static FLAG_WORKAROUND_IGNORE_EDIT_LISTS: number;
							public constructor();
							public constructor(param0: number, param1: com.google.android.exoplayer2.util.TimestampAdjuster);
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public seek(param0: number, param1: number): void;
							public constructor(param0: number, param1: com.google.android.exoplayer2.util.TimestampAdjuster, param2: com.google.android.exoplayer2.extractor.mp4.Track, param3: java.util.List<com.google.android.exoplayer2.Format>);
							public modifyTrack(param0: com.google.android.exoplayer2.extractor.mp4.Track): com.google.android.exoplayer2.extractor.mp4.Track;
							public release(): void;
							public constructor(param0: number, param1: com.google.android.exoplayer2.util.TimestampAdjuster, param2: com.google.android.exoplayer2.extractor.mp4.Track);
							public constructor(param0: number, param1: com.google.android.exoplayer2.util.TimestampAdjuster, param2: com.google.android.exoplayer2.extractor.mp4.Track, param3: java.util.List<com.google.android.exoplayer2.Format>, param4: com.google.android.exoplayer2.extractor.TrackOutput);
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
							public constructor(param0: number);
						}
						export module FragmentedMp4Extractor {
							export class Flags {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.Flags>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
							export class MetadataSampleInfo {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.MetadataSampleInfo>;
								public presentationTimeDeltaUs: number;
								public size: number;
								public constructor(param0: number, param1: number);
							}
							export class TrackBundle {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.FragmentedMp4Extractor.TrackBundle>;
								public output: com.google.android.exoplayer2.extractor.TrackOutput;
								public fragment: com.google.android.exoplayer2.extractor.mp4.TrackFragment;
								public scratch: com.google.android.exoplayer2.util.ParsableByteArray;
								public moovSampleTable: com.google.android.exoplayer2.extractor.mp4.TrackSampleTable;
								public defaultSampleValues: com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues;
								public currentSampleIndex: number;
								public currentSampleInTrackRun: number;
								public currentTrackRunIndex: number;
								public firstSampleToOutputIndex: number;
								public outputSampleEncryptionData(param0: number, param1: number): number;
								public getEncryptionBoxIfEncrypted(): com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox;
								public getCurrentSampleFlags(): number;
								public getCurrentSampleSize(): number;
								public next(): boolean;
								public seek(param0: number): void;
								public getCurrentSampleOffset(): number;
								public skipSampleEncryptionData(): void;
								public constructor(param0: com.google.android.exoplayer2.extractor.TrackOutput, param1: com.google.android.exoplayer2.extractor.mp4.TrackSampleTable, param2: com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues);
								public updateDrmInitData(param0: com.google.android.exoplayer2.drm.DrmInitData): void;
								public resetFragmentInfo(): void;
								public getCurrentSamplePresentationTimeUs(): number;
								public reset(param0: com.google.android.exoplayer2.extractor.mp4.TrackSampleTable, param1: com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp4 {
						export class MetadataUtil {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.MetadataUtil>;
							public static setFormatGaplessInfo(param0: number, param1: com.google.android.exoplayer2.extractor.GaplessInfoHolder, param2: com.google.android.exoplayer2.Format.Builder): void;
							public static parseIlstElement(param0: com.google.android.exoplayer2.util.ParsableByteArray): com.google.android.exoplayer2.metadata.Metadata.Entry;
							public static parseMdtaMetadataEntryFromIlst(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number, param2: string): com.google.android.exoplayer2.metadata.mp4.MdtaMetadataEntry;
							public static setFormatMetadata(param0: number, param1: com.google.android.exoplayer2.metadata.Metadata, param2: com.google.android.exoplayer2.metadata.Metadata, param3: com.google.android.exoplayer2.Format.Builder, param4: androidNative.Array<com.google.android.exoplayer2.metadata.Metadata>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp4 {
						export class Mp4Extractor implements com.google.android.exoplayer2.extractor.Extractor, com.google.android.exoplayer2.extractor.SeekMap {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.Mp4Extractor>;
							public static FACTORY: com.google.android.exoplayer2.extractor.ExtractorsFactory;
							public static FLAG_WORKAROUND_IGNORE_EDIT_LISTS: number;
							public static FLAG_READ_MOTION_PHOTO_METADATA: number;
							public static FLAG_READ_SEF_DATA: number;
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public getDurationUs(): number;
							public seek(param0: number, param1: number): void;
							public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
							public constructor(param0: number);
							public isSeekable(): boolean;
						}
						export module Mp4Extractor {
							export class Flags {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.Flags>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.extractor.mp4.Mp4Extractor$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
							export class Mp4Track {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.Mp4Extractor.Mp4Track>;
								public track: com.google.android.exoplayer2.extractor.mp4.Track;
								public sampleTable: com.google.android.exoplayer2.extractor.mp4.TrackSampleTable;
								public trackOutput: com.google.android.exoplayer2.extractor.TrackOutput;
								public sampleIndex: number;
								public constructor(param0: com.google.android.exoplayer2.extractor.mp4.Track, param1: com.google.android.exoplayer2.extractor.mp4.TrackSampleTable, param2: com.google.android.exoplayer2.extractor.TrackOutput);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp4 {
						export class PsshAtomUtil {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil>;
							public static parseSchemeSpecificData(param0: androidNative.Array<number>, param1: java.util.UUID): androidNative.Array<number>;
							public static isPsshAtom(param0: androidNative.Array<number>): boolean;
							public static buildPsshAtom(param0: java.util.UUID, param1: androidNative.Array<number>): androidNative.Array<number>;
							public static parseVersion(param0: androidNative.Array<number>): number;
							public static buildPsshAtom(param0: java.util.UUID, param1: androidNative.Array<java.util.UUID>, param2: androidNative.Array<number>): androidNative.Array<number>;
							public static parseUuid(param0: androidNative.Array<number>): java.util.UUID;
						}
						export module PsshAtomUtil {
							export class PsshAtom {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.PsshAtomUtil.PsshAtom>;
								public constructor(param0: java.util.UUID, param1: number, param2: androidNative.Array<number>);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp4 {
						export class SefReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.SefReader>;
							public constructor();
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder, param2: java.util.List<com.google.android.exoplayer2.metadata.Metadata.Entry>): number;
							public reset(): void;
						}
						export module SefReader {
							export class DataReference {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.SefReader.DataReference>;
								public dataType: number;
								public startOffset: number;
								public size: number;
								public constructor(param0: number, param1: number, param2: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp4 {
						export class Sniffer {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.Sniffer>;
							public static BRAND_QUICKTIME: number;
							public static BRAND_HEIC: number;
							public static sniffFragmented(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public static sniffUnfragmented(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: boolean): boolean;
							public static sniffUnfragmented(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp4 {
						export class Track {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.Track>;
							public static TRANSFORMATION_NONE: number;
							public static TRANSFORMATION_CEA608_CDAT: number;
							public id: number;
							public type: number;
							public timescale: number;
							public movieTimescale: number;
							public durationUs: number;
							public format: com.google.android.exoplayer2.Format;
							public sampleTransformation: number;
							public editListDurations: androidNative.Array<number>;
							public editListMediaTimes: androidNative.Array<number>;
							public nalUnitLengthFieldLength: number;
							public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: com.google.android.exoplayer2.Format, param6: number, param7: androidNative.Array<com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox>, param8: number, param9: androidNative.Array<number>, param10: androidNative.Array<number>);
							public getSampleDescriptionEncryptionBox(param0: number): com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox;
							public copyWithFormat(param0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.extractor.mp4.Track;
						}
						export module Track {
							export class Transformation {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.Track.Transformation>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.extractor.mp4.Track$Transformation interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp4 {
						export class TrackEncryptionBox {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox>;
							public isEncrypted: boolean;
							public schemeType: string;
							public cryptoData: com.google.android.exoplayer2.extractor.TrackOutput.CryptoData;
							public perSampleIvSize: number;
							public defaultInitializationVector: androidNative.Array<number>;
							public constructor(param0: boolean, param1: string, param2: number, param3: androidNative.Array<number>, param4: number, param5: number, param6: androidNative.Array<number>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp4 {
						export class TrackFragment {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.TrackFragment>;
							public header: com.google.android.exoplayer2.extractor.mp4.DefaultSampleValues;
							public atomPosition: number;
							public dataPosition: number;
							public auxiliaryDataPosition: number;
							public trunCount: number;
							public sampleCount: number;
							public trunDataPosition: androidNative.Array<number>;
							public trunLength: androidNative.Array<number>;
							public sampleSizeTable: androidNative.Array<number>;
							public sampleCompositionTimeOffsetUsTable: androidNative.Array<number>;
							public sampleDecodingTimeUsTable: androidNative.Array<number>;
							public sampleIsSyncFrameTable: androidNative.Array<boolean>;
							public definesEncryptionData: boolean;
							public trackEncryptionBox: com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox;
							public sampleEncryptionData: com.google.android.exoplayer2.util.ParsableByteArray;
							public sampleEncryptionDataNeedsFill: boolean;
							public nextFragmentDecodeTime: number;
							public nextFragmentDecodeTimeIncludesMoov: boolean;
							public constructor();
							public fillEncryptionData(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public fillEncryptionData(param0: com.google.android.exoplayer2.extractor.ExtractorInput): void;
							public getSamplePresentationTimeUs(param0: number): number;
							public initEncryptionData(param0: number): void;
							public initTables(param0: number, param1: number): void;
							public sampleHasSubsampleEncryptionTable(param0: number): boolean;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module mp4 {
						export class TrackSampleTable {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.mp4.TrackSampleTable>;
							public track: com.google.android.exoplayer2.extractor.mp4.Track;
							public sampleCount: number;
							public offsets: androidNative.Array<number>;
							public sizes: androidNative.Array<number>;
							public maximumSize: number;
							public timestampsUs: androidNative.Array<number>;
							public flags: androidNative.Array<number>;
							public durationUs: number;
							public constructor(param0: com.google.android.exoplayer2.extractor.mp4.Track, param1: androidNative.Array<number>, param2: androidNative.Array<number>, param3: number, param4: androidNative.Array<number>, param5: androidNative.Array<number>, param6: number);
							public getIndexOfEarlierOrEqualSynchronizationSample(param0: number): number;
							public getIndexOfLaterOrEqualSynchronizationSample(param0: number): number;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ogg {
						export class DefaultOggSeeker extends com.google.android.exoplayer2.extractor.ogg.OggSeeker {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker>;
							public createSeekMap(): com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.OggSeekMap;
							public createSeekMap(): com.google.android.exoplayer2.extractor.SeekMap;
							public constructor(param0: com.google.android.exoplayer2.extractor.ogg.StreamReader, param1: number, param2: number, param3: number, param4: number, param5: boolean);
							public startSeek(param0: number): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): number;
						}
						export module DefaultOggSeeker {
							export class OggSeekMap extends com.google.android.exoplayer2.extractor.SeekMap {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ogg.DefaultOggSeeker.OggSeekMap>;
								public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
								public getDurationUs(): number;
								public isSeekable(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ogg {
						export class FlacReader extends com.google.android.exoplayer2.extractor.ogg.StreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ogg.FlacReader>;
							public reset(param0: boolean): void;
							public preparePayload(param0: com.google.android.exoplayer2.util.ParsableByteArray): number;
							public readHeaders(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number, param2: com.google.android.exoplayer2.extractor.ogg.StreamReader.SetupData): boolean;
							public static verifyBitstreamType(param0: com.google.android.exoplayer2.util.ParsableByteArray): boolean;
						}
						export module FlacReader {
							export class FlacOggSeeker extends com.google.android.exoplayer2.extractor.ogg.OggSeeker {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ogg.FlacReader.FlacOggSeeker>;
								public startSeek(param0: number): void;
								public createSeekMap(): com.google.android.exoplayer2.extractor.SeekMap;
								public setFirstFrameOffset(param0: number): void;
								public constructor(param0: com.google.android.exoplayer2.extractor.FlacStreamMetadata, param1: com.google.android.exoplayer2.extractor.FlacStreamMetadata.SeekTable);
								public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ogg {
						export class OggExtractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ogg.OggExtractor>;
							public static FACTORY: com.google.android.exoplayer2.extractor.ExtractorsFactory;
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public seek(param0: number, param1: number): void;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ogg {
						export class OggPacket {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ogg.OggPacket>;
							public populate(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public getPageHeader(): com.google.android.exoplayer2.extractor.ogg.OggPageHeader;
							public trimPayload(): void;
							public getPayload(): com.google.android.exoplayer2.util.ParsableByteArray;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ogg {
						export class OggPageHeader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ogg.OggPageHeader>;
							public static EMPTY_PAGE_HEADER_SIZE: number;
							public static MAX_SEGMENT_COUNT: number;
							public static MAX_PAGE_PAYLOAD: number;
							public static MAX_PAGE_SIZE: number;
							public revision: number;
							public type: number;
							public granulePosition: number;
							public streamSerialNumber: number;
							public pageSequenceNumber: number;
							public pageChecksum: number;
							public pageSegmentCount: number;
							public headerSize: number;
							public bodySize: number;
							public laces: androidNative.Array<number>;
							public skipToNextPage(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: number): boolean;
							public skipToNextPage(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public populate(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: boolean): boolean;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ogg {
						export class OggSeeker {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ogg.OggSeeker>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.extractor.ogg.OggSeeker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createSeekMap(): com.google.android.exoplayer2.extractor.SeekMap;
								startSeek(param0: number): void;
								read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): number;
							});
							public constructor();
							public createSeekMap(): com.google.android.exoplayer2.extractor.SeekMap;
							public startSeek(param0: number): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ogg {
						export class OpusReader extends com.google.android.exoplayer2.extractor.ogg.StreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ogg.OpusReader>;
							public reset(param0: boolean): void;
							public preparePayload(param0: com.google.android.exoplayer2.util.ParsableByteArray): number;
							public readHeaders(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number, param2: com.google.android.exoplayer2.extractor.ogg.StreamReader.SetupData): boolean;
							public static verifyBitstreamType(param0: com.google.android.exoplayer2.util.ParsableByteArray): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ogg {
						export abstract class StreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ogg.StreamReader>;
							public constructor();
							public reset(param0: boolean): void;
							public convertGranuleToTime(param0: number): number;
							public convertTimeToGranule(param0: number): number;
							public preparePayload(param0: com.google.android.exoplayer2.util.ParsableByteArray): number;
							public readHeaders(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number, param2: com.google.android.exoplayer2.extractor.ogg.StreamReader.SetupData): boolean;
							public onSeekEnd(param0: number): void;
						}
						export module StreamReader {
							export class SetupData {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ogg.StreamReader.SetupData>;
							}
							export class UnseekableOggSeeker extends com.google.android.exoplayer2.extractor.ogg.OggSeeker {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ogg.StreamReader.UnseekableOggSeeker>;
								public startSeek(param0: number): void;
								public createSeekMap(): com.google.android.exoplayer2.extractor.SeekMap;
								public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ogg {
						export class VorbisReader extends com.google.android.exoplayer2.extractor.ogg.StreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ogg.VorbisReader>;
							public reset(param0: boolean): void;
							public preparePayload(param0: com.google.android.exoplayer2.util.ParsableByteArray): number;
							public readHeaders(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number, param2: com.google.android.exoplayer2.extractor.ogg.StreamReader.SetupData): boolean;
							public static verifyBitstreamType(param0: com.google.android.exoplayer2.util.ParsableByteArray): boolean;
							public onSeekEnd(param0: number): void;
						}
						export module VorbisReader {
							export class VorbisSetup {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ogg.VorbisReader.VorbisSetup>;
								public idHeader: com.google.android.exoplayer2.extractor.VorbisUtil.VorbisIdHeader;
								public commentHeader: com.google.android.exoplayer2.extractor.VorbisUtil.CommentHeader;
								public setupHeaderData: androidNative.Array<number>;
								public modes: androidNative.Array<com.google.android.exoplayer2.extractor.VorbisUtil.Mode>;
								public iLogModes: number;
								public constructor(param0: com.google.android.exoplayer2.extractor.VorbisUtil.VorbisIdHeader, param1: com.google.android.exoplayer2.extractor.VorbisUtil.CommentHeader, param2: androidNative.Array<number>, param3: androidNative.Array<com.google.android.exoplayer2.extractor.VorbisUtil.Mode>, param4: number);
							}
						}
					}
				}
			}
		}
	}
}



declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module rawcc {
						export class RawCcExtractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.rawcc.RawCcExtractor>;
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public seek(param0: number, param1: number): void;
							public constructor(param0: com.google.android.exoplayer2.Format);
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class Ac3Extractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.Ac3Extractor>;
							public static FACTORY: com.google.android.exoplayer2.extractor.ExtractorsFactory;
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public seek(param0: number, param1: number): void;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class Ac3Reader extends com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.Ac3Reader>;
							public constructor();
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public packetFinished(): void;
							public packetStarted(param0: number, param1: number): void;
							public seek(): void;
							public constructor(param0: string);
							public createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class Ac4Extractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.Ac4Extractor>;
							public static FACTORY: com.google.android.exoplayer2.extractor.ExtractorsFactory;
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public seek(param0: number, param1: number): void;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class Ac4Reader extends com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.Ac4Reader>;
							public constructor();
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public packetFinished(): void;
							public packetStarted(param0: number, param1: number): void;
							public seek(): void;
							public constructor(param0: string);
							public createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class AdtsExtractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.AdtsExtractor>;
							public static FACTORY: com.google.android.exoplayer2.extractor.ExtractorsFactory;
							public static FLAG_ENABLE_CONSTANT_BITRATE_SEEKING: number;
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public seek(param0: number, param1: number): void;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
							public constructor(param0: number);
						}
						export module AdtsExtractor {
							export class Flags {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.AdtsExtractor.Flags>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.extractor.ts.AdtsExtractor$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class AdtsReader extends com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.AdtsReader>;
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public packetFinished(): void;
							public packetStarted(param0: number, param1: number): void;
							public seek(): void;
							public constructor(param0: boolean, param1: string);
							public constructor(param0: boolean);
							public getSampleDurationUs(): number;
							public createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public static isAdtsSyncWord(param0: number): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class DefaultTsPayloadReaderFactory extends com.google.android.exoplayer2.extractor.ts.TsPayloadReader.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory>;
							public static FLAG_ALLOW_NON_IDR_KEYFRAMES: number;
							public static FLAG_IGNORE_AAC_STREAM: number;
							public static FLAG_IGNORE_H264_STREAM: number;
							public static FLAG_DETECT_ACCESS_UNITS: number;
							public static FLAG_IGNORE_SPLICE_INFO_STREAM: number;
							public static FLAG_OVERRIDE_CAPTION_DESCRIPTORS: number;
							public static FLAG_ENABLE_HDMV_DTS_AUDIO_STREAMS: number;
							public constructor();
							public createPayloadReader(param0: number, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.EsInfo): com.google.android.exoplayer2.extractor.ts.TsPayloadReader;
							public createInitialPayloadReaders(): globalAndroid.util.SparseArray<com.google.android.exoplayer2.extractor.ts.TsPayloadReader>;
							public constructor(param0: number, param1: java.util.List<com.google.android.exoplayer2.Format>);
							public constructor(param0: number);
						}
						export module DefaultTsPayloadReaderFactory {
							export class Flags {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory.Flags>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.extractor.ts.DefaultTsPayloadReaderFactory$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class DtsReader extends com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.DtsReader>;
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public packetFinished(): void;
							public packetStarted(param0: number, param1: number): void;
							public seek(): void;
							public constructor(param0: string);
							public createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class DvbSubtitleReader extends com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.DvbSubtitleReader>;
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public packetFinished(): void;
							public packetStarted(param0: number, param1: number): void;
							public seek(): void;
							public createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public constructor(param0: java.util.List<com.google.android.exoplayer2.extractor.ts.TsPayloadReader.DvbSubtitleInfo>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class ElementaryStreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								seek(): void;
								createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
								packetStarted(param0: number, param1: number): void;
								consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
								packetFinished(): void;
							});
							public constructor();
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public packetFinished(): void;
							public packetStarted(param0: number, param1: number): void;
							public seek(): void;
							public createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class H262Reader extends com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.H262Reader>;
							public constructor();
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public packetFinished(): void;
							public packetStarted(param0: number, param1: number): void;
							public seek(): void;
							public createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
						}
						export module H262Reader {
							export class CsdBuffer {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.H262Reader.CsdBuffer>;
								public length: number;
								public sequenceExtensionPosition: number;
								public data: androidNative.Array<number>;
								public constructor(param0: number);
								public reset(): void;
								public onStartCode(param0: number, param1: number): boolean;
								public onData(param0: androidNative.Array<number>, param1: number, param2: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class H263Reader extends com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.H263Reader>;
							public constructor();
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public packetFinished(): void;
							public packetStarted(param0: number, param1: number): void;
							public seek(): void;
							public createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
						}
						export module H263Reader {
							export class CsdBuffer {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.H263Reader.CsdBuffer>;
								public length: number;
								public volStartPosition: number;
								public data: androidNative.Array<number>;
								public constructor(param0: number);
								public reset(): void;
								public onStartCode(param0: number, param1: number): boolean;
								public onData(param0: androidNative.Array<number>, param1: number, param2: number): void;
							}
							export class SampleReader {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.H263Reader.SampleReader>;
								public onStartCode(param0: number, param1: number): void;
								public reset(): void;
								public onDataEnd(param0: number, param1: number, param2: boolean): void;
								public constructor(param0: com.google.android.exoplayer2.extractor.TrackOutput);
								public onData(param0: androidNative.Array<number>, param1: number, param2: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class H264Reader extends com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.H264Reader>;
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public packetFinished(): void;
							public packetStarted(param0: number, param1: number): void;
							public seek(): void;
							public createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public constructor(param0: com.google.android.exoplayer2.extractor.ts.SeiReader, param1: boolean, param2: boolean);
						}
						export module H264Reader {
							export class SampleReader {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader>;
								public putPps(param0: com.google.android.exoplayer2.util.NalUnitUtil.PpsData): void;
								public appendToNalUnit(param0: androidNative.Array<number>, param1: number, param2: number): void;
								public reset(): void;
								public endNalUnit(param0: number, param1: number, param2: boolean, param3: boolean): boolean;
								public putSps(param0: com.google.android.exoplayer2.util.NalUnitUtil.SpsData): void;
								public needsSpsPps(): boolean;
								public constructor(param0: com.google.android.exoplayer2.extractor.TrackOutput, param1: boolean, param2: boolean);
								public startNalUnit(param0: number, param1: number, param2: number): void;
							}
							export module SampleReader {
								export class SliceHeaderData {
									public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.H264Reader.SampleReader.SliceHeaderData>;
									public setSliceType(param0: number): void;
									public setAll(param0: com.google.android.exoplayer2.util.NalUnitUtil.SpsData, param1: number, param2: number, param3: number, param4: number, param5: boolean, param6: boolean, param7: boolean, param8: boolean, param9: number, param10: number, param11: number, param12: number, param13: number): void;
									public clear(): void;
									public isISlice(): boolean;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class H265Reader extends com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.H265Reader>;
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public packetFinished(): void;
							public packetStarted(param0: number, param1: number): void;
							public seek(): void;
							public createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public constructor(param0: com.google.android.exoplayer2.extractor.ts.SeiReader);
						}
						export module H265Reader {
							export class SampleReader {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.H265Reader.SampleReader>;
								public startNalUnit(param0: number, param1: number, param2: number, param3: number, param4: boolean): void;
								public readNalUnitData(param0: androidNative.Array<number>, param1: number, param2: number): void;
								public reset(): void;
								public endNalUnit(param0: number, param1: number, param2: boolean): void;
								public constructor(param0: com.google.android.exoplayer2.extractor.TrackOutput);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class Id3Reader extends com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.Id3Reader>;
							public constructor();
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public packetFinished(): void;
							public packetStarted(param0: number, param1: number): void;
							public seek(): void;
							public createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class LatmReader extends com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.LatmReader>;
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public packetFinished(): void;
							public packetStarted(param0: number, param1: number): void;
							public seek(): void;
							public constructor(param0: string);
							public createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class MpegAudioReader extends com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.MpegAudioReader>;
							public constructor();
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public packetFinished(): void;
							public packetStarted(param0: number, param1: number): void;
							public seek(): void;
							public constructor(param0: string);
							public createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class NalUnitTargetBuffer {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.NalUnitTargetBuffer>;
							public nalData: androidNative.Array<number>;
							public nalLength: number;
							public appendToNalUnit(param0: androidNative.Array<number>, param1: number, param2: number): void;
							public endNalUnit(param0: number): boolean;
							public constructor(param0: number, param1: number);
							public startNalUnit(param0: number): void;
							public isCompleted(): boolean;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class PassthroughSectionPayloadReader extends com.google.android.exoplayer2.extractor.ts.SectionPayloadReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.PassthroughSectionPayloadReader>;
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public constructor(param0: string);
							public init(param0: com.google.android.exoplayer2.util.TimestampAdjuster, param1: com.google.android.exoplayer2.extractor.ExtractorOutput, param2: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class PesReader extends com.google.android.exoplayer2.extractor.ts.TsPayloadReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.PesReader>;
							public seek(): void;
							public init(param0: com.google.android.exoplayer2.util.TimestampAdjuster, param1: com.google.android.exoplayer2.extractor.ExtractorOutput, param2: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): void;
							public constructor(param0: com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class PsBinarySearchSeeker extends com.google.android.exoplayer2.extractor.BinarySearchSeeker {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.PsBinarySearchSeeker>;
							public constructor(param0: com.google.android.exoplayer2.extractor.BinarySearchSeeker.SeekTimestampConverter, param1: com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSeeker, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number);
							public constructor(param0: com.google.android.exoplayer2.util.TimestampAdjuster, param1: number, param2: number);
						}
						export module PsBinarySearchSeeker {
							export class PsScrSeeker extends com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSeeker {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.PsBinarySearchSeeker.PsScrSeeker>;
								public searchForTimestamp(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: number): com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSearchResult;
								public onSeekFinished(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class PsDurationReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.PsDurationReader>;
							public getDurationUs(): number;
							public static readScrValueFromPack(param0: com.google.android.exoplayer2.util.ParsableByteArray): number;
							public isDurationReadFinished(): boolean;
							public getScrTimestampAdjuster(): com.google.android.exoplayer2.util.TimestampAdjuster;
							public readDuration(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class PsExtractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.PsExtractor>;
							public static FACTORY: com.google.android.exoplayer2.extractor.ExtractorsFactory;
							public static PRIVATE_STREAM_1: number;
							public static AUDIO_STREAM: number;
							public static AUDIO_STREAM_MASK: number;
							public static VIDEO_STREAM: number;
							public static VIDEO_STREAM_MASK: number;
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public seek(param0: number, param1: number): void;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
							public constructor(param0: com.google.android.exoplayer2.util.TimestampAdjuster);
						}
						export module PsExtractor {
							export class PesReader {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.PsExtractor.PesReader>;
								public constructor(param0: com.google.android.exoplayer2.extractor.ts.ElementaryStreamReader, param1: com.google.android.exoplayer2.util.TimestampAdjuster);
								public seek(): void;
								public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class SectionPayloadReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.SectionPayloadReader>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.extractor.ts.SectionPayloadReader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								init(param0: com.google.android.exoplayer2.util.TimestampAdjuster, param1: com.google.android.exoplayer2.extractor.ExtractorOutput, param2: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
								consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							});
							public constructor();
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public init(param0: com.google.android.exoplayer2.util.TimestampAdjuster, param1: com.google.android.exoplayer2.extractor.ExtractorOutput, param2: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class SectionReader extends com.google.android.exoplayer2.extractor.ts.TsPayloadReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.SectionReader>;
							public seek(): void;
							public init(param0: com.google.android.exoplayer2.util.TimestampAdjuster, param1: com.google.android.exoplayer2.extractor.ExtractorOutput, param2: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): void;
							public constructor(param0: com.google.android.exoplayer2.extractor.ts.SectionPayloadReader);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class SeiReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.SeiReader>;
							public createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public constructor(param0: java.util.List<com.google.android.exoplayer2.Format>);
							public consume(param0: number, param1: com.google.android.exoplayer2.util.ParsableByteArray): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class TsBinarySearchSeeker extends com.google.android.exoplayer2.extractor.BinarySearchSeeker {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.TsBinarySearchSeeker>;
							public constructor(param0: com.google.android.exoplayer2.extractor.BinarySearchSeeker.SeekTimestampConverter, param1: com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSeeker, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number);
							public constructor(param0: com.google.android.exoplayer2.util.TimestampAdjuster, param1: number, param2: number, param3: number, param4: number);
						}
						export module TsBinarySearchSeeker {
							export class TsPcrSeeker extends com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSeeker {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.TsBinarySearchSeeker.TsPcrSeeker>;
								public searchForTimestamp(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: number): com.google.android.exoplayer2.extractor.BinarySearchSeeker.TimestampSearchResult;
								public constructor(param0: number, param1: com.google.android.exoplayer2.util.TimestampAdjuster, param2: number);
								public onSeekFinished(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class TsDurationReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.TsDurationReader>;
							public getDurationUs(): number;
							public isDurationReadFinished(): boolean;
							public readDuration(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder, param2: number): number;
							public getPcrTimestampAdjuster(): com.google.android.exoplayer2.util.TimestampAdjuster;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class TsExtractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.TsExtractor>;
							public static FACTORY: com.google.android.exoplayer2.extractor.ExtractorsFactory;
							public static MODE_MULTI_PMT: number;
							public static MODE_SINGLE_PMT: number;
							public static MODE_HLS: number;
							public static TS_PACKET_SIZE: number;
							public static DEFAULT_TIMESTAMP_SEARCH_BYTES: number;
							public static TS_STREAM_TYPE_MPA: number;
							public static TS_STREAM_TYPE_MPA_LSF: number;
							public static TS_STREAM_TYPE_AAC_ADTS: number;
							public static TS_STREAM_TYPE_AAC_LATM: number;
							public static TS_STREAM_TYPE_AC3: number;
							public static TS_STREAM_TYPE_DTS: number;
							public static TS_STREAM_TYPE_HDMV_DTS: number;
							public static TS_STREAM_TYPE_E_AC3: number;
							public static TS_STREAM_TYPE_AC4: number;
							public static TS_STREAM_TYPE_H262: number;
							public static TS_STREAM_TYPE_H263: number;
							public static TS_STREAM_TYPE_H264: number;
							public static TS_STREAM_TYPE_H265: number;
							public static TS_STREAM_TYPE_ID3: number;
							public static TS_STREAM_TYPE_SPLICE_INFO: number;
							public static TS_STREAM_TYPE_DVBSUBS: number;
							public static TS_STREAM_TYPE_AIT: number;
							public static TS_SYNC_BYTE: number;
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public constructor(param0: number, param1: number, param2: number);
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public constructor(param0: number, param1: com.google.android.exoplayer2.util.TimestampAdjuster, param2: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.Factory, param3: number);
							public seek(param0: number, param1: number): void;
							public constructor(param0: number, param1: com.google.android.exoplayer2.util.TimestampAdjuster, param2: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.Factory);
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
							public constructor(param0: number);
						}
						export module TsExtractor {
							export class Mode {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.TsExtractor.Mode>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.extractor.ts.TsExtractor$Mode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
							export class PatReader extends com.google.android.exoplayer2.extractor.ts.SectionPayloadReader {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.TsExtractor.PatReader>;
								public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
								public init(param0: com.google.android.exoplayer2.util.TimestampAdjuster, param1: com.google.android.exoplayer2.extractor.ExtractorOutput, param2: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
								public constructor(param0: com.google.android.exoplayer2.extractor.ts.TsExtractor);
							}
							export class PmtReader extends com.google.android.exoplayer2.extractor.ts.SectionPayloadReader {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.TsExtractor.PmtReader>;
								public constructor(param0: com.google.android.exoplayer2.extractor.ts.TsExtractor, param1: number);
								public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
								public init(param0: com.google.android.exoplayer2.util.TimestampAdjuster, param1: com.google.android.exoplayer2.extractor.ExtractorOutput, param2: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class TsPayloadReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.TsPayloadReader>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.extractor.ts.TsPayloadReader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								init(param0: com.google.android.exoplayer2.util.TimestampAdjuster, param1: com.google.android.exoplayer2.extractor.ExtractorOutput, param2: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
								seek(): void;
								consume(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): void;
							});
							public constructor();
							public static FLAG_PAYLOAD_UNIT_START_INDICATOR: number;
							public static FLAG_DATA_ALIGNMENT_INDICATOR: number;
							public static FLAG_RANDOM_ACCESS_INDICATOR: number;
							public seek(): void;
							public init(param0: com.google.android.exoplayer2.util.TimestampAdjuster, param1: com.google.android.exoplayer2.extractor.ExtractorOutput, param2: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public consume(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): void;
						}
						export module TsPayloadReader {
							export class DvbSubtitleInfo {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.TsPayloadReader.DvbSubtitleInfo>;
								public language: string;
								public type: number;
								public initializationData: androidNative.Array<number>;
								public constructor(param0: string, param1: number, param2: androidNative.Array<number>);
							}
							export class EsInfo {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.TsPayloadReader.EsInfo>;
								public streamType: number;
								public language: string;
								public dvbSubtitleInfos: java.util.List<com.google.android.exoplayer2.extractor.ts.TsPayloadReader.DvbSubtitleInfo>;
								public descriptorBytes: androidNative.Array<number>;
								public constructor(param0: number, param1: string, param2: java.util.List<com.google.android.exoplayer2.extractor.ts.TsPayloadReader.DvbSubtitleInfo>, param3: androidNative.Array<number>);
							}
							export class Factory {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.TsPayloadReader.Factory>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.extractor.ts.TsPayloadReader$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									createInitialPayloadReaders(): globalAndroid.util.SparseArray<com.google.android.exoplayer2.extractor.ts.TsPayloadReader>;
									createPayloadReader(param0: number, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.EsInfo): com.google.android.exoplayer2.extractor.ts.TsPayloadReader;
								});
								public constructor();
								public createPayloadReader(param0: number, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.EsInfo): com.google.android.exoplayer2.extractor.ts.TsPayloadReader;
								public createInitialPayloadReaders(): globalAndroid.util.SparseArray<com.google.android.exoplayer2.extractor.ts.TsPayloadReader>;
							}
							export class Flags {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.TsPayloadReader.Flags>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.extractor.ts.TsPayloadReader$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
							export class TrackIdGenerator {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator>;
								public generateNewId(): void;
								public getTrackId(): number;
								public constructor(param0: number, param1: number, param2: number);
								public constructor(param0: number, param1: number);
								public getFormatId(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class TsUtil {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.TsUtil>;
							public static findSyncBytePosition(param0: androidNative.Array<number>, param1: number, param2: number): number;
							public static readPcrFromPacket(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number, param2: number): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module ts {
						export class UserDataReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.ts.UserDataReader>;
							public createTracks(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.ts.TsPayloadReader.TrackIdGenerator): void;
							public constructor(param0: java.util.List<com.google.android.exoplayer2.Format>);
							public consume(param0: number, param1: com.google.android.exoplayer2.util.ParsableByteArray): void;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module wav {
						export class WavExtractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.wav.WavExtractor>;
							public static FACTORY: com.google.android.exoplayer2.extractor.ExtractorsFactory;
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public seek(param0: number, param1: number): void;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
						}
						export module WavExtractor {
							export class ImaAdPcmOutputWriter extends com.google.android.exoplayer2.extractor.wav.WavExtractor.OutputWriter {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.wav.WavExtractor.ImaAdPcmOutputWriter>;
								public constructor(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.TrackOutput, param2: com.google.android.exoplayer2.extractor.wav.WavHeader);
								public sampleData(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: number): boolean;
								public init(param0: number, param1: number): void;
								public reset(param0: number): void;
							}
							export class OutputWriter {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.wav.WavExtractor.OutputWriter>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.extractor.wav.WavExtractor$OutputWriter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									reset(param0: number): void;
									init(param0: number, param1: number): void;
									sampleData(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: number): boolean;
								});
								public constructor();
								public sampleData(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: number): boolean;
								public init(param0: number, param1: number): void;
								public reset(param0: number): void;
							}
							export class PassthroughOutputWriter extends com.google.android.exoplayer2.extractor.wav.WavExtractor.OutputWriter {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.wav.WavExtractor.PassthroughOutputWriter>;
								public sampleData(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: number): boolean;
								public constructor(param0: com.google.android.exoplayer2.extractor.ExtractorOutput, param1: com.google.android.exoplayer2.extractor.TrackOutput, param2: com.google.android.exoplayer2.extractor.wav.WavHeader, param3: string, param4: number);
								public init(param0: number, param1: number): void;
								public reset(param0: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module wav {
						export class WavHeader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.wav.WavHeader>;
							public formatType: number;
							public numChannels: number;
							public frameRateHz: number;
							public averageBytesPerSecond: number;
							public blockSize: number;
							public bitsPerSample: number;
							public extraData: androidNative.Array<number>;
							public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: androidNative.Array<number>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module wav {
						export class WavHeaderReader {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.wav.WavHeaderReader>;
							public static skipToData(param0: com.google.android.exoplayer2.extractor.ExtractorInput): globalAndroid.util.Pair<java.lang.Long,java.lang.Long>;
							public static peek(param0: com.google.android.exoplayer2.extractor.ExtractorInput): com.google.android.exoplayer2.extractor.wav.WavHeader;
						}
						export module WavHeaderReader {
							export class ChunkHeader {
								public static class: java.lang.Class<com.google.android.exoplayer2.extractor.wav.WavHeaderReader.ChunkHeader>;
								public static SIZE_IN_BYTES: number;
								public id: number;
								public size: number;
								public static peek(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.util.ParsableByteArray): com.google.android.exoplayer2.extractor.wav.WavHeaderReader.ChunkHeader;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module extractor {
					export module wav {
						export class WavSeekMap extends com.google.android.exoplayer2.extractor.SeekMap {
							public static class: java.lang.Class<com.google.android.exoplayer2.extractor.wav.WavSeekMap>;
							public getDurationUs(): number;
							public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
							public constructor(param0: com.google.android.exoplayer2.extractor.wav.WavHeader, param1: number, param2: number, param3: number);
							public isSeekable(): boolean;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class AsynchronousMediaCodecAdapter extends com.google.android.exoplayer2.mediacodec.MediaCodecAdapter {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.AsynchronousMediaCodecAdapter>;
						public getOutputBuffer(param0: number): java.nio.ByteBuffer;
						public dequeueOutputBufferIndex(param0: globalAndroid.media.MediaCodec.BufferInfo): number;
						public configure(param0: globalAndroid.media.MediaFormat, param1: globalAndroid.view.Surface, param2: globalAndroid.media.MediaCrypto, param3: number): void;
						public releaseOutputBuffer(param0: number, param1: number): void;
						public queueSecureInputBuffer(param0: number, param1: number, param2: com.google.android.exoplayer2.decoder.CryptoInfo, param3: number, param4: number): void;
						public setVideoScalingMode(param0: number): void;
						public getInputBuffer(param0: number): java.nio.ByteBuffer;
						public flush(): void;
						public release(): void;
						public dequeueInputBufferIndex(): number;
						public setOnFrameRenderedListener(param0: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter.OnFrameRenderedListener, param1: globalAndroid.os.Handler): void;
						public setParameters(param0: globalAndroid.os.Bundle): void;
						public start(): void;
						public queueInputBuffer(param0: number, param1: number, param2: number, param3: number, param4: number): void;
						public getOutputFormat(): globalAndroid.media.MediaFormat;
						public releaseOutputBuffer(param0: number, param1: boolean): void;
						public setOutputSurface(param0: globalAndroid.view.Surface): void;
					}
					export module AsynchronousMediaCodecAdapter {
						export class Factory extends com.google.android.exoplayer2.mediacodec.MediaCodecAdapter.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.AsynchronousMediaCodecAdapter.Factory>;
							public createAdapter(param0: globalAndroid.media.MediaCodec): com.google.android.exoplayer2.mediacodec.AsynchronousMediaCodecAdapter;
							public createAdapter(param0: globalAndroid.media.MediaCodec): com.google.android.exoplayer2.mediacodec.MediaCodecAdapter;
							public constructor(param0: number);
							public constructor(param0: number, param1: boolean, param2: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class AsynchronousMediaCodecBufferEnqueuer {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.AsynchronousMediaCodecBufferEnqueuer>;
						public shutdown(): void;
						public start(): void;
						public queueSecureInputBuffer(param0: number, param1: number, param2: com.google.android.exoplayer2.decoder.CryptoInfo, param3: number, param4: number): void;
						public queueInputBuffer(param0: number, param1: number, param2: number, param3: number, param4: number): void;
						public constructor(param0: globalAndroid.media.MediaCodec, param1: globalAndroid.os.HandlerThread, param2: boolean);
						public flush(): void;
						public waitUntilQueueingComplete(): void;
					}
					export module AsynchronousMediaCodecBufferEnqueuer {
						export class MessageParams {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.AsynchronousMediaCodecBufferEnqueuer.MessageParams>;
							public index: number;
							public offset: number;
							public size: number;
							public cryptoInfo: globalAndroid.media.MediaCodec.CryptoInfo;
							public presentationTimeUs: number;
							public flags: number;
							public setQueueParams(param0: number, param1: number, param2: number, param3: number, param4: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class AsynchronousMediaCodecCallback {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.AsynchronousMediaCodecCallback>;
						public onOutputBufferAvailable(param0: globalAndroid.media.MediaCodec, param1: number, param2: globalAndroid.media.MediaCodec.BufferInfo): void;
						public onError(param0: globalAndroid.media.MediaCodec, param1: globalAndroid.media.MediaCodec.CodecException): void;
						public shutdown(): void;
						public dequeueOutputBufferIndex(param0: globalAndroid.media.MediaCodec.BufferInfo): number;
						public getOutputFormat(): globalAndroid.media.MediaFormat;
						public onOutputFormatChanged(param0: globalAndroid.media.MediaCodec, param1: globalAndroid.media.MediaFormat): void;
						public onInputBufferAvailable(param0: globalAndroid.media.MediaCodec, param1: number): void;
						public initialize(param0: globalAndroid.media.MediaCodec): void;
						public flushAsync(param0: java.lang.Runnable): void;
						public dequeueInputBufferIndex(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class BatchBuffer extends com.google.android.exoplayer2.decoder.DecoderInputBuffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.BatchBuffer>;
						public static DEFAULT_MAX_SAMPLE_COUNT: number;
						public append(param0: com.google.android.exoplayer2.decoder.DecoderInputBuffer): boolean;
						public constructor();
						public getLastSampleTimeUs(): number;
						public setMaxSampleCount(param0: number): void;
						public getFirstSampleTimeUs(): number;
						public getSampleCount(): number;
						public constructor(param0: number);
						public clear(): void;
						public constructor(param0: number, param1: number);
						public hasSamples(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class C2Mp3TimestampTracker {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.C2Mp3TimestampTracker>;
						public updateAndGetPresentationTimeUs(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer): number;
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class MediaCodecAdapter {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecAdapter>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.mediacodec.MediaCodecAdapter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							configure(param0: globalAndroid.media.MediaFormat, param1: globalAndroid.view.Surface, param2: globalAndroid.media.MediaCrypto, param3: number): void;
							start(): void;
							dequeueInputBufferIndex(): number;
							dequeueOutputBufferIndex(param0: globalAndroid.media.MediaCodec.BufferInfo): number;
							getOutputFormat(): globalAndroid.media.MediaFormat;
							getInputBuffer(param0: number): java.nio.ByteBuffer;
							getOutputBuffer(param0: number): java.nio.ByteBuffer;
							queueInputBuffer(param0: number, param1: number, param2: number, param3: number, param4: number): void;
							queueSecureInputBuffer(param0: number, param1: number, param2: com.google.android.exoplayer2.decoder.CryptoInfo, param3: number, param4: number): void;
							releaseOutputBuffer(param0: number, param1: boolean): void;
							releaseOutputBuffer(param0: number, param1: number): void;
							flush(): void;
							release(): void;
							setOnFrameRenderedListener(param0: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter.OnFrameRenderedListener, param1: globalAndroid.os.Handler): void;
							setOutputSurface(param0: globalAndroid.view.Surface): void;
							setParameters(param0: globalAndroid.os.Bundle): void;
							setVideoScalingMode(param0: number): void;
						});
						public constructor();
						public getOutputBuffer(param0: number): java.nio.ByteBuffer;
						public dequeueOutputBufferIndex(param0: globalAndroid.media.MediaCodec.BufferInfo): number;
						public configure(param0: globalAndroid.media.MediaFormat, param1: globalAndroid.view.Surface, param2: globalAndroid.media.MediaCrypto, param3: number): void;
						public releaseOutputBuffer(param0: number, param1: number): void;
						public queueSecureInputBuffer(param0: number, param1: number, param2: com.google.android.exoplayer2.decoder.CryptoInfo, param3: number, param4: number): void;
						public setVideoScalingMode(param0: number): void;
						public getInputBuffer(param0: number): java.nio.ByteBuffer;
						public flush(): void;
						public release(): void;
						public dequeueInputBufferIndex(): number;
						public setOnFrameRenderedListener(param0: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter.OnFrameRenderedListener, param1: globalAndroid.os.Handler): void;
						public setParameters(param0: globalAndroid.os.Bundle): void;
						public start(): void;
						public queueInputBuffer(param0: number, param1: number, param2: number, param3: number, param4: number): void;
						public getOutputFormat(): globalAndroid.media.MediaFormat;
						public releaseOutputBuffer(param0: number, param1: boolean): void;
						public setOutputSurface(param0: globalAndroid.view.Surface): void;
					}
					export module MediaCodecAdapter {
						export class Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecAdapter.Factory>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.mediacodec.MediaCodecAdapter$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createAdapter(param0: globalAndroid.media.MediaCodec): com.google.android.exoplayer2.mediacodec.MediaCodecAdapter;
								<clinit>(): void;
							});
							public constructor();
							public static DEFAULT: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter.Factory;
							public createAdapter(param0: globalAndroid.media.MediaCodec): com.google.android.exoplayer2.mediacodec.MediaCodecAdapter;
						}
						export class OnFrameRenderedListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecAdapter.OnFrameRenderedListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.mediacodec.MediaCodecAdapter$OnFrameRenderedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onFrameRendered(param0: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, param1: number, param2: number): void;
							});
							public constructor();
							public onFrameRendered(param0: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, param1: number, param2: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class MediaCodecDecoderException extends com.google.android.exoplayer2.decoder.DecoderException {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecDecoderException>;
						public codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo;
						public diagnosticInfo: string;
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: java.lang.Throwable, param1: com.google.android.exoplayer2.mediacodec.MediaCodecInfo);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class MediaCodecInfo {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
						public static TAG: string;
						public static MAX_SUPPORTED_INSTANCES_UNKNOWN: number;
						public name: string;
						public mimeType: string;
						public codecMimeType: string;
						public capabilities: globalAndroid.media.MediaCodecInfo.CodecCapabilities;
						public adaptive: boolean;
						public tunneling: boolean;
						public secure: boolean;
						public hardwareAccelerated: boolean;
						public softwareOnly: boolean;
						public vendor: boolean;
						/** @deprecated */
						public isSeamlessAdaptationSupported(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.Format, param2: boolean): boolean;
						public static newInstance(param0: string, param1: string, param2: string, param3: globalAndroid.media.MediaCodecInfo.CodecCapabilities, param4: boolean, param5: boolean, param6: boolean, param7: boolean, param8: boolean): com.google.android.exoplayer2.mediacodec.MediaCodecInfo;
						public isVideoSizeAndRateSupportedV21(param0: number, param1: number, param2: number): boolean;
						public isSeamlessAdaptationSupported(param0: com.google.android.exoplayer2.Format): boolean;
						public isHdr10PlusOutOfBandMetadataSupported(): boolean;
						public alignVideoSizeV21(param0: number, param1: number): globalAndroid.graphics.Point;
						public toString(): string;
						public isFormatSupported(param0: com.google.android.exoplayer2.Format): boolean;
						public isAudioChannelCountSupportedV21(param0: number): boolean;
						public canReuseCodec(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.decoder.DecoderReuseEvaluation;
						public getProfileLevels(): androidNative.Array<globalAndroid.media.MediaCodecInfo.CodecProfileLevel>;
						public getMaxSupportedInstances(): number;
						public isCodecSupported(param0: com.google.android.exoplayer2.Format): boolean;
						public isAudioSampleRateSupportedV21(param0: number): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export abstract class MediaCodecRenderer extends com.google.android.exoplayer2.BaseRenderer {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecRenderer>;
						public static CODEC_OPERATING_RATE_UNSET: number;
						public decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters;
						public supportsFormat(param0: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param1: com.google.android.exoplayer2.Format): number;
						public resetCodecStateForRelease(): void;
						public getCodecInfo(): com.google.android.exoplayer2.mediacodec.MediaCodecInfo;
						public constructor(param0: number, param1: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter.Factory, param2: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param3: boolean, param4: number);
						public onPositionReset(param0: number, param1: boolean): void;
						public static create(param0: number): number;
						public static getTunnelingSupport(param0: number): number;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public onStreamChanged(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: number, param2: number): void;
						public onDisabled(): void;
						public isEnded(): boolean;
						public getCodecOutputMediaFormat(): globalAndroid.media.MediaFormat;
						public releaseCodec(): void;
						public resetCodecStateForFlush(): void;
						public experimentalSetForceAsyncQueueingSynchronizationWorkaround(param0: boolean): void;
						public getDecoderInfos(param0: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param1: com.google.android.exoplayer2.Format, param2: boolean): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
						public setPlaybackSpeed(param0: number, param1: number): void;
						public setCurrentStreamFinal(): void;
						public createDecoderException(param0: java.lang.Throwable, param1: com.google.android.exoplayer2.mediacodec.MediaCodecInfo): com.google.android.exoplayer2.mediacodec.MediaCodecDecoderException;
						public setPendingPlaybackException(param0: com.google.android.exoplayer2.ExoPlaybackException): void;
						public getCodecOperatingRateV23(param0: number, param1: com.google.android.exoplayer2.Format, param2: androidNative.Array<com.google.android.exoplayer2.Format>): number;
						public isReady(): boolean;
						public disable(): void;
						public processOutputBuffer(param0: number, param1: number, param2: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, param3: java.nio.ByteBuffer, param4: number, param5: number, param6: number, param7: number, param8: boolean, param9: boolean, param10: com.google.android.exoplayer2.Format): boolean;
						public onCodecInitialized(param0: string, param1: number, param2: number): void;
						public canReuseCodec(param0: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.decoder.DecoderReuseEvaluation;
						public supportsFormat(param0: com.google.android.exoplayer2.Format): number;
						public start(): void;
						public getState(): number;
						public configureCodec(param0: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, param1: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, param2: com.google.android.exoplayer2.Format, param3: globalAndroid.media.MediaCrypto, param4: number): void;
						public handleInputBufferSupplementalData(param0: com.google.android.exoplayer2.decoder.DecoderInputBuffer): void;
						public onReset(): void;
						public onStopped(): void;
						public getReadingPositionUs(): number;
						public experimentalSetSynchronizeCodecInteractionsWithQueueingEnabled(param0: boolean): void;
						public onProcessedOutputBuffer(param0: number): void;
						public reset(): void;
						public flushOrReleaseCodec(): boolean;
						public onQueueInputBuffer(param0: com.google.android.exoplayer2.decoder.DecoderInputBuffer): void;
						public getCodecOperatingRate(): number;
						public getCodecNeedsEosPropagation(): boolean;
						public maybeInitCodecOrBypass(): void;
						public onStarted(): void;
						public render(param0: number, param1: number): void;
						public getName(): string;
						public replaceStream(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: com.google.android.exoplayer2.source.SampleStream, param2: number, param3: number): void;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public shouldUseBypass(param0: com.google.android.exoplayer2.Format): boolean;
						public setRenderTimeLimitMs(param0: number): void;
						public updateOutputFormatForTime(param0: number): void;
						public static getAdaptiveSupport(param0: number): number;
						public onCodecReleased(param0: string): void;
						public legacyKeepAvailableCodecInfosWithoutCodec(): boolean;
						public getOutputStreamOffsetUs(): number;
						public onInputFormatChanged(param0: com.google.android.exoplayer2.FormatHolder): com.google.android.exoplayer2.decoder.DecoderReuseEvaluation;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public experimentalSetAsynchronousBufferQueueingEnabled(param0: boolean): void;
						public resetPosition(param0: number): void;
						public getCodec(): com.google.android.exoplayer2.mediacodec.MediaCodecAdapter;
						public enable(param0: com.google.android.exoplayer2.RendererConfiguration, param1: androidNative.Array<com.google.android.exoplayer2.Format>, param2: com.google.android.exoplayer2.source.SampleStream, param3: number, param4: boolean, param5: boolean, param6: number, param7: number): void;
						public hasReadStreamToEnd(): boolean;
						public getPlaybackSpeed(): number;
						public setIndex(param0: number): void;
						public supportsMixedMimeTypeAdaptation(): number;
						public onProcessedStreamChange(): void;
						public getTrackType(): number;
						public stop(): void;
						public flushOrReinitializeCodec(): boolean;
						public onOutputFormatChanged(param0: com.google.android.exoplayer2.Format, param1: globalAndroid.media.MediaFormat): void;
						public onEnabled(param0: boolean, param1: boolean): void;
						public static getFormatSupport(param0: number): number;
						public shouldInitCodec(param0: com.google.android.exoplayer2.mediacodec.MediaCodecInfo): boolean;
						public static create(param0: number, param1: number, param2: number): number;
						public constructor(param0: number);
						public setPendingOutputEndOfStream(): void;
						public maybeThrowStreamError(): void;
						public renderToEndOfStream(): void;
						public static supportsFormatDrm(param0: com.google.android.exoplayer2.Format): boolean;
					}
					export module MediaCodecRenderer {
						export class DecoderInitializationException {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException>;
							public mimeType: string;
							public secureDecoderRequired: boolean;
							public codecInfo: com.google.android.exoplayer2.mediacodec.MediaCodecInfo;
							public diagnosticInfo: string;
							public fallbackDecoderInitializationException: com.google.android.exoplayer2.mediacodec.MediaCodecRenderer.DecoderInitializationException;
							public constructor(param0: com.google.android.exoplayer2.Format, param1: java.lang.Throwable, param2: boolean, param3: com.google.android.exoplayer2.mediacodec.MediaCodecInfo);
							public constructor(param0: com.google.android.exoplayer2.Format, param1: java.lang.Throwable, param2: boolean, param3: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class MediaCodecSelector {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecSelector>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.mediacodec.MediaCodecSelector interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getDecoderInfos(param0: string, param1: boolean, param2: boolean): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
							<clinit>(): void;
						});
						public constructor();
						public static DEFAULT: com.google.android.exoplayer2.mediacodec.MediaCodecSelector;
						public getDecoderInfos(param0: string, param1: boolean, param2: boolean): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class MediaCodecUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecUtil>;
						public static clearDecoderInfoCache(): void;
						public static getDecoderInfos(param0: string, param1: boolean, param2: boolean): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
						public static getDecoderInfo(param0: string, param1: boolean, param2: boolean): com.google.android.exoplayer2.mediacodec.MediaCodecInfo;
						public static maxH264DecodableFrameSize(): number;
						public static getDecoderInfosSortedByFormatSupport(param0: java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>, param1: com.google.android.exoplayer2.Format): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
						public static getCodecProfileAndLevel(param0: com.google.android.exoplayer2.Format): globalAndroid.util.Pair<java.lang.Integer,java.lang.Integer>;
						public static warmDecoderInfoCache(param0: string, param1: boolean, param2: boolean): void;
						public static getDecryptOnlyDecoderInfo(): com.google.android.exoplayer2.mediacodec.MediaCodecInfo;
					}
					export module MediaCodecUtil {
						export class CodecKey {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecUtil.CodecKey>;
							public mimeType: string;
							public secure: boolean;
							public tunneling: boolean;
							public constructor(param0: string, param1: boolean, param2: boolean);
							public hashCode(): number;
							public equals(param0: any): boolean;
						}
						export class DecoderQueryException {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecUtil.DecoderQueryException>;
						}
						export class MediaCodecListCompat {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecUtil.MediaCodecListCompat>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.mediacodec.MediaCodecUtil$MediaCodecListCompat interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getCodecCount(): number;
								getCodecInfoAt(param0: number): globalAndroid.media.MediaCodecInfo;
								secureDecodersExplicit(): boolean;
								isFeatureSupported(param0: string, param1: string, param2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
								isFeatureRequired(param0: string, param1: string, param2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							});
							public constructor();
							public secureDecodersExplicit(): boolean;
							public getCodecInfoAt(param0: number): globalAndroid.media.MediaCodecInfo;
							public isFeatureSupported(param0: string, param1: string, param2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							public isFeatureRequired(param0: string, param1: string, param2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							public getCodecCount(): number;
						}
						export class MediaCodecListCompatV16 extends com.google.android.exoplayer2.mediacodec.MediaCodecUtil.MediaCodecListCompat {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecUtil.MediaCodecListCompatV16>;
							public secureDecodersExplicit(): boolean;
							public getCodecInfoAt(param0: number): globalAndroid.media.MediaCodecInfo;
							public isFeatureSupported(param0: string, param1: string, param2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							public isFeatureRequired(param0: string, param1: string, param2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							public getCodecCount(): number;
						}
						export class MediaCodecListCompatV21 extends com.google.android.exoplayer2.mediacodec.MediaCodecUtil.MediaCodecListCompat {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecUtil.MediaCodecListCompatV21>;
							public secureDecodersExplicit(): boolean;
							public constructor(param0: boolean, param1: boolean);
							public getCodecInfoAt(param0: number): globalAndroid.media.MediaCodecInfo;
							public isFeatureSupported(param0: string, param1: string, param2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							public isFeatureRequired(param0: string, param1: string, param2: globalAndroid.media.MediaCodecInfo.CodecCapabilities): boolean;
							public getCodecCount(): number;
						}
						export class ScoreProvider<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaCodecUtil.ScoreProvider<any>>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.mediacodec.MediaCodecUtil$ScoreProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getScore(param0: T): number;
							});
							public constructor();
							public getScore(param0: T): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class MediaFormatUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.MediaFormatUtil>;
						public static maybeSetByteBuffer(param0: globalAndroid.media.MediaFormat, param1: string, param2: androidNative.Array<number>): void;
						public static maybeSetInteger(param0: globalAndroid.media.MediaFormat, param1: string, param2: number): void;
						public static setCsdBuffers(param0: globalAndroid.media.MediaFormat, param1: java.util.List<native.Array<number>>): void;
						public static maybeSetFloat(param0: globalAndroid.media.MediaFormat, param1: string, param2: number): void;
						public static setString(param0: globalAndroid.media.MediaFormat, param1: string, param2: string): void;
						public static maybeSetColorInfo(param0: globalAndroid.media.MediaFormat, param1: com.google.android.exoplayer2.video.ColorInfo): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module mediacodec {
					export class SynchronousMediaCodecAdapter extends com.google.android.exoplayer2.mediacodec.MediaCodecAdapter {
						public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter>;
						public getOutputBuffer(param0: number): java.nio.ByteBuffer;
						public dequeueOutputBufferIndex(param0: globalAndroid.media.MediaCodec.BufferInfo): number;
						public configure(param0: globalAndroid.media.MediaFormat, param1: globalAndroid.view.Surface, param2: globalAndroid.media.MediaCrypto, param3: number): void;
						public releaseOutputBuffer(param0: number, param1: number): void;
						public queueSecureInputBuffer(param0: number, param1: number, param2: com.google.android.exoplayer2.decoder.CryptoInfo, param3: number, param4: number): void;
						public setVideoScalingMode(param0: number): void;
						public getInputBuffer(param0: number): java.nio.ByteBuffer;
						public flush(): void;
						public release(): void;
						public dequeueInputBufferIndex(): number;
						public setOnFrameRenderedListener(param0: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter.OnFrameRenderedListener, param1: globalAndroid.os.Handler): void;
						public setParameters(param0: globalAndroid.os.Bundle): void;
						public start(): void;
						public queueInputBuffer(param0: number, param1: number, param2: number, param3: number, param4: number): void;
						public getOutputFormat(): globalAndroid.media.MediaFormat;
						public releaseOutputBuffer(param0: number, param1: boolean): void;
						public setOutputSurface(param0: globalAndroid.view.Surface): void;
					}
					export module SynchronousMediaCodecAdapter {
						export class Factory extends com.google.android.exoplayer2.mediacodec.MediaCodecAdapter.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.mediacodec.SynchronousMediaCodecAdapter.Factory>;
							public constructor();
							public createAdapter(param0: globalAndroid.media.MediaCodec): com.google.android.exoplayer2.mediacodec.MediaCodecAdapter;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export class Metadata {
						public static class: java.lang.Class<com.google.android.exoplayer2.metadata.Metadata>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.Metadata>;
						public constructor(param0: java.util.List<any>);
						public describeContents(): number;
						public length(): number;
						public copyWithAppendedEntriesFrom(param0: com.google.android.exoplayer2.metadata.Metadata): com.google.android.exoplayer2.metadata.Metadata;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public get(param0: number): com.google.android.exoplayer2.metadata.Metadata.Entry;
						public constructor(param0: androidNative.Array<com.google.android.exoplayer2.metadata.Metadata.Entry>);
						public toString(): string;
						public copyWithAppendedEntries(param0: androidNative.Array<com.google.android.exoplayer2.metadata.Metadata.Entry>): com.google.android.exoplayer2.metadata.Metadata;
					}
					export module Metadata {
						export class Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.Metadata.Entry>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.metadata.Metadata$Entry interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
								getWrappedMetadataBytes(): androidNative.Array<number>;
							});
							public constructor();
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export class MetadataDecoder {
						public static class: java.lang.Class<com.google.android.exoplayer2.metadata.MetadataDecoder>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.metadata.MetadataDecoder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							decode(param0: com.google.android.exoplayer2.metadata.MetadataInputBuffer): com.google.android.exoplayer2.metadata.Metadata;
						});
						public constructor();
						public decode(param0: com.google.android.exoplayer2.metadata.MetadataInputBuffer): com.google.android.exoplayer2.metadata.Metadata;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export class MetadataDecoderFactory {
						public static class: java.lang.Class<com.google.android.exoplayer2.metadata.MetadataDecoderFactory>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.metadata.MetadataDecoderFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							supportsFormat(param0: com.google.android.exoplayer2.Format): boolean;
							createDecoder(param0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.metadata.MetadataDecoder;
							<clinit>(): void;
						});
						public constructor();
						public static DEFAULT: com.google.android.exoplayer2.metadata.MetadataDecoderFactory;
						public createDecoder(param0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.metadata.MetadataDecoder;
						public supportsFormat(param0: com.google.android.exoplayer2.Format): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export class MetadataInputBuffer extends com.google.android.exoplayer2.decoder.DecoderInputBuffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.metadata.MetadataInputBuffer>;
						public subsampleOffsetUs: number;
						public constructor();
						public constructor(param0: number);
						public constructor(param0: number, param1: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export class MetadataOutput {
						public static class: java.lang.Class<com.google.android.exoplayer2.metadata.MetadataOutput>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.metadata.MetadataOutput interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onMetadata(param0: com.google.android.exoplayer2.metadata.Metadata): void;
						});
						public constructor();
						public onMetadata(param0: com.google.android.exoplayer2.metadata.Metadata): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export class MetadataRenderer extends com.google.android.exoplayer2.BaseRenderer {
						public static class: java.lang.Class<com.google.android.exoplayer2.metadata.MetadataRenderer>;
						public handleMessage(param0: globalAndroid.os.Message): boolean;
						public render(param0: number, param1: number): void;
						public getName(): string;
						public replaceStream(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: com.google.android.exoplayer2.source.SampleStream, param2: number, param3: number): void;
						public onPositionReset(param0: number, param1: boolean): void;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public static create(param0: number): number;
						public static getTunnelingSupport(param0: number): number;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public constructor(param0: com.google.android.exoplayer2.metadata.MetadataOutput, param1: globalAndroid.os.Looper);
						public constructor(param0: com.google.android.exoplayer2.metadata.MetadataOutput, param1: globalAndroid.os.Looper, param2: com.google.android.exoplayer2.metadata.MetadataDecoderFactory);
						public static getAdaptiveSupport(param0: number): number;
						public onStreamChanged(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: number, param2: number): void;
						public onDisabled(): void;
						public isEnded(): boolean;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public setPlaybackSpeed(param0: number, param1: number): void;
						public setCurrentStreamFinal(): void;
						public resetPosition(param0: number): void;
						public enable(param0: com.google.android.exoplayer2.RendererConfiguration, param1: androidNative.Array<com.google.android.exoplayer2.Format>, param2: com.google.android.exoplayer2.source.SampleStream, param3: number, param4: boolean, param5: boolean, param6: number, param7: number): void;
						public hasReadStreamToEnd(): boolean;
						public isReady(): boolean;
						public setIndex(param0: number): void;
						public disable(): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public handleMessage(param0: number, param1: any): void;
						public static getFormatSupport(param0: number): number;
						public supportsFormat(param0: com.google.android.exoplayer2.Format): number;
						public start(): void;
						public static create(param0: number, param1: number, param2: number): number;
						public constructor(param0: number);
						public getState(): number;
						public maybeThrowStreamError(): void;
						public getReadingPositionUs(): number;
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export abstract class SimpleMetadataDecoder extends com.google.android.exoplayer2.metadata.MetadataDecoder {
						public static class: java.lang.Class<com.google.android.exoplayer2.metadata.SimpleMetadataDecoder>;
						public constructor();
						public decode(param0: com.google.android.exoplayer2.metadata.MetadataInputBuffer): com.google.android.exoplayer2.metadata.Metadata;
						public decode(param0: com.google.android.exoplayer2.metadata.MetadataInputBuffer, param1: java.nio.ByteBuffer): com.google.android.exoplayer2.metadata.Metadata;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module dvbsi {
						export class AppInfoTable extends com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.dvbsi.AppInfoTable>;
							public static CONTROL_CODE_AUTOSTART: number;
							public static CONTROL_CODE_PRESENT: number;
							public controlCode: number;
							public url: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.dvbsi.AppInfoTable>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public describeContents(): number;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public toString(): string;
							public constructor(param0: number, param1: string);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module dvbsi {
						export class AppInfoTableDecoder extends com.google.android.exoplayer2.metadata.SimpleMetadataDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.dvbsi.AppInfoTableDecoder>;
							public static APPLICATION_INFORMATION_TABLE_ID: number;
							public constructor();
							public decode(param0: com.google.android.exoplayer2.metadata.MetadataInputBuffer): com.google.android.exoplayer2.metadata.Metadata;
							public decode(param0: com.google.android.exoplayer2.metadata.MetadataInputBuffer, param1: java.nio.ByteBuffer): com.google.android.exoplayer2.metadata.Metadata;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module emsg {
						export class EventMessage extends com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.emsg.EventMessage>;
							public static ID3_SCHEME_ID_AOM: string;
							public static SCTE35_SCHEME_ID: string;
							public schemeIdUri: string;
							public value: string;
							public durationMs: number;
							public id: number;
							public messageData: androidNative.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.emsg.EventMessage>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public describeContents(): number;
							public constructor(param0: string, param1: string, param2: number, param3: number, param4: androidNative.Array<number>);
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module emsg {
						export class EventMessageDecoder extends com.google.android.exoplayer2.metadata.SimpleMetadataDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.emsg.EventMessageDecoder>;
							public constructor();
							public decode(param0: com.google.android.exoplayer2.metadata.MetadataInputBuffer): com.google.android.exoplayer2.metadata.Metadata;
							public decode(param0: com.google.android.exoplayer2.metadata.MetadataInputBuffer, param1: java.nio.ByteBuffer): com.google.android.exoplayer2.metadata.Metadata;
							public decode(param0: com.google.android.exoplayer2.util.ParsableByteArray): com.google.android.exoplayer2.metadata.emsg.EventMessage;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module emsg {
						export class EventMessageEncoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.emsg.EventMessageEncoder>;
							public constructor();
							public encode(param0: com.google.android.exoplayer2.metadata.emsg.EventMessage): androidNative.Array<number>;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module flac {
						export class PictureFrame extends com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.flac.PictureFrame>;
							public pictureType: number;
							public mimeType: string;
							public description: string;
							public width: number;
							public height: number;
							public depth: number;
							public colors: number;
							public pictureData: androidNative.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.flac.PictureFrame>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public describeContents(): number;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public constructor(param0: number, param1: string, param2: string, param3: number, param4: number, param5: number, param6: number, param7: androidNative.Array<number>);
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module flac {
						export class VorbisComment extends com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.flac.VorbisComment>;
							public key: string;
							public value: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.flac.VorbisComment>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string, param1: string);
							public describeContents(): number;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module icy {
						export class IcyDecoder extends com.google.android.exoplayer2.metadata.SimpleMetadataDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.icy.IcyDecoder>;
							public constructor();
							public decode(param0: com.google.android.exoplayer2.metadata.MetadataInputBuffer): com.google.android.exoplayer2.metadata.Metadata;
							public decode(param0: com.google.android.exoplayer2.metadata.MetadataInputBuffer, param1: java.nio.ByteBuffer): com.google.android.exoplayer2.metadata.Metadata;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module icy {
						export class IcyHeaders extends com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.icy.IcyHeaders>;
							public static REQUEST_HEADER_ENABLE_METADATA_NAME: string;
							public static REQUEST_HEADER_ENABLE_METADATA_VALUE: string;
							public bitrate: number;
							public genre: string;
							public name: string;
							public url: string;
							public isPublic: boolean;
							public metadataInterval: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.icy.IcyHeaders>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public describeContents(): number;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public static parse(param0: java.util.Map<string,java.util.List<string>>): com.google.android.exoplayer2.metadata.icy.IcyHeaders;
							public toString(): string;
							public equals(param0: any): boolean;
							public constructor(param0: number, param1: string, param2: string, param3: string, param4: boolean, param5: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module icy {
						export class IcyInfo extends com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.icy.IcyInfo>;
							public rawMetadata: androidNative.Array<number>;
							public title: string;
							public url: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.icy.IcyInfo>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public describeContents(): number;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public toString(): string;
							public equals(param0: any): boolean;
							public constructor(param0: androidNative.Array<number>, param1: string, param2: string);
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module id3 {
						export class ApicFrame extends com.google.android.exoplayer2.metadata.id3.Id3Frame {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.id3.ApicFrame>;
							public static ID: string;
							public mimeType: string;
							public description: string;
							public pictureType: number;
							public pictureData: androidNative.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.id3.ApicFrame>;
							public constructor(param0: string, param1: string, param2: number, param3: androidNative.Array<number>);
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module id3 {
						export class BinaryFrame extends com.google.android.exoplayer2.metadata.id3.Id3Frame {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.id3.BinaryFrame>;
							public data: androidNative.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.id3.BinaryFrame>;
							public constructor(param0: string, param1: androidNative.Array<number>);
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module id3 {
						export class ChapterFrame extends com.google.android.exoplayer2.metadata.id3.Id3Frame {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.id3.ChapterFrame>;
							public static ID: string;
							public chapterId: string;
							public startTimeMs: number;
							public endTimeMs: number;
							public startOffset: number;
							public endOffset: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.id3.ChapterFrame>;
							public constructor(param0: string, param1: number, param2: number, param3: number, param4: number, param5: androidNative.Array<com.google.android.exoplayer2.metadata.id3.Id3Frame>);
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public getSubFrameCount(): number;
							public describeContents(): number;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public getSubFrame(param0: number): com.google.android.exoplayer2.metadata.id3.Id3Frame;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module id3 {
						export class ChapterTocFrame extends com.google.android.exoplayer2.metadata.id3.Id3Frame {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.id3.ChapterTocFrame>;
							public static ID: string;
							public elementId: string;
							public isRoot: boolean;
							public isOrdered: boolean;
							public children: androidNative.Array<string>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.id3.ChapterTocFrame>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public getSubFrameCount(): number;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public constructor(param0: string, param1: boolean, param2: boolean, param3: androidNative.Array<string>, param4: androidNative.Array<com.google.android.exoplayer2.metadata.id3.Id3Frame>);
							public getSubFrame(param0: number): com.google.android.exoplayer2.metadata.id3.Id3Frame;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module id3 {
						export class CommentFrame extends com.google.android.exoplayer2.metadata.id3.Id3Frame {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.id3.CommentFrame>;
							public static ID: string;
							public language: string;
							public description: string;
							public text: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.id3.CommentFrame>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public constructor(param0: string, param1: string, param2: string);
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module id3 {
						export class GeobFrame extends com.google.android.exoplayer2.metadata.id3.Id3Frame {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.id3.GeobFrame>;
							public static ID: string;
							public mimeType: string;
							public filename: string;
							public description: string;
							public data: androidNative.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.id3.GeobFrame>;
							public constructor(param0: string, param1: string, param2: string, param3: androidNative.Array<number>);
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module id3 {
						export class Id3Decoder extends com.google.android.exoplayer2.metadata.SimpleMetadataDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.id3.Id3Decoder>;
							public static NO_FRAMES_PREDICATE: com.google.android.exoplayer2.metadata.id3.Id3Decoder.FramePredicate;
							public static ID3_TAG: number;
							public static ID3_HEADER_LENGTH: number;
							public constructor();
							public constructor(param0: com.google.android.exoplayer2.metadata.id3.Id3Decoder.FramePredicate);
							public decode(param0: androidNative.Array<number>, param1: number): com.google.android.exoplayer2.metadata.Metadata;
							public decode(param0: com.google.android.exoplayer2.metadata.MetadataInputBuffer): com.google.android.exoplayer2.metadata.Metadata;
							public decode(param0: com.google.android.exoplayer2.metadata.MetadataInputBuffer, param1: java.nio.ByteBuffer): com.google.android.exoplayer2.metadata.Metadata;
						}
						export module Id3Decoder {
							export class FramePredicate {
								public static class: java.lang.Class<com.google.android.exoplayer2.metadata.id3.Id3Decoder.FramePredicate>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.metadata.id3.Id3Decoder$FramePredicate interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									evaluate(param0: number, param1: number, param2: number, param3: number, param4: number): boolean;
								});
								public constructor();
								public evaluate(param0: number, param1: number, param2: number, param3: number, param4: number): boolean;
							}
							export class Id3Header {
								public static class: java.lang.Class<com.google.android.exoplayer2.metadata.id3.Id3Decoder.Id3Header>;
								public constructor(param0: number, param1: boolean, param2: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module id3 {
						export abstract class Id3Frame extends com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.id3.Id3Frame>;
							public id: string;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public constructor(param0: string);
							public describeContents(): number;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module id3 {
						export class InternalFrame extends com.google.android.exoplayer2.metadata.id3.Id3Frame {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.id3.InternalFrame>;
							public static ID: string;
							public domain: string;
							public description: string;
							public text: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.id3.InternalFrame>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public constructor(param0: string, param1: string, param2: string);
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module id3 {
						export class MlltFrame extends com.google.android.exoplayer2.metadata.id3.Id3Frame {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.id3.MlltFrame>;
							public static ID: string;
							public mpegFramesBetweenReference: number;
							public bytesBetweenReference: number;
							public millisecondsBetweenReference: number;
							public bytesDeviations: androidNative.Array<number>;
							public millisecondsDeviations: androidNative.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.id3.MlltFrame>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public describeContents(): number;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public equals(param0: any): boolean;
							public constructor(param0: number, param1: number, param2: number, param3: androidNative.Array<number>, param4: androidNative.Array<number>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module id3 {
						export class PrivFrame extends com.google.android.exoplayer2.metadata.id3.Id3Frame {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.id3.PrivFrame>;
							public static ID: string;
							public owner: string;
							public privateData: androidNative.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.id3.PrivFrame>;
							public constructor(param0: string, param1: androidNative.Array<number>);
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module id3 {
						export class TextInformationFrame extends com.google.android.exoplayer2.metadata.id3.Id3Frame {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.id3.TextInformationFrame>;
							public description: string;
							public value: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.id3.TextInformationFrame>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public constructor(param0: string, param1: string, param2: string);
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module id3 {
						export class UrlLinkFrame extends com.google.android.exoplayer2.metadata.id3.Id3Frame {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.id3.UrlLinkFrame>;
							public description: string;
							public url: string;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.id3.UrlLinkFrame>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: string);
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public constructor(param0: string, param1: string, param2: string);
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module mp4 {
						export class MdtaMetadataEntry extends com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.mp4.MdtaMetadataEntry>;
							public static KEY_ANDROID_CAPTURE_FPS: string;
							public key: string;
							public value: androidNative.Array<number>;
							public localeIndicator: number;
							public typeIndicator: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.mp4.MdtaMetadataEntry>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public describeContents(): number;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public toString(): string;
							public equals(param0: any): boolean;
							public constructor(param0: string, param1: androidNative.Array<number>, param2: number, param3: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module mp4 {
						export class MotionPhotoMetadata extends com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.mp4.MotionPhotoMetadata>;
							public photoStartPosition: number;
							public photoSize: number;
							public photoPresentationTimestampUs: number;
							public videoStartPosition: number;
							public videoSize: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.mp4.MotionPhotoMetadata>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public describeContents(): number;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public toString(): string;
							public constructor(param0: number, param1: number, param2: number, param3: number, param4: number);
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module mp4 {
						export class SlowMotionData extends com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.mp4.SlowMotionData>;
							public segments: java.util.List<com.google.android.exoplayer2.metadata.mp4.SlowMotionData.Segment>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.mp4.SlowMotionData>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public constructor(param0: java.util.List<com.google.android.exoplayer2.metadata.mp4.SlowMotionData.Segment>);
							public describeContents(): number;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export module SlowMotionData {
							export class Segment {
								public static class: java.lang.Class<com.google.android.exoplayer2.metadata.mp4.SlowMotionData.Segment>;
								public static BY_START_THEN_END_THEN_DIVISOR: java.util.Comparator<com.google.android.exoplayer2.metadata.mp4.SlowMotionData.Segment>;
								public startTimeMs: number;
								public endTimeMs: number;
								public speedDivisor: number;
								public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.mp4.SlowMotionData.Segment>;
								public toString(): string;
								public describeContents(): number;
								public constructor(param0: number, param1: number, param2: number);
								public equals(param0: any): boolean;
								public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module mp4 {
						export class SmtaMetadataEntry extends com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.mp4.SmtaMetadataEntry>;
							public captureFrameRate: number;
							public svcTemporalLayerCount: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.mp4.SmtaMetadataEntry>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public constructor(param0: number, param1: number);
							public hashCode(): number;
							public describeContents(): number;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public toString(): string;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}



declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module scte35 {
						export class PrivateCommand extends com.google.android.exoplayer2.metadata.scte35.SpliceCommand {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.PrivateCommand>;
							public ptsAdjustment: number;
							public identifier: number;
							public commandBytes: androidNative.Array<number>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.scte35.PrivateCommand>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module scte35 {
						export abstract class SpliceCommand extends com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceCommand>;
							public constructor();
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public describeContents(): number;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public toString(): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module scte35 {
						export class SpliceInfoDecoder extends com.google.android.exoplayer2.metadata.SimpleMetadataDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceInfoDecoder>;
							public constructor();
							public decode(param0: com.google.android.exoplayer2.metadata.MetadataInputBuffer): com.google.android.exoplayer2.metadata.Metadata;
							public decode(param0: com.google.android.exoplayer2.metadata.MetadataInputBuffer, param1: java.nio.ByteBuffer): com.google.android.exoplayer2.metadata.Metadata;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module scte35 {
						export class SpliceInsertCommand extends com.google.android.exoplayer2.metadata.scte35.SpliceCommand {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand>;
							public spliceEventId: number;
							public spliceEventCancelIndicator: boolean;
							public outOfNetworkIndicator: boolean;
							public programSpliceFlag: boolean;
							public spliceImmediateFlag: boolean;
							public programSplicePts: number;
							public programSplicePlaybackPositionUs: number;
							public componentSpliceList: java.util.List<com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand.ComponentSplice>;
							public autoReturn: boolean;
							public breakDurationUs: number;
							public uniqueProgramId: number;
							public availNum: number;
							public availsExpected: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
						}
						export module SpliceInsertCommand {
							export class ComponentSplice {
								public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand.ComponentSplice>;
								public componentTag: number;
								public componentSplicePts: number;
								public componentSplicePlaybackPositionUs: number;
								public writeToParcel(param0: globalAndroid.os.Parcel): void;
								public static createFromParcel(param0: globalAndroid.os.Parcel): com.google.android.exoplayer2.metadata.scte35.SpliceInsertCommand.ComponentSplice;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module scte35 {
						export class SpliceNullCommand extends com.google.android.exoplayer2.metadata.scte35.SpliceCommand {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.scte35.SpliceNullCommand>;
							public constructor();
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module scte35 {
						export class SpliceScheduleCommand extends com.google.android.exoplayer2.metadata.scte35.SpliceCommand {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand>;
							public events: java.util.List<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand.Event>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
						}
						export module SpliceScheduleCommand {
							export class ComponentSplice {
								public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand.ComponentSplice>;
								public componentTag: number;
								public utcSpliceTime: number;
							}
							export class Event {
								public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand.Event>;
								public spliceEventId: number;
								public spliceEventCancelIndicator: boolean;
								public outOfNetworkIndicator: boolean;
								public programSpliceFlag: boolean;
								public utcSpliceTime: number;
								public componentSpliceList: java.util.List<com.google.android.exoplayer2.metadata.scte35.SpliceScheduleCommand.ComponentSplice>;
								public autoReturn: boolean;
								public breakDurationUs: number;
								public uniqueProgramId: number;
								public availNum: number;
								public availsExpected: number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module metadata {
					export module scte35 {
						export class TimeSignalCommand extends com.google.android.exoplayer2.metadata.scte35.SpliceCommand {
							public static class: java.lang.Class<com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand>;
							public ptsTime: number;
							public playbackPositionUs: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.metadata.scte35.TimeSignalCommand>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class ActionFile {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.ActionFile>;
						public delete(): void;
						public constructor(param0: java.io.File);
						public exists(): boolean;
						public load(): androidNative.Array<com.google.android.exoplayer2.offline.DownloadRequest>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class ActionFileUpgradeUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.ActionFileUpgradeUtil>;
						public static upgradeAndDelete(param0: java.io.File, param1: com.google.android.exoplayer2.offline.ActionFileUpgradeUtil.DownloadIdProvider, param2: com.google.android.exoplayer2.offline.DefaultDownloadIndex, param3: boolean, param4: boolean): void;
					}
					export module ActionFileUpgradeUtil {
						export class DownloadIdProvider {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.ActionFileUpgradeUtil.DownloadIdProvider>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.offline.ActionFileUpgradeUtil$DownloadIdProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getId(param0: com.google.android.exoplayer2.offline.DownloadRequest): string;
							});
							public constructor();
							public getId(param0: com.google.android.exoplayer2.offline.DownloadRequest): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DefaultDownloadIndex extends com.google.android.exoplayer2.offline.WritableDownloadIndex {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DefaultDownloadIndex>;
						public setStopReason(param0: string, param1: number): void;
						public setDownloadingStatesToQueued(): void;
						public putDownload(param0: com.google.android.exoplayer2.offline.Download): void;
						public getDownload(param0: string): com.google.android.exoplayer2.offline.Download;
						public setStatesToRemoving(): void;
						public constructor(param0: com.google.android.exoplayer2.database.DatabaseProvider, param1: string);
						public constructor(param0: com.google.android.exoplayer2.database.DatabaseProvider);
						public getDownloads(param0: androidNative.Array<number>): com.google.android.exoplayer2.offline.DownloadCursor;
						public removeDownload(param0: string): void;
						public setStopReason(param0: number): void;
					}
					export module DefaultDownloadIndex {
						export class DownloadCursorImpl extends com.google.android.exoplayer2.offline.DownloadCursor {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DefaultDownloadIndex.DownloadCursorImpl>;
							public moveToNext(): boolean;
							public close(): void;
							public isAfterLast(): boolean;
							public getPosition(): number;
							public moveToPosition(param0: number): boolean;
							public isClosed(): boolean;
							public moveToLast(): boolean;
							public getCount(): number;
							public moveToFirst(): boolean;
							public isFirst(): boolean;
							public getDownload(): com.google.android.exoplayer2.offline.Download;
							public isLast(): boolean;
							public moveToPrevious(): boolean;
							public isBeforeFirst(): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DefaultDownloaderFactory extends com.google.android.exoplayer2.offline.DownloaderFactory {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DefaultDownloaderFactory>;
						public createDownloader(param0: com.google.android.exoplayer2.offline.DownloadRequest): com.google.android.exoplayer2.offline.Downloader;
						/** @deprecated */
						public constructor(param0: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory);
						public constructor(param0: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param1: java.util.concurrent.Executor);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class Download {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.Download>;
						public static STATE_QUEUED: number;
						public static STATE_STOPPED: number;
						public static STATE_DOWNLOADING: number;
						public static STATE_COMPLETED: number;
						public static STATE_FAILED: number;
						public static STATE_REMOVING: number;
						public static STATE_RESTARTING: number;
						public static FAILURE_REASON_NONE: number;
						public static FAILURE_REASON_UNKNOWN: number;
						public static STOP_REASON_NONE: number;
						public request: com.google.android.exoplayer2.offline.DownloadRequest;
						public state: number;
						public startTimeMs: number;
						public updateTimeMs: number;
						public contentLength: number;
						public stopReason: number;
						public failureReason: number;
						public getBytesDownloaded(): number;
						public getPercentDownloaded(): number;
						public constructor(param0: com.google.android.exoplayer2.offline.DownloadRequest, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.google.android.exoplayer2.offline.DownloadProgress);
						public isTerminalState(): boolean;
						public constructor(param0: com.google.android.exoplayer2.offline.DownloadRequest, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number);
					}
					export module Download {
						export class FailureReason {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.Download.FailureReason>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.offline.Download$FailureReason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
						export class State {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.Download.State>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.offline.Download$State interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloadCursor {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadCursor>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.offline.DownloadCursor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getDownload(): com.google.android.exoplayer2.offline.Download;
							getCount(): number;
							getPosition(): number;
							moveToPosition(param0: number): boolean;
							moveToFirst(): boolean;
							moveToLast(): boolean;
							moveToNext(): boolean;
							moveToPrevious(): boolean;
							isFirst(): boolean;
							isLast(): boolean;
							isBeforeFirst(): boolean;
							isAfterLast(): boolean;
							isClosed(): boolean;
							close(): void;
						});
						public constructor();
						public isFirst(): boolean;
						public close(): void;
						public getPosition(): number;
						public getCount(): number;
						public isBeforeFirst(): boolean;
						public isLast(): boolean;
						public moveToFirst(): boolean;
						public isClosed(): boolean;
						public getDownload(): com.google.android.exoplayer2.offline.Download;
						public moveToPrevious(): boolean;
						public moveToLast(): boolean;
						public moveToPosition(param0: number): boolean;
						public isAfterLast(): boolean;
						public moveToNext(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloadException {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadException>;
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloadHelper {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadHelper>;
						public static DEFAULT_TRACK_SELECTOR_PARAMETERS_WITHOUT_CONTEXT: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
						public static DEFAULT_TRACK_SELECTOR_PARAMETERS_WITHOUT_VIEWPORT: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
						public static DEFAULT_TRACK_SELECTOR_PARAMETERS: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
						/** @deprecated */
						public static forHls(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.upstream.DataSource.Factory, param2: com.google.android.exoplayer2.RenderersFactory, param3: com.google.android.exoplayer2.drm.DrmSessionManager, param4: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): com.google.android.exoplayer2.offline.DownloadHelper;
						public getTrackGroups(param0: number): com.google.android.exoplayer2.source.TrackGroupArray;
						public static createMediaSource(param0: com.google.android.exoplayer2.offline.DownloadRequest, param1: com.google.android.exoplayer2.upstream.DataSource.Factory): com.google.android.exoplayer2.source.MediaSource;
						public addTrackSelection(param0: number, param1: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): void;
						public addTrackSelectionForSingleRenderer(param0: number, param1: number, param2: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, param3: java.util.List<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride>): void;
						public static forMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, param2: com.google.android.exoplayer2.RenderersFactory, param3: com.google.android.exoplayer2.upstream.DataSource.Factory, param4: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.offline.DownloadHelper;
						public prepare(param0: com.google.android.exoplayer2.offline.DownloadHelper.Callback): void;
						public static getRendererCapabilities(param0: com.google.android.exoplayer2.RenderersFactory): androidNative.Array<com.google.android.exoplayer2.RendererCapabilities>;
						/** @deprecated */
						public static forSmoothStreaming(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.upstream.DataSource.Factory, param2: com.google.android.exoplayer2.RenderersFactory, param3: com.google.android.exoplayer2.drm.DrmSessionManager, param4: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): com.google.android.exoplayer2.offline.DownloadHelper;
						public getDownloadRequest(param0: string, param1: androidNative.Array<number>): com.google.android.exoplayer2.offline.DownloadRequest;
						/** @deprecated */
						public static forProgressive(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri, param2: string): com.google.android.exoplayer2.offline.DownloadHelper;
						/** @deprecated */
						public static forDash(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri, param2: com.google.android.exoplayer2.upstream.DataSource.Factory, param3: com.google.android.exoplayer2.RenderersFactory): com.google.android.exoplayer2.offline.DownloadHelper;
						/** @deprecated */
						public static forHls(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri, param2: com.google.android.exoplayer2.upstream.DataSource.Factory, param3: com.google.android.exoplayer2.RenderersFactory): com.google.android.exoplayer2.offline.DownloadHelper;
						public static getDefaultTrackSelectorParameters(param0: globalAndroid.content.Context): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
						public addTextLanguagesToSelection(param0: boolean, param1: androidNative.Array<string>): void;
						public static createMediaSource(param0: com.google.android.exoplayer2.offline.DownloadRequest, param1: com.google.android.exoplayer2.upstream.DataSource.Factory, param2: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.MediaSource;
						public getPeriodCount(): number;
						public static forMediaItem(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.MediaItem, param2: com.google.android.exoplayer2.RenderersFactory, param3: com.google.android.exoplayer2.upstream.DataSource.Factory): com.google.android.exoplayer2.offline.DownloadHelper;
						public getMappedTrackInfo(param0: number): com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo;
						public static forMediaItem(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, param2: com.google.android.exoplayer2.RenderersFactory, param3: com.google.android.exoplayer2.upstream.DataSource.Factory): com.google.android.exoplayer2.offline.DownloadHelper;
						/** @deprecated */
						public static forSmoothStreaming(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri, param2: com.google.android.exoplayer2.upstream.DataSource.Factory, param3: com.google.android.exoplayer2.RenderersFactory): com.google.android.exoplayer2.offline.DownloadHelper;
						/** @deprecated */
						public static forSmoothStreaming(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.upstream.DataSource.Factory, param2: com.google.android.exoplayer2.RenderersFactory): com.google.android.exoplayer2.offline.DownloadHelper;
						/** @deprecated */
						public static forDash(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.upstream.DataSource.Factory, param2: com.google.android.exoplayer2.RenderersFactory, param3: com.google.android.exoplayer2.drm.DrmSessionManager, param4: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): com.google.android.exoplayer2.offline.DownloadHelper;
						public getDownloadRequest(param0: androidNative.Array<number>): com.google.android.exoplayer2.offline.DownloadRequest;
						public release(): void;
						public getTrackSelections(param0: number, param1: number): java.util.List<com.google.android.exoplayer2.trackselection.ExoTrackSelection>;
						public clearTrackSelections(param0: number): void;
						public addAudioLanguagesToSelection(param0: androidNative.Array<string>): void;
						public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, param3: androidNative.Array<com.google.android.exoplayer2.RendererCapabilities>);
						public static forMediaItem(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.offline.DownloadHelper;
						public replaceTrackSelections(param0: number, param1: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): void;
						/** @deprecated */
						public static forProgressive(param0: globalAndroid.content.Context, param1: globalAndroid.net.Uri): com.google.android.exoplayer2.offline.DownloadHelper;
						public getManifest(): any;
					}
					export module DownloadHelper {
						export class Callback {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadHelper.Callback>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.offline.DownloadHelper$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPrepared(param0: com.google.android.exoplayer2.offline.DownloadHelper): void;
								onPrepareError(param0: com.google.android.exoplayer2.offline.DownloadHelper, param1: java.io.IOException): void;
							});
							public constructor();
							public onPrepareError(param0: com.google.android.exoplayer2.offline.DownloadHelper, param1: java.io.IOException): void;
							public onPrepared(param0: com.google.android.exoplayer2.offline.DownloadHelper): void;
						}
						export class DownloadTrackSelection extends com.google.android.exoplayer2.trackselection.BaseTrackSelection {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadHelper.DownloadTrackSelection>;
							public onDiscontinuity(): void;
							public blacklist(param0: number, param1: number): boolean;
							public onPlaybackSpeed(param0: number): void;
							public getSelectionReason(): number;
							public shouldCancelChunkLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
							public getSelectedIndexInTrackGroup(): number;
							public getSelectedFormat(): com.google.android.exoplayer2.Format;
							public constructor(param0: com.google.android.exoplayer2.source.TrackGroup, param1: androidNative.Array<number>);
							public disable(): void;
							public updateSelectedTrack(param0: number, param1: number, param2: number, param3: java.util.List<any>, param4: androidNative.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>): void;
							public getSelectionData(): any;
							public onPlayWhenReadyChanged(param0: boolean): void;
							public getSelectedIndex(): number;
							public enable(): void;
							public onRebuffer(): void;
							public evaluateQueueSize(param0: number, param1: java.util.List<any>): number;
						}
						export module DownloadTrackSelection {
							export class Factory extends com.google.android.exoplayer2.trackselection.ExoTrackSelection.Factory {
								public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadHelper.DownloadTrackSelection.Factory>;
								public createTrackSelections(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection.Definition>, param1: com.google.android.exoplayer2.upstream.BandwidthMeter, param2: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param3: com.google.android.exoplayer2.Timeline): androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>;
							}
						}
						export class FakeBandwidthMeter extends com.google.android.exoplayer2.upstream.BandwidthMeter {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadHelper.FakeBandwidthMeter>;
							public getBitrateEstimate(): number;
							public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
							public removeEventListener(param0: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
							public getTransferListener(): com.google.android.exoplayer2.upstream.TransferListener;
						}
						export class LiveContentUnsupportedException {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadHelper.LiveContentUnsupportedException>;
							public constructor();
						}
						export class MediaPreparer implements com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, com.google.android.exoplayer2.source.MediaPeriod.Callback {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadHelper.MediaPreparer>;
							public timeline: com.google.android.exoplayer2.Timeline;
							public mediaPeriods: androidNative.Array<com.google.android.exoplayer2.source.MediaPeriod>;
							public onSourceInfoRefreshed(param0: com.google.android.exoplayer2.source.MediaSource, param1: com.google.android.exoplayer2.Timeline): void;
							public onContinueLoadingRequested(param0: any): void;
							public handleMessage(param0: globalAndroid.os.Message): boolean;
							public release(): void;
							public onPrepared(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
							public onContinueLoadingRequested(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
							public constructor(param0: com.google.android.exoplayer2.source.MediaSource, param1: com.google.android.exoplayer2.offline.DownloadHelper);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloadIndex {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadIndex>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.offline.DownloadIndex interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getDownload(param0: string): com.google.android.exoplayer2.offline.Download;
							getDownloads(param0: androidNative.Array<number>): com.google.android.exoplayer2.offline.DownloadCursor;
						});
						public constructor();
						public getDownload(param0: string): com.google.android.exoplayer2.offline.Download;
						public getDownloads(param0: androidNative.Array<number>): com.google.android.exoplayer2.offline.DownloadCursor;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloadManager {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadManager>;
						public static DEFAULT_MAX_PARALLEL_DOWNLOADS: number;
						public static DEFAULT_MIN_RETRY_COUNT: number;
						public static DEFAULT_REQUIREMENTS: com.google.android.exoplayer2.scheduler.Requirements;
						public resumeDownloads(): void;
						public addDownload(param0: com.google.android.exoplayer2.offline.DownloadRequest, param1: number): void;
						public setMaxParallelDownloads(param0: number): void;
						public getCurrentDownloads(): java.util.List<com.google.android.exoplayer2.offline.Download>;
						/** @deprecated */
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.database.DatabaseProvider, param2: com.google.android.exoplayer2.upstream.cache.Cache, param3: com.google.android.exoplayer2.upstream.DataSource.Factory);
						public isInitialized(): boolean;
						public getDownloadsPaused(): boolean;
						public getNotMetRequirements(): number;
						public setRequirements(param0: com.google.android.exoplayer2.scheduler.Requirements): void;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.database.DatabaseProvider, param2: com.google.android.exoplayer2.upstream.cache.Cache, param3: com.google.android.exoplayer2.upstream.DataSource.Factory, param4: java.util.concurrent.Executor);
						public setMinRetryCount(param0: number): void;
						public getMinRetryCount(): number;
						public addDownload(param0: com.google.android.exoplayer2.offline.DownloadRequest): void;
						public isWaitingForRequirements(): boolean;
						public getRequirements(): com.google.android.exoplayer2.scheduler.Requirements;
						public release(): void;
						public removeDownload(param0: string): void;
						public isIdle(): boolean;
						public setStopReason(param0: string, param1: number): void;
						public pauseDownloads(): void;
						public getDownloadIndex(): com.google.android.exoplayer2.offline.DownloadIndex;
						public removeAllDownloads(): void;
						public addListener(param0: com.google.android.exoplayer2.offline.DownloadManager.Listener): void;
						public getMaxParallelDownloads(): number;
						public removeListener(param0: com.google.android.exoplayer2.offline.DownloadManager.Listener): void;
						public getApplicationLooper(): globalAndroid.os.Looper;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.offline.WritableDownloadIndex, param2: com.google.android.exoplayer2.offline.DownloaderFactory);
					}
					export module DownloadManager {
						export class DownloadUpdate {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadManager.DownloadUpdate>;
							public download: com.google.android.exoplayer2.offline.Download;
							public isRemove: boolean;
							public downloads: java.util.List<com.google.android.exoplayer2.offline.Download>;
							public finalException: java.lang.Exception;
							public constructor(param0: com.google.android.exoplayer2.offline.Download, param1: boolean, param2: java.util.List<com.google.android.exoplayer2.offline.Download>, param3: java.lang.Exception);
						}
						export class InternalHandler {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadManager.InternalHandler>;
							public released: boolean;
							public constructor(param0: globalAndroid.os.HandlerThread, param1: com.google.android.exoplayer2.offline.WritableDownloadIndex, param2: com.google.android.exoplayer2.offline.DownloaderFactory, param3: globalAndroid.os.Handler, param4: number, param5: number, param6: boolean);
							public handleMessage(param0: globalAndroid.os.Message): void;
						}
						export class Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadManager.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.offline.DownloadManager$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onInitialized(param0: com.google.android.exoplayer2.offline.DownloadManager): void;
								onDownloadsPausedChanged(param0: com.google.android.exoplayer2.offline.DownloadManager, param1: boolean): void;
								onDownloadChanged(param0: com.google.android.exoplayer2.offline.DownloadManager, param1: com.google.android.exoplayer2.offline.Download, param2: java.lang.Exception): void;
								onDownloadRemoved(param0: com.google.android.exoplayer2.offline.DownloadManager, param1: com.google.android.exoplayer2.offline.Download): void;
								onIdle(param0: com.google.android.exoplayer2.offline.DownloadManager): void;
								onRequirementsStateChanged(param0: com.google.android.exoplayer2.offline.DownloadManager, param1: com.google.android.exoplayer2.scheduler.Requirements, param2: number): void;
								onWaitingForRequirementsChanged(param0: com.google.android.exoplayer2.offline.DownloadManager, param1: boolean): void;
							});
							public constructor();
							public onInitialized(param0: com.google.android.exoplayer2.offline.DownloadManager): void;
							public onRequirementsStateChanged(param0: com.google.android.exoplayer2.offline.DownloadManager, param1: com.google.android.exoplayer2.scheduler.Requirements, param2: number): void;
							public onWaitingForRequirementsChanged(param0: com.google.android.exoplayer2.offline.DownloadManager, param1: boolean): void;
							public onIdle(param0: com.google.android.exoplayer2.offline.DownloadManager): void;
							public onDownloadsPausedChanged(param0: com.google.android.exoplayer2.offline.DownloadManager, param1: boolean): void;
							public onDownloadRemoved(param0: com.google.android.exoplayer2.offline.DownloadManager, param1: com.google.android.exoplayer2.offline.Download): void;
							public onDownloadChanged(param0: com.google.android.exoplayer2.offline.DownloadManager, param1: com.google.android.exoplayer2.offline.Download, param2: java.lang.Exception): void;
						}
						export class Task implements com.google.android.exoplayer2.offline.Downloader.ProgressListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadManager.Task>;
							public cancel(param0: boolean): void;
							public onProgress(param0: number, param1: number, param2: number): void;
							public run(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloadProgress {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadProgress>;
						public bytesDownloaded: number;
						public percentDownloaded: number;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloadRequest {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadRequest>;
						public id: string;
						public uri: globalAndroid.net.Uri;
						public mimeType: string;
						public streamKeys: java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
						public keySetId: androidNative.Array<number>;
						public customCacheKey: string;
						public data: androidNative.Array<number>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.offline.DownloadRequest>;
						public copyWithId(param0: string): com.google.android.exoplayer2.offline.DownloadRequest;
						public toMediaItem(): com.google.android.exoplayer2.MediaItem;
						public describeContents(): number;
						public copyWithMergedRequest(param0: com.google.android.exoplayer2.offline.DownloadRequest): com.google.android.exoplayer2.offline.DownloadRequest;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public copyWithKeySetId(param0: androidNative.Array<number>): com.google.android.exoplayer2.offline.DownloadRequest;
						public toString(): string;
					}
					export module DownloadRequest {
						export class Builder {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadRequest.Builder>;
							public build(): com.google.android.exoplayer2.offline.DownloadRequest;
							public constructor(param0: string, param1: globalAndroid.net.Uri);
							public setKeySetId(param0: androidNative.Array<number>): com.google.android.exoplayer2.offline.DownloadRequest.Builder;
							public setMimeType(param0: string): com.google.android.exoplayer2.offline.DownloadRequest.Builder;
							public setData(param0: androidNative.Array<number>): com.google.android.exoplayer2.offline.DownloadRequest.Builder;
							public setStreamKeys(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.offline.DownloadRequest.Builder;
							public setCustomCacheKey(param0: string): com.google.android.exoplayer2.offline.DownloadRequest.Builder;
						}
						export class UnsupportedRequestException {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadRequest.UnsupportedRequestException>;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export abstract class DownloadService {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadService>;
						public static ACTION_INIT: string;
						public static ACTION_ADD_DOWNLOAD: string;
						public static ACTION_REMOVE_DOWNLOAD: string;
						public static ACTION_REMOVE_ALL_DOWNLOADS: string;
						public static ACTION_RESUME_DOWNLOADS: string;
						public static ACTION_PAUSE_DOWNLOADS: string;
						public static ACTION_SET_STOP_REASON: string;
						public static ACTION_SET_REQUIREMENTS: string;
						public static KEY_DOWNLOAD_REQUEST: string;
						public static KEY_CONTENT_ID: string;
						public static KEY_STOP_REASON: string;
						public static KEY_REQUIREMENTS: string;
						public static KEY_FOREGROUND: string;
						public static FOREGROUND_NOTIFICATION_ID_NONE: number;
						public static DEFAULT_FOREGROUND_NOTIFICATION_UPDATE_INTERVAL: number;
						public getDownloadManager(): com.google.android.exoplayer2.offline.DownloadManager;
						public static sendResumeDownloads(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: boolean): void;
						public getScheduler(): com.google.android.exoplayer2.scheduler.Scheduler;
						public static buildAddDownloadIntent(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: com.google.android.exoplayer2.offline.DownloadRequest, param3: boolean): globalAndroid.content.Intent;
						public static sendSetStopReason(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: string, param3: number, param4: boolean): void;
						public static buildPauseDownloadsIntent(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: boolean): globalAndroid.content.Intent;
						public static start(param0: globalAndroid.content.Context, param1: java.lang.Class<any>): void;
						public getForegroundNotification(param0: java.util.List<com.google.android.exoplayer2.offline.Download>): globalAndroid.app.Notification;
						public onDestroy(): void;
						public onTaskRemoved(param0: globalAndroid.content.Intent): void;
						public static buildSetRequirementsIntent(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: com.google.android.exoplayer2.scheduler.Requirements, param3: boolean): globalAndroid.content.Intent;
						public constructor(param0: number, param1: number);
						public static buildRemoveAllDownloadsIntent(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: boolean): globalAndroid.content.Intent;
						/** @deprecated */
						public onDownloadRemoved(param0: com.google.android.exoplayer2.offline.Download): void;
						public static sendSetRequirements(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: com.google.android.exoplayer2.scheduler.Requirements, param3: boolean): void;
						public static buildAddDownloadIntent(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: com.google.android.exoplayer2.offline.DownloadRequest, param3: number, param4: boolean): globalAndroid.content.Intent;
						public static sendRemoveAllDownloads(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: boolean): void;
						public onBind(param0: globalAndroid.content.Intent): globalAndroid.os.IBinder;
						public invalidateForegroundNotification(): void;
						public static buildSetStopReasonIntent(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: string, param3: number, param4: boolean): globalAndroid.content.Intent;
						public static sendAddDownload(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: com.google.android.exoplayer2.offline.DownloadRequest, param3: boolean): void;
						public static buildResumeDownloadsIntent(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: boolean): globalAndroid.content.Intent;
						public static sendPauseDownloads(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: boolean): void;
						public static sendAddDownload(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: com.google.android.exoplayer2.offline.DownloadRequest, param3: number, param4: boolean): void;
						/** @deprecated */
						public onDownloadChanged(param0: com.google.android.exoplayer2.offline.Download): void;
						public static sendRemoveDownload(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: string, param3: boolean): void;
						public constructor(param0: number);
						public static buildRemoveDownloadIntent(param0: globalAndroid.content.Context, param1: java.lang.Class<any>, param2: string, param3: boolean): globalAndroid.content.Intent;
						public onCreate(): void;
						public static startForeground(param0: globalAndroid.content.Context, param1: java.lang.Class<any>): void;
						/** @deprecated */
						public constructor(param0: number, param1: number, param2: string, param3: number);
						public constructor(param0: number, param1: number, param2: string, param3: number, param4: number);
						public onStartCommand(param0: globalAndroid.content.Intent, param1: number, param2: number): number;
					}
					export module DownloadService {
						export class DownloadManagerHelper extends com.google.android.exoplayer2.offline.DownloadManager.Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadService.DownloadManagerHelper>;
							public onInitialized(param0: com.google.android.exoplayer2.offline.DownloadManager): void;
							public onRequirementsStateChanged(param0: com.google.android.exoplayer2.offline.DownloadManager, param1: com.google.android.exoplayer2.scheduler.Requirements, param2: number): void;
							public onWaitingForRequirementsChanged(param0: com.google.android.exoplayer2.offline.DownloadManager, param1: boolean): void;
							public onIdle(param0: com.google.android.exoplayer2.offline.DownloadManager): void;
							public onDownloadsPausedChanged(param0: com.google.android.exoplayer2.offline.DownloadManager, param1: boolean): void;
							public attachService(param0: com.google.android.exoplayer2.offline.DownloadService): void;
							public detachService(param0: com.google.android.exoplayer2.offline.DownloadService): void;
							public onDownloadRemoved(param0: com.google.android.exoplayer2.offline.DownloadManager, param1: com.google.android.exoplayer2.offline.Download): void;
							public onDownloadChanged(param0: com.google.android.exoplayer2.offline.DownloadManager, param1: com.google.android.exoplayer2.offline.Download, param2: java.lang.Exception): void;
						}
						export class ForegroundNotificationUpdater {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloadService.ForegroundNotificationUpdater>;
							public startPeriodicUpdates(): void;
							public stopPeriodicUpdates(): void;
							public constructor(param0: com.google.android.exoplayer2.offline.DownloadService, param1: number, param2: number);
							public invalidate(): void;
							public showNotificationIfNotAlready(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class Downloader {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.Downloader>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.offline.Downloader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							download(param0: com.google.android.exoplayer2.offline.Downloader.ProgressListener): void;
							cancel(): void;
							remove(): void;
						});
						public constructor();
						public cancel(): void;
						public download(param0: com.google.android.exoplayer2.offline.Downloader.ProgressListener): void;
						public remove(): void;
					}
					export module Downloader {
						export class ProgressListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.Downloader.ProgressListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.offline.Downloader$ProgressListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onProgress(param0: number, param1: number, param2: number): void;
							});
							public constructor();
							public onProgress(param0: number, param1: number, param2: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class DownloaderFactory {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.DownloaderFactory>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.offline.DownloaderFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							createDownloader(param0: com.google.android.exoplayer2.offline.DownloadRequest): com.google.android.exoplayer2.offline.Downloader;
						});
						public constructor();
						public createDownloader(param0: com.google.android.exoplayer2.offline.DownloadRequest): com.google.android.exoplayer2.offline.Downloader;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class FilterableManifest<T>  extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.FilterableManifest<any>>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.offline.FilterableManifest<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							copy(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): T;
						});
						public constructor();
						public copy(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): T;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class FilteringManifestParser<T>  extends com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any> {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.FilteringManifestParser<any>>;
						public parse(param0: globalAndroid.net.Uri, param1: java.io.InputStream): any;
						public constructor(param0: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>, param1: java.util.List<com.google.android.exoplayer2.offline.StreamKey>);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class ProgressiveDownloader extends com.google.android.exoplayer2.offline.Downloader {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.ProgressiveDownloader>;
						public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory);
						public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param2: java.util.concurrent.Executor);
						/** @deprecated */
						public constructor(param0: globalAndroid.net.Uri, param1: string, param2: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory);
						/** @deprecated */
						public constructor(param0: globalAndroid.net.Uri, param1: string, param2: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param3: java.util.concurrent.Executor);
						public cancel(): void;
						public download(param0: com.google.android.exoplayer2.offline.Downloader.ProgressListener): void;
						public remove(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export abstract class SegmentDownloader<M>  extends com.google.android.exoplayer2.offline.Downloader {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.SegmentDownloader<any>>;
						public cancel(): void;
						public getManifest(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: boolean): any;
						public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>, param2: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param3: java.util.concurrent.Executor);
						public execute(param0: com.google.android.exoplayer2.util.RunnableFutureTask<any,any>, param1: boolean): any;
						public static getCompressibleDataSpec(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.upstream.DataSpec;
						public download(param0: com.google.android.exoplayer2.offline.Downloader.ProgressListener): void;
						public remove(): void;
						public getSegments(param0: com.google.android.exoplayer2.upstream.DataSource, param1: any, param2: boolean): java.util.List<com.google.android.exoplayer2.offline.SegmentDownloader.Segment>;
					}
					export module SegmentDownloader {
						export class ProgressNotifier extends com.google.android.exoplayer2.upstream.cache.CacheWriter.ProgressListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.SegmentDownloader.ProgressNotifier>;
							public constructor(param0: com.google.android.exoplayer2.offline.Downloader.ProgressListener, param1: number, param2: number, param3: number, param4: number);
							public onProgress(param0: number, param1: number, param2: number): void;
							public onSegmentDownloaded(): void;
						}
						export class Segment extends java.lang.Comparable<com.google.android.exoplayer2.offline.SegmentDownloader.Segment> {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.SegmentDownloader.Segment>;
							public startTimeUs: number;
							public dataSpec: com.google.android.exoplayer2.upstream.DataSpec;
							public constructor(param0: number, param1: com.google.android.exoplayer2.upstream.DataSpec);
							public compareTo(param0: com.google.android.exoplayer2.offline.SegmentDownloader.Segment): number;
						}
						export class SegmentDownloadRunnable extends com.google.android.exoplayer2.util.RunnableFutureTask<java.lang.Void,java.io.IOException> {
							public static class: java.lang.Class<com.google.android.exoplayer2.offline.SegmentDownloader.SegmentDownloadRunnable>;
							public segment: com.google.android.exoplayer2.offline.SegmentDownloader.Segment;
							public dataSource: com.google.android.exoplayer2.upstream.cache.CacheDataSource;
							public temporaryBuffer: androidNative.Array<number>;
							public constructor();
							public doWork(): java.lang.Void;
							public cancelWork(): void;
							public constructor(param0: com.google.android.exoplayer2.offline.SegmentDownloader.Segment, param1: com.google.android.exoplayer2.upstream.cache.CacheDataSource, param2: com.google.android.exoplayer2.offline.SegmentDownloader.ProgressNotifier, param3: androidNative.Array<number>);
							public doWork(): any;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class StreamKey extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.StreamKey>;
						public periodIndex: number;
						public groupIndex: number;
						public trackIndex: number;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.offline.StreamKey>;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public constructor(param0: number, param1: number, param2: number);
						public compareTo(param0: com.google.android.exoplayer2.offline.StreamKey): number;
						public constructor(param0: number, param1: number);
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module offline {
					export class WritableDownloadIndex extends com.google.android.exoplayer2.offline.DownloadIndex {
						public static class: java.lang.Class<com.google.android.exoplayer2.offline.WritableDownloadIndex>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.offline.WritableDownloadIndex interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							putDownload(param0: com.google.android.exoplayer2.offline.Download): void;
							removeDownload(param0: string): void;
							setDownloadingStatesToQueued(): void;
							setStatesToRemoving(): void;
							setStopReason(param0: number): void;
							setStopReason(param0: string, param1: number): void;
							getDownload(param0: string): com.google.android.exoplayer2.offline.Download;
							getDownloads(param0: androidNative.Array<number>): com.google.android.exoplayer2.offline.DownloadCursor;
						});
						public constructor();
						public setStopReason(param0: string, param1: number): void;
						public setDownloadingStatesToQueued(): void;
						public putDownload(param0: com.google.android.exoplayer2.offline.Download): void;
						public getDownload(param0: string): com.google.android.exoplayer2.offline.Download;
						public setStatesToRemoving(): void;
						public getDownloads(param0: androidNative.Array<number>): com.google.android.exoplayer2.offline.DownloadCursor;
						public removeDownload(param0: string): void;
						public setStopReason(param0: number): void;
					}
				}
			}
		}
	}
}



declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module scheduler {
					export class PlatformScheduler extends com.google.android.exoplayer2.scheduler.Scheduler {
						public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.PlatformScheduler>;
						public getSupportedRequirements(param0: com.google.android.exoplayer2.scheduler.Requirements): com.google.android.exoplayer2.scheduler.Requirements;
						public constructor(param0: globalAndroid.content.Context, param1: number);
						public cancel(): boolean;
						public schedule(param0: com.google.android.exoplayer2.scheduler.Requirements, param1: string, param2: string): boolean;
					}
					export module PlatformScheduler {
						export class PlatformSchedulerService {
							public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.PlatformScheduler.PlatformSchedulerService>;
							public constructor();
							public onStopJob(param0: any): boolean;
							public onStartJob(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module scheduler {
					export class Requirements {
						public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.Requirements>;
						public static NETWORK: number;
						public static NETWORK_UNMETERED: number;
						public static DEVICE_IDLE: number;
						public static DEVICE_CHARGING: number;
						public static DEVICE_STORAGE_NOT_LOW: number;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.scheduler.Requirements>;
						public isStorageNotLowRequired(): boolean;
						public describeContents(): number;
						public isIdleRequired(): boolean;
						public isChargingRequired(): boolean;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public isNetworkRequired(): boolean;
						public getRequirements(): number;
						public checkRequirements(param0: globalAndroid.content.Context): boolean;
						public constructor(param0: number);
						public isUnmeteredNetworkRequired(): boolean;
						public getNotMetRequirements(param0: globalAndroid.content.Context): number;
						public filterRequirements(param0: number): com.google.android.exoplayer2.scheduler.Requirements;
					}
					export module Requirements {
						export class RequirementFlags {
							public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.Requirements.RequirementFlags>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.scheduler.Requirements$RequirementFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module scheduler {
					export class RequirementsWatcher {
						public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.RequirementsWatcher>;
						public start(): number;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.scheduler.RequirementsWatcher.Listener, param2: com.google.android.exoplayer2.scheduler.Requirements);
						public getRequirements(): com.google.android.exoplayer2.scheduler.Requirements;
						public stop(): void;
					}
					export module RequirementsWatcher {
						export class DeviceStatusChangeReceiver {
							public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.RequirementsWatcher.DeviceStatusChangeReceiver>;
							public onReceive(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): void;
						}
						export class Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.RequirementsWatcher.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.scheduler.RequirementsWatcher$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onRequirementsStateChanged(param0: com.google.android.exoplayer2.scheduler.RequirementsWatcher, param1: number): void;
							});
							public constructor();
							public onRequirementsStateChanged(param0: com.google.android.exoplayer2.scheduler.RequirementsWatcher, param1: number): void;
						}
						export class NetworkCallback {
							public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.RequirementsWatcher.NetworkCallback>;
							public onLost(param0: globalAndroid.net.Network): void;
							public onBlockedStatusChanged(param0: globalAndroid.net.Network, param1: boolean): void;
							public onAvailable(param0: globalAndroid.net.Network): void;
							public onCapabilitiesChanged(param0: globalAndroid.net.Network, param1: globalAndroid.net.NetworkCapabilities): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module scheduler {
					export class Scheduler {
						public static class: java.lang.Class<com.google.android.exoplayer2.scheduler.Scheduler>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.scheduler.Scheduler interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							schedule(param0: com.google.android.exoplayer2.scheduler.Requirements, param1: string, param2: string): boolean;
							cancel(): boolean;
							getSupportedRequirements(param0: com.google.android.exoplayer2.scheduler.Requirements): com.google.android.exoplayer2.scheduler.Requirements;
						});
						public constructor();
						public getSupportedRequirements(param0: com.google.android.exoplayer2.scheduler.Requirements): com.google.android.exoplayer2.scheduler.Requirements;
						public cancel(): boolean;
						public schedule(param0: com.google.android.exoplayer2.scheduler.Requirements, param1: string, param2: string): boolean;
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export abstract class BaseMediaSource extends com.google.android.exoplayer2.source.MediaSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.BaseMediaSource>;
						public disableInternal(): void;
						public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
						public enableInternal(): void;
						public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public createEventDispatcher(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher;
						public createEventDispatcher(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: number): com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
						public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public isSingleWindow(): boolean;
						public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public createDrmEventDispatcher(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher;
						public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public createDrmEventDispatcher(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher;
						public isEnabled(): boolean;
						public refreshSourceInfo(param0: com.google.android.exoplayer2.Timeline): void;
						public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releaseSourceInternal(): void;
						public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						/** @deprecated */
						public getTag(): any;
						public createEventDispatcher(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: number): com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class BehindLiveWindowException {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.BehindLiveWindowException>;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class BundledExtractorsAdapter extends com.google.android.exoplayer2.source.ProgressiveMediaExtractor {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.BundledExtractorsAdapter>;
						public disableSeekingOnMp3Streams(): void;
						public getCurrentInputPosition(): number;
						public init(param0: com.google.android.exoplayer2.upstream.DataReader, param1: globalAndroid.net.Uri, param2: java.util.Map<string,java.util.List<string>>, param3: number, param4: number, param5: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
						public seek(param0: number, param1: number): void;
						public constructor(param0: com.google.android.exoplayer2.extractor.ExtractorsFactory);
						public release(): void;
						public read(param0: com.google.android.exoplayer2.extractor.PositionHolder): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ClippingMediaPeriod implements com.google.android.exoplayer2.source.MediaPeriod, com.google.android.exoplayer2.source.MediaPeriod.Callback {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ClippingMediaPeriod>;
						public mediaPeriod: com.google.android.exoplayer2.source.MediaPeriod;
						public readDiscontinuity(): number;
						public isLoading(): boolean;
						public selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>, param1: androidNative.Array<boolean>, param2: androidNative.Array<com.google.android.exoplayer2.source.SampleStream>, param3: androidNative.Array<boolean>, param4: number): number;
						public onPrepared(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public continueLoading(param0: number): boolean;
						public discardBuffer(param0: number, param1: boolean): void;
						public constructor(param0: com.google.android.exoplayer2.source.MediaPeriod, param1: boolean, param2: number, param3: number);
						public prepare(param0: com.google.android.exoplayer2.source.MediaPeriod.Callback, param1: number): void;
						public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
						public getNextLoadPositionUs(): number;
						public seekToUs(param0: number): number;
						public onContinueLoadingRequested(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public updateClipping(param0: number, param1: number): void;
						public getBufferedPositionUs(): number;
						public getStreamKeys(param0: java.util.List<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
						public reevaluateBuffer(param0: number): void;
						public onContinueLoadingRequested(param0: any): void;
						public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						public maybeThrowPrepareError(): void;
					}
					export module ClippingMediaPeriod {
						export class ClippingSampleStream extends com.google.android.exoplayer2.source.SampleStream {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ClippingMediaPeriod.ClippingSampleStream>;
							public childStream: com.google.android.exoplayer2.source.SampleStream;
							public readData(param0: com.google.android.exoplayer2.FormatHolder, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param2: boolean): number;
							public clearSentEos(): void;
							public isReady(): boolean;
							public skipData(param0: number): number;
							public constructor(param0: com.google.android.exoplayer2.source.ClippingMediaPeriod, param1: com.google.android.exoplayer2.source.SampleStream);
							public maybeThrowError(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ClippingMediaSource extends com.google.android.exoplayer2.source.CompositeMediaSource<java.lang.Void> {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ClippingMediaSource>;
						public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
						public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public constructor(param0: com.google.android.exoplayer2.source.MediaSource, param1: number);
						public constructor(param0: com.google.android.exoplayer2.source.MediaSource, param1: number, param2: number, param3: boolean, param4: boolean, param5: boolean);
						public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public onChildSourceInfoRefreshed(param0: any, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.Timeline): void;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
						public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public getMediaTimeForChildMediaTime(param0: java.lang.Void, param1: number): number;
						public getMediaTimeForChildMediaTime(param0: any, param1: number): number;
						public isSingleWindow(): boolean;
						public constructor(param0: com.google.android.exoplayer2.source.MediaSource, param1: number, param2: number);
						public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releaseSourceInternal(): void;
						public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						/** @deprecated */
						public getTag(): any;
						public onChildSourceInfoRefreshed(param0: java.lang.Void, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.Timeline): void;
					}
					export module ClippingMediaSource {
						export class ClippingTimeline extends com.google.android.exoplayer2.source.ForwardingTimeline {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ClippingMediaSource.ClippingTimeline>;
							public constructor();
							public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
							public constructor(param0: com.google.android.exoplayer2.Timeline, param1: number, param2: number);
							public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: number): com.google.android.exoplayer2.Timeline.Window;
							public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period, param2: boolean): com.google.android.exoplayer2.Timeline.Period;
							public constructor(param0: com.google.android.exoplayer2.Timeline);
							public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
							/** @deprecated */
							public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: boolean): com.google.android.exoplayer2.Timeline.Window;
						}
						export class IllegalClippingException {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ClippingMediaSource.IllegalClippingException>;
							public static REASON_INVALID_PERIOD_COUNT: number;
							public static REASON_NOT_SEEKABLE_TO_START: number;
							public static REASON_START_EXCEEDS_END: number;
							public reason: number;
							public constructor(param0: number);
						}
						export module IllegalClippingException {
							export class Reason {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ClippingMediaSource.IllegalClippingException.Reason>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.ClippingMediaSource$IllegalClippingException$Reason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export abstract class CompositeMediaSource<T>  extends com.google.android.exoplayer2.source.BaseMediaSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.CompositeMediaSource<any>>;
						public disableInternal(): void;
						public prepareChildSource(param0: any, param1: com.google.android.exoplayer2.source.MediaSource): void;
						public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
						public enableInternal(): void;
						public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
						public releaseChildSource(param0: any): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public onChildSourceInfoRefreshed(param0: any, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.Timeline): void;
						public enableChildSource(param0: any): void;
						public disableChildSource(param0: any): void;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
						public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public getMediaTimeForChildMediaTime(param0: any, param1: number): number;
						public isSingleWindow(): boolean;
						public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releaseSourceInternal(): void;
						public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public getWindowIndexForChildWindowIndex(param0: any, param1: number): number;
						public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public getMediaPeriodIdForChildMediaPeriodId(param0: any, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						/** @deprecated */
						public getTag(): any;
					}
					export module CompositeMediaSource {
						export class ForwardingEventListener implements com.google.android.exoplayer2.source.MediaSourceEventListener, com.google.android.exoplayer2.drm.DrmSessionEventListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.CompositeMediaSource.ForwardingEventListener>;
							public onLoadStarted(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onUpstreamDiscarded(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onDrmKeysRestored(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							public onDrmSessionAcquired(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							public onDrmKeysLoaded(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							public onDrmSessionManagerError(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: java.lang.Exception): void;
							public onLoadCanceled(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onDrmSessionReleased(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							public onDownstreamFormatChanged(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onDrmKeysRemoved(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							public constructor(param0: any);
							public onLoadCompleted(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onLoadError(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData, param4: java.io.IOException, param5: boolean): void;
						}
						export class MediaSourceAndListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.CompositeMediaSource.MediaSourceAndListener>;
							public mediaSource: com.google.android.exoplayer2.source.MediaSource;
							public caller: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller;
							public eventListener: com.google.android.exoplayer2.source.MediaSourceEventListener;
							public constructor(param0: com.google.android.exoplayer2.source.MediaSource, param1: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param2: com.google.android.exoplayer2.source.MediaSourceEventListener);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class CompositeSequenceableLoader extends com.google.android.exoplayer2.source.SequenceableLoader {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.CompositeSequenceableLoader>;
						public loaders: androidNative.Array<com.google.android.exoplayer2.source.SequenceableLoader>;
						public isLoading(): boolean;
						public constructor(param0: androidNative.Array<com.google.android.exoplayer2.source.SequenceableLoader>);
						public getNextLoadPositionUs(): number;
						public getBufferedPositionUs(): number;
						public reevaluateBuffer(param0: number): void;
						public continueLoading(param0: number): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class CompositeSequenceableLoaderFactory {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							createCompositeSequenceableLoader(param0: androidNative.Array<com.google.android.exoplayer2.source.SequenceableLoader>): com.google.android.exoplayer2.source.SequenceableLoader;
						});
						public constructor();
						public createCompositeSequenceableLoader(param0: androidNative.Array<com.google.android.exoplayer2.source.SequenceableLoader>): com.google.android.exoplayer2.source.SequenceableLoader;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ConcatenatingMediaSource extends com.google.android.exoplayer2.source.CompositeMediaSource<com.google.android.exoplayer2.source.ConcatenatingMediaSource.MediaSourceHolder> {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ConcatenatingMediaSource>;
						public disableInternal(): void;
						public removeMediaSourceRange(param0: number, param1: number): void;
						public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
						public constructor(param0: boolean, param1: boolean, param2: com.google.android.exoplayer2.source.ShuffleOrder, param3: androidNative.Array<com.google.android.exoplayer2.source.MediaSource>);
						public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
						public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public onChildSourceInfoRefreshed(param0: any, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.Timeline): void;
						public addMediaSources(param0: number, param1: java.util.Collection<com.google.android.exoplayer2.source.MediaSource>): void;
						public onChildSourceInfoRefreshed(param0: com.google.android.exoplayer2.source.ConcatenatingMediaSource.MediaSourceHolder, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.Timeline): void;
						public getWindowIndexForChildWindowIndex(param0: com.google.android.exoplayer2.source.ConcatenatingMediaSource.MediaSourceHolder, param1: number): number;
						public addMediaSource(param0: com.google.android.exoplayer2.source.MediaSource, param1: globalAndroid.os.Handler, param2: java.lang.Runnable): void;
						public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public isSingleWindow(): boolean;
						public removeMediaSource(param0: number, param1: globalAndroid.os.Handler, param2: java.lang.Runnable): com.google.android.exoplayer2.source.MediaSource;
						public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public getWindowIndexForChildWindowIndex(param0: any, param1: number): number;
						public getSize(): number;
						public getMediaSource(param0: number): com.google.android.exoplayer2.source.MediaSource;
						public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public clear(): void;
						public getMediaPeriodIdForChildMediaPeriodId(param0: any, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public addMediaSource(param0: number, param1: com.google.android.exoplayer2.source.MediaSource, param2: globalAndroid.os.Handler, param3: java.lang.Runnable): void;
						public constructor(param0: boolean, param1: com.google.android.exoplayer2.source.ShuffleOrder, param2: androidNative.Array<com.google.android.exoplayer2.source.MediaSource>);
						public enableInternal(): void;
						public constructor(param0: boolean, param1: androidNative.Array<com.google.android.exoplayer2.source.MediaSource>);
						public moveMediaSource(param0: number, param1: number, param2: globalAndroid.os.Handler, param3: java.lang.Runnable): void;
						public setShuffleOrder(param0: com.google.android.exoplayer2.source.ShuffleOrder): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public getMediaPeriodIdForChildMediaPeriodId(param0: com.google.android.exoplayer2.source.ConcatenatingMediaSource.MediaSourceHolder, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public addMediaSources(param0: java.util.Collection<com.google.android.exoplayer2.source.MediaSource>, param1: globalAndroid.os.Handler, param2: java.lang.Runnable): void;
						public moveMediaSource(param0: number, param1: number): void;
						public addMediaSources(param0: java.util.Collection<com.google.android.exoplayer2.source.MediaSource>): void;
						public addMediaSources(param0: number, param1: java.util.Collection<com.google.android.exoplayer2.source.MediaSource>, param2: globalAndroid.os.Handler, param3: java.lang.Runnable): void;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
						public constructor(param0: androidNative.Array<com.google.android.exoplayer2.source.MediaSource>);
						public addMediaSource(param0: com.google.android.exoplayer2.source.MediaSource): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public clear(param0: globalAndroid.os.Handler, param1: java.lang.Runnable): void;
						public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releaseSourceInternal(): void;
						public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public removeMediaSource(param0: number): com.google.android.exoplayer2.source.MediaSource;
						public addMediaSource(param0: number, param1: com.google.android.exoplayer2.source.MediaSource): void;
						public setShuffleOrder(param0: com.google.android.exoplayer2.source.ShuffleOrder, param1: globalAndroid.os.Handler, param2: java.lang.Runnable): void;
						public removeMediaSourceRange(param0: number, param1: number, param2: globalAndroid.os.Handler, param3: java.lang.Runnable): void;
						/** @deprecated */
						public getTag(): any;
					}
					export module ConcatenatingMediaSource {
						export class ConcatenatedTimeline extends com.google.android.exoplayer2.AbstractConcatenatedTimeline {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ConcatenatingMediaSource.ConcatenatedTimeline>;
							public constructor();
							public getWindowCount(): number;
							public constructor(param0: java.util.Collection<com.google.android.exoplayer2.source.ConcatenatingMediaSource.MediaSourceHolder>, param1: com.google.android.exoplayer2.source.ShuffleOrder, param2: boolean);
							public getChildIndexByPeriodIndex(param0: number): number;
							public getChildIndexByWindowIndex(param0: number): number;
							public getChildUidByChildIndex(param0: number): any;
							public getChildIndexByChildUid(param0: any): number;
							public getTimelineByChildIndex(param0: number): com.google.android.exoplayer2.Timeline;
							public getFirstPeriodIndexByChildIndex(param0: number): number;
							public getFirstWindowIndexByChildIndex(param0: number): number;
							public constructor(param0: boolean, param1: com.google.android.exoplayer2.source.ShuffleOrder);
							public getPeriodCount(): number;
						}
						export class FakeMediaSource extends com.google.android.exoplayer2.source.BaseMediaSource {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ConcatenatingMediaSource.FakeMediaSource>;
							public getMediaItem(): com.google.android.exoplayer2.MediaItem;
							public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public releaseSourceInternal(): void;
							public maybeThrowSourceInfoRefreshError(): void;
							/** @deprecated */
							public getTag(): any;
							public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public isSingleWindow(): boolean;
							public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
							public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
							public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
							public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
							public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
							public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						}
						export class HandlerAndRunnable {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ConcatenatingMediaSource.HandlerAndRunnable>;
							public dispatch(): void;
							public constructor(param0: globalAndroid.os.Handler, param1: java.lang.Runnable);
						}
						export class MediaSourceHolder {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ConcatenatingMediaSource.MediaSourceHolder>;
							public mediaSource: com.google.android.exoplayer2.source.MaskingMediaSource;
							public uid: any;
							public activeMediaPeriodIds: java.util.List<com.google.android.exoplayer2.source.MediaSource.MediaPeriodId>;
							public childIndex: number;
							public firstWindowIndexInChild: number;
							public isRemoved: boolean;
							public constructor(param0: com.google.android.exoplayer2.source.MediaSource, param1: boolean);
							public reset(param0: number, param1: number): void;
						}
						export class MessageData<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ConcatenatingMediaSource.MessageData<any>>;
							public index: number;
							public customData: T;
							public onCompletionAction: com.google.android.exoplayer2.source.ConcatenatingMediaSource.HandlerAndRunnable;
							public constructor(param0: number, param1: T, param2: com.google.android.exoplayer2.source.ConcatenatingMediaSource.HandlerAndRunnable);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class DefaultCompositeSequenceableLoaderFactory extends com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.DefaultCompositeSequenceableLoaderFactory>;
						public constructor();
						public createCompositeSequenceableLoader(param0: androidNative.Array<com.google.android.exoplayer2.source.SequenceableLoader>): com.google.android.exoplayer2.source.SequenceableLoader;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export abstract class DefaultMediaSourceEventListener extends com.google.android.exoplayer2.source.MediaSourceEventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.DefaultMediaSourceEventListener>;
						public onDownstreamFormatChanged(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						public constructor();
						public onLoadStarted(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onUpstreamDiscarded(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadError(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData, param4: java.io.IOException, param5: boolean): void;
						public onLoadCanceled(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadCompleted(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class DefaultMediaSourceFactory extends com.google.android.exoplayer2.source.MediaSourceFactory {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.DefaultMediaSourceFactory>;
						public getSupportedTypes(): androidNative.Array<number>;
						public setLiveMinOffsetMs(param0: number): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						public constructor(param0: globalAndroid.content.Context);
						/** @deprecated */
						public setStreamKeys(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						/** @deprecated */
						public setDrmSessionManager(param0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.MediaSourceFactory;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.extractor.ExtractorsFactory);
						public setDrmSessionManagerProvider(param0: com.google.android.exoplayer2.drm.DrmSessionManagerProvider): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						public setDrmSessionManager(param0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						public setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.MediaSourceFactory;
						public constructor(param0: com.google.android.exoplayer2.upstream.DataSource.Factory, param1: com.google.android.exoplayer2.extractor.ExtractorsFactory);
						public setLiveTargetOffsetMs(param0: number): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						public createMediaSource(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.MediaSource;
						public setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						public setAdsLoaderProvider(param0: com.google.android.exoplayer2.source.DefaultMediaSourceFactory.AdsLoaderProvider): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						/** @deprecated */
						public setDrmHttpDataSourceFactory(param0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.MediaSourceFactory;
						public setLiveMinSpeed(param0: number): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						public setLiveMaxOffsetMs(param0: number): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						public setLiveMaxSpeed(param0: number): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						public setDrmUserAgent(param0: string): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						public setDrmSessionManagerProvider(param0: com.google.android.exoplayer2.drm.DrmSessionManagerProvider): com.google.android.exoplayer2.source.MediaSourceFactory;
						/** @deprecated */
						public setDrmUserAgent(param0: string): com.google.android.exoplayer2.source.MediaSourceFactory;
						public constructor(param0: com.google.android.exoplayer2.upstream.DataSource.Factory);
						public setDrmHttpDataSourceFactory(param0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
						/** @deprecated */
						public createMediaSource(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.MediaSource;
						/** @deprecated */
						public setStreamKeys(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.MediaSourceFactory;
						public setAdViewProvider(param0: com.google.android.exoplayer2.source.ads.AdsLoader.AdViewProvider): com.google.android.exoplayer2.source.DefaultMediaSourceFactory;
					}
					export module DefaultMediaSourceFactory {
						export class AdsLoaderProvider {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.DefaultMediaSourceFactory.AdsLoaderProvider>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.DefaultMediaSourceFactory$AdsLoaderProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getAdsLoader(param0: com.google.android.exoplayer2.MediaItem.AdsConfiguration): com.google.android.exoplayer2.source.ads.AdsLoader;
							});
							public constructor();
							public getAdsLoader(param0: com.google.android.exoplayer2.MediaItem.AdsConfiguration): com.google.android.exoplayer2.source.ads.AdsLoader;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class EmptySampleStream extends com.google.android.exoplayer2.source.SampleStream {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.EmptySampleStream>;
						public readData(param0: com.google.android.exoplayer2.FormatHolder, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param2: boolean): number;
						public constructor();
						public isReady(): boolean;
						public maybeThrowError(): void;
						public skipData(param0: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ExtractorMediaSource extends com.google.android.exoplayer2.source.CompositeMediaSource<java.lang.Void> {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ExtractorMediaSource>;
						public static DEFAULT_LOADING_CHECK_INTERVAL_BYTES: number;
						public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						/** @deprecated */
						public constructor(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.upstream.DataSource.Factory, param2: com.google.android.exoplayer2.extractor.ExtractorsFactory, param3: globalAndroid.os.Handler, param4: com.google.android.exoplayer2.source.ExtractorMediaSource.EventListener, param5: string);
						public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
						public isSingleWindow(): boolean;
						public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
						public maybeThrowSourceInfoRefreshError(): void;
						public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						/** @deprecated */
						public constructor(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.upstream.DataSource.Factory, param2: com.google.android.exoplayer2.extractor.ExtractorsFactory, param3: globalAndroid.os.Handler, param4: com.google.android.exoplayer2.source.ExtractorMediaSource.EventListener);
						public onChildSourceInfoRefreshed(param0: any, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.Timeline): void;
						public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						/** @deprecated */
						public constructor(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.upstream.DataSource.Factory, param2: com.google.android.exoplayer2.extractor.ExtractorsFactory, param3: globalAndroid.os.Handler, param4: com.google.android.exoplayer2.source.ExtractorMediaSource.EventListener, param5: string, param6: number);
						public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						/** @deprecated */
						public getTag(): any;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
						public onChildSourceInfoRefreshed(param0: java.lang.Void, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.Timeline): void;
					}
					export module ExtractorMediaSource {
						export class EventListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ExtractorMediaSource.EventListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.ExtractorMediaSource$EventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onLoadError(param0: java.io.IOException): void;
							});
							public constructor();
							public onLoadError(param0: java.io.IOException): void;
						}
						export class EventListenerWrapper extends com.google.android.exoplayer2.source.MediaSourceEventListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ExtractorMediaSource.EventListenerWrapper>;
							public onLoadStarted(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onUpstreamDiscarded(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onDownstreamFormatChanged(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onLoadCanceled(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
							public constructor(param0: com.google.android.exoplayer2.source.ExtractorMediaSource.EventListener);
							public onLoadError(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData, param4: java.io.IOException, param5: boolean): void;
							public onLoadCompleted(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
						}
						export class Factory extends com.google.android.exoplayer2.source.MediaSourceFactory {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ExtractorMediaSource.Factory>;
							/** @deprecated */
							public setDrmSessionManagerProvider(param0: com.google.android.exoplayer2.drm.DrmSessionManagerProvider): com.google.android.exoplayer2.source.ExtractorMediaSource.Factory;
							/** @deprecated */
							public setTag(param0: any): com.google.android.exoplayer2.source.ExtractorMediaSource.Factory;
							public setCustomCacheKey(param0: string): com.google.android.exoplayer2.source.ExtractorMediaSource.Factory;
							/** @deprecated */
							public setDrmHttpDataSourceFactory(param0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.MediaSourceFactory;
							public setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.MediaSourceFactory;
							public createMediaSource(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.ExtractorMediaSource;
							/** @deprecated */
							public setStreamKeys(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.MediaSourceFactory;
							public setContinueLoadingCheckIntervalBytes(param0: number): com.google.android.exoplayer2.source.ExtractorMediaSource.Factory;
							/** @deprecated */
							public setDrmSessionManager(param0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.MediaSourceFactory;
							public setExtractorsFactory(param0: com.google.android.exoplayer2.extractor.ExtractorsFactory): com.google.android.exoplayer2.source.ExtractorMediaSource.Factory;
							/** @deprecated */
							public setDrmUserAgent(param0: string): com.google.android.exoplayer2.source.MediaSourceFactory;
							/** @deprecated */
							public createMediaSource(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.MediaSource;
							public setDrmSessionManagerProvider(param0: com.google.android.exoplayer2.drm.DrmSessionManagerProvider): com.google.android.exoplayer2.source.MediaSourceFactory;
							public createMediaSource(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.MediaSource;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource.Factory);
							/** @deprecated */
							public createMediaSource(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.ExtractorMediaSource;
							/** @deprecated */
							public setDrmSessionManager(param0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.ExtractorMediaSource.Factory;
							public setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.ExtractorMediaSource.Factory;
							public getSupportedTypes(): androidNative.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export abstract class ForwardingTimeline extends com.google.android.exoplayer2.Timeline {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ForwardingTimeline>;
						public timeline: com.google.android.exoplayer2.Timeline;
						public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
						public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period, param2: boolean): com.google.android.exoplayer2.Timeline.Period;
						public constructor();
						public getWindowCount(): number;
						public getPreviousWindowIndex(param0: number, param1: number, param2: boolean): number;
						/** @deprecated */
						public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: boolean): com.google.android.exoplayer2.Timeline.Window;
						public getIndexOfPeriod(param0: any): number;
						public constructor(param0: com.google.android.exoplayer2.Timeline);
						public getNextWindowIndex(param0: number, param1: number, param2: boolean): number;
						public getLastWindowIndex(param0: boolean): number;
						public getFirstWindowIndex(param0: boolean): number;
						public getUidOfPeriod(param0: number): any;
						public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: number): com.google.android.exoplayer2.Timeline.Window;
						public getPeriodCount(): number;
						public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class IcyDataSource extends com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.IcyDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: number, param2: com.google.android.exoplayer2.source.IcyDataSource.Listener);
						public close(): void;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
					export module IcyDataSource {
						export class Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.IcyDataSource.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.IcyDataSource$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onIcyMetadata(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							});
							public constructor();
							public onIcyMetadata(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class LoadEventInfo {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.LoadEventInfo>;
						public loadTaskId: number;
						public dataSpec: com.google.android.exoplayer2.upstream.DataSpec;
						public uri: globalAndroid.net.Uri;
						public responseHeaders: java.util.Map<string,java.util.List<string>>;
						public elapsedRealtimeMs: number;
						public loadDurationMs: number;
						public bytesLoaded: number;
						public constructor(param0: number, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number);
						public constructor(param0: number, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: globalAndroid.net.Uri, param3: java.util.Map<string,java.util.List<string>>, param4: number, param5: number, param6: number);
						public static getNewId(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class LoopingMediaSource extends com.google.android.exoplayer2.source.CompositeMediaSource<java.lang.Void> {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.LoopingMediaSource>;
						public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
						public isSingleWindow(): boolean;
						public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
						public maybeThrowSourceInfoRefreshError(): void;
						public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public getMediaPeriodIdForChildMediaPeriodId(param0: java.lang.Void, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public constructor(param0: com.google.android.exoplayer2.source.MediaSource, param1: number);
						public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public onChildSourceInfoRefreshed(param0: any, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.Timeline): void;
						public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public constructor(param0: com.google.android.exoplayer2.source.MediaSource);
						public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public getMediaPeriodIdForChildMediaPeriodId(param0: any, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						/** @deprecated */
						public getTag(): any;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
						public onChildSourceInfoRefreshed(param0: java.lang.Void, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.Timeline): void;
					}
					export module LoopingMediaSource {
						export class InfinitelyLoopingTimeline extends com.google.android.exoplayer2.source.ForwardingTimeline {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.LoopingMediaSource.InfinitelyLoopingTimeline>;
							public constructor();
							public getNextWindowIndex(param0: number, param1: number, param2: boolean): number;
							public getPreviousWindowIndex(param0: number, param1: number, param2: boolean): number;
							public constructor(param0: com.google.android.exoplayer2.Timeline);
						}
						export class LoopingTimeline extends com.google.android.exoplayer2.AbstractConcatenatedTimeline {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.LoopingMediaSource.LoopingTimeline>;
							public constructor();
							public getWindowCount(): number;
							public getChildIndexByPeriodIndex(param0: number): number;
							public getChildIndexByWindowIndex(param0: number): number;
							public getChildUidByChildIndex(param0: number): any;
							public getChildIndexByChildUid(param0: any): number;
							public getTimelineByChildIndex(param0: number): com.google.android.exoplayer2.Timeline;
							public getFirstPeriodIndexByChildIndex(param0: number): number;
							public constructor(param0: com.google.android.exoplayer2.Timeline, param1: number);
							public getFirstWindowIndexByChildIndex(param0: number): number;
							public constructor(param0: boolean, param1: com.google.android.exoplayer2.source.ShuffleOrder);
							public getPeriodCount(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MaskingMediaPeriod implements com.google.android.exoplayer2.source.MediaPeriod, com.google.android.exoplayer2.source.MediaPeriod.Callback {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MaskingMediaPeriod>;
						public id: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public isLoading(): boolean;
						public getPreparePositionUs(): number;
						public setMediaSource(param0: com.google.android.exoplayer2.source.MediaSource): void;
						public selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>, param1: androidNative.Array<boolean>, param2: androidNative.Array<com.google.android.exoplayer2.source.SampleStream>, param3: androidNative.Array<boolean>, param4: number): number;
						public onPrepared(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public overridePreparePositionUs(param0: number): void;
						public prepare(param0: com.google.android.exoplayer2.source.MediaPeriod.Callback, param1: number): void;
						public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
						public getNextLoadPositionUs(): number;
						public releasePeriod(): void;
						public getStreamKeys(param0: java.util.List<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
						public reevaluateBuffer(param0: number): void;
						public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						public constructor(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number);
						public setPrepareListener(param0: com.google.android.exoplayer2.source.MaskingMediaPeriod.PrepareListener): void;
						public readDiscontinuity(): number;
						public continueLoading(param0: number): boolean;
						public getPreparePositionOverrideUs(): number;
						public discardBuffer(param0: number, param1: boolean): void;
						public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
						public seekToUs(param0: number): number;
						public onContinueLoadingRequested(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public getBufferedPositionUs(): number;
						public onContinueLoadingRequested(param0: any): void;
						public maybeThrowPrepareError(): void;
					}
					export module MaskingMediaPeriod {
						export class PrepareListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MaskingMediaPeriod.PrepareListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.MaskingMediaPeriod$PrepareListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPrepareComplete(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
								onPrepareError(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: java.io.IOException): void;
							});
							public constructor();
							public onPrepareComplete(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							public onPrepareError(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: java.io.IOException): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MaskingMediaSource extends com.google.android.exoplayer2.source.CompositeMediaSource<java.lang.Void> {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MaskingMediaSource>;
						public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
						public constructor(param0: com.google.android.exoplayer2.source.MediaSource, param1: boolean);
						public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
						public getTimeline(): com.google.android.exoplayer2.Timeline;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public onChildSourceInfoRefreshed(param0: any, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.Timeline): void;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
						public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public isSingleWindow(): boolean;
						public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public getMediaPeriodIdForChildMediaPeriodId(param0: java.lang.Void, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releaseSourceInternal(): void;
						public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public getMediaPeriodIdForChildMediaPeriodId(param0: any, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						/** @deprecated */
						public getTag(): any;
						public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MaskingMediaPeriod;
						public onChildSourceInfoRefreshed(param0: java.lang.Void, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.Timeline): void;
					}
					export module MaskingMediaSource {
						export class MaskingTimeline extends com.google.android.exoplayer2.source.ForwardingTimeline {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MaskingMediaSource.MaskingTimeline>;
							public static MASKING_EXTERNAL_PERIOD_UID: any;
							public static createWithPlaceholderTimeline(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.MaskingMediaSource.MaskingTimeline;
							public getIndexOfPeriod(param0: any): number;
							public cloneWithUpdatedTimeline(param0: com.google.android.exoplayer2.Timeline): com.google.android.exoplayer2.source.MaskingMediaSource.MaskingTimeline;
							public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
							public static createWithRealTimeline(param0: com.google.android.exoplayer2.Timeline, param1: any, param2: any): com.google.android.exoplayer2.source.MaskingMediaSource.MaskingTimeline;
							public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: number): com.google.android.exoplayer2.Timeline.Window;
							public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period, param2: boolean): com.google.android.exoplayer2.Timeline.Period;
							public getUidOfPeriod(param0: number): any;
							public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
							public getTimeline(): com.google.android.exoplayer2.Timeline;
							/** @deprecated */
							public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: boolean): com.google.android.exoplayer2.Timeline.Window;
						}
						export class PlaceholderTimeline extends com.google.android.exoplayer2.Timeline {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MaskingMediaSource.PlaceholderTimeline>;
							public constructor();
							public getWindowCount(): number;
							public getIndexOfPeriod(param0: any): number;
							public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
							public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: number): com.google.android.exoplayer2.Timeline.Window;
							public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period, param2: boolean): com.google.android.exoplayer2.Timeline.Period;
							public constructor(param0: com.google.android.exoplayer2.MediaItem);
							public getPeriodCount(): number;
							public getUidOfPeriod(param0: number): any;
							public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
							/** @deprecated */
							public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: boolean): com.google.android.exoplayer2.Timeline.Window;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MediaLoadData {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaLoadData>;
						public dataType: number;
						public trackType: number;
						public trackFormat: com.google.android.exoplayer2.Format;
						public trackSelectionReason: number;
						public trackSelectionData: any;
						public mediaStartTimeMs: number;
						public mediaEndTimeMs: number;
						public constructor(param0: number, param1: number, param2: com.google.android.exoplayer2.Format, param3: number, param4: any, param5: number, param6: number);
						public constructor(param0: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MediaParserExtractorAdapter extends com.google.android.exoplayer2.source.ProgressiveMediaExtractor {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaParserExtractorAdapter>;
						public disableSeekingOnMp3Streams(): void;
						public getCurrentInputPosition(): number;
						public constructor();
						public init(param0: com.google.android.exoplayer2.upstream.DataReader, param1: globalAndroid.net.Uri, param2: java.util.Map<string,java.util.List<string>>, param3: number, param4: number, param5: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
						public seek(param0: number, param1: number): void;
						public release(): void;
						public read(param0: com.google.android.exoplayer2.extractor.PositionHolder): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MediaPeriod extends com.google.android.exoplayer2.source.SequenceableLoader {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaPeriod>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.MediaPeriod interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							prepare(param0: com.google.android.exoplayer2.source.MediaPeriod.Callback, param1: number): void;
							maybeThrowPrepareError(): void;
							getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
							getStreamKeys(param0: java.util.List<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
							selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>, param1: androidNative.Array<boolean>, param2: androidNative.Array<com.google.android.exoplayer2.source.SampleStream>, param3: androidNative.Array<boolean>, param4: number): number;
							discardBuffer(param0: number, param1: boolean): void;
							readDiscontinuity(): number;
							seekToUs(param0: number): number;
							getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
							getBufferedPositionUs(): number;
							getNextLoadPositionUs(): number;
							continueLoading(param0: number): boolean;
							isLoading(): boolean;
							reevaluateBuffer(param0: number): void;
							getBufferedPositionUs(): number;
							getNextLoadPositionUs(): number;
							continueLoading(param0: number): boolean;
							isLoading(): boolean;
							reevaluateBuffer(param0: number): void;
						});
						public constructor();
						public readDiscontinuity(): number;
						public isLoading(): boolean;
						public selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>, param1: androidNative.Array<boolean>, param2: androidNative.Array<com.google.android.exoplayer2.source.SampleStream>, param3: androidNative.Array<boolean>, param4: number): number;
						public continueLoading(param0: number): boolean;
						public discardBuffer(param0: number, param1: boolean): void;
						public prepare(param0: com.google.android.exoplayer2.source.MediaPeriod.Callback, param1: number): void;
						public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
						public getNextLoadPositionUs(): number;
						public seekToUs(param0: number): number;
						public getStreamKeys(param0: java.util.List<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
						public getBufferedPositionUs(): number;
						public reevaluateBuffer(param0: number): void;
						public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						public maybeThrowPrepareError(): void;
					}
					export module MediaPeriod {
						export class Callback extends com.google.android.exoplayer2.source.SequenceableLoader.Callback<com.google.android.exoplayer2.source.MediaPeriod> {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaPeriod.Callback>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.MediaPeriod$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onPrepared(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
								onContinueLoadingRequested(param0: any): void;
							});
							public constructor();
							public onContinueLoadingRequested(param0: any): void;
							public onPrepared(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MediaPeriodId {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaPeriodId>;
						public periodUid: any;
						public adGroupIndex: number;
						public adIndexInAdGroup: number;
						public windowSequenceNumber: number;
						public nextAdGroupIndex: number;
						public isAd(): boolean;
						public constructor(param0: any, param1: number, param2: number);
						public constructor(param0: any, param1: number, param2: number, param3: number);
						public copyWithPeriodUid(param0: any): com.google.android.exoplayer2.source.MediaPeriodId;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public constructor(param0: com.google.android.exoplayer2.source.MediaPeriodId);
						public constructor(param0: any);
						public constructor(param0: any, param1: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MediaSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaSource>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.MediaSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							getInitialTimeline(): com.google.android.exoplayer2.Timeline;
							isSingleWindow(): boolean;
							getTag(): any;
							getMediaItem(): com.google.android.exoplayer2.MediaItem;
							prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
							maybeThrowSourceInfoRefreshError(): void;
							enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
							releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
							disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						});
						public constructor();
						public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
						public isSingleWindow(): boolean;
						public maybeThrowSourceInfoRefreshError(): void;
						public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
						public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						/** @deprecated */
						public getTag(): any;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
					}
					export module MediaSource {
						export class MediaPeriodId extends com.google.android.exoplayer2.source.MediaPeriodId {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaSource.MediaPeriodId>;
							public copyWithPeriodUid(param0: any): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public constructor(param0: com.google.android.exoplayer2.source.MediaPeriodId);
							public copyWithPeriodUid(param0: any): com.google.android.exoplayer2.source.MediaPeriodId;
							public constructor(param0: any, param1: number, param2: number, param3: number);
							public constructor(param0: any);
							public constructor(param0: any, param1: number, param2: number);
							public constructor(param0: any, param1: number);
						}
						export class MediaSourceCaller {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.MediaSource$MediaSourceCaller interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onSourceInfoRefreshed(param0: com.google.android.exoplayer2.source.MediaSource, param1: com.google.android.exoplayer2.Timeline): void;
							});
							public constructor();
							public onSourceInfoRefreshed(param0: com.google.android.exoplayer2.source.MediaSource, param1: com.google.android.exoplayer2.Timeline): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MediaSourceEventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaSourceEventListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.MediaSourceEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onLoadStarted(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
							onLoadCompleted(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
							onLoadCanceled(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
							onLoadError(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData, param4: java.io.IOException, param5: boolean): void;
							onUpstreamDiscarded(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
							onDownstreamFormatChanged(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						});
						public constructor();
						public onDownstreamFormatChanged(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadStarted(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onUpstreamDiscarded(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadError(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData, param4: java.io.IOException, param5: boolean): void;
						public onLoadCanceled(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onLoadCompleted(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: com.google.android.exoplayer2.source.LoadEventInfo, param3: com.google.android.exoplayer2.source.MediaLoadData): void;
					}
					export module MediaSourceEventListener {
						export class EventDispatcher {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher>;
							public windowIndex: number;
							public mediaPeriodId: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public constructor();
							public loadStarted(param0: com.google.android.exoplayer2.source.LoadEventInfo, param1: number): void;
							public loadCompleted(param0: com.google.android.exoplayer2.source.LoadEventInfo, param1: com.google.android.exoplayer2.source.MediaLoadData): void;
							public downstreamFormatChanged(param0: number, param1: com.google.android.exoplayer2.Format, param2: number, param3: any, param4: number): void;
							public withParameters(param0: number, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param2: number): com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher;
							public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public downstreamFormatChanged(param0: com.google.android.exoplayer2.source.MediaLoadData): void;
							public loadStarted(param0: com.google.android.exoplayer2.source.LoadEventInfo, param1: number, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: any, param6: number, param7: number): void;
							public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public loadError(param0: com.google.android.exoplayer2.source.LoadEventInfo, param1: com.google.android.exoplayer2.source.MediaLoadData, param2: java.io.IOException, param3: boolean): void;
							public upstreamDiscarded(param0: com.google.android.exoplayer2.source.MediaLoadData): void;
							public upstreamDiscarded(param0: number, param1: number, param2: number): void;
							public loadCanceled(param0: com.google.android.exoplayer2.source.LoadEventInfo, param1: number, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: any, param6: number, param7: number): void;
							public loadError(param0: com.google.android.exoplayer2.source.LoadEventInfo, param1: number, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: any, param6: number, param7: number, param8: java.io.IOException, param9: boolean): void;
							public loadStarted(param0: com.google.android.exoplayer2.source.LoadEventInfo, param1: com.google.android.exoplayer2.source.MediaLoadData): void;
							public loadCanceled(param0: com.google.android.exoplayer2.source.LoadEventInfo, param1: number): void;
							public loadCanceled(param0: com.google.android.exoplayer2.source.LoadEventInfo, param1: com.google.android.exoplayer2.source.MediaLoadData): void;
							public loadCompleted(param0: com.google.android.exoplayer2.source.LoadEventInfo, param1: number, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: any, param6: number, param7: number): void;
							public loadError(param0: com.google.android.exoplayer2.source.LoadEventInfo, param1: number, param2: java.io.IOException, param3: boolean): void;
							public loadCompleted(param0: com.google.android.exoplayer2.source.LoadEventInfo, param1: number): void;
						}
						export module EventDispatcher {
							export class ListenerAndHandler {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher.ListenerAndHandler>;
								public handler: globalAndroid.os.Handler;
								public listener: com.google.android.exoplayer2.source.MediaSourceEventListener;
								public constructor(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MediaSourceFactory {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MediaSourceFactory>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.MediaSourceFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setStreamKeys(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.MediaSourceFactory;
							setDrmSessionManagerProvider(param0: com.google.android.exoplayer2.drm.DrmSessionManagerProvider): com.google.android.exoplayer2.source.MediaSourceFactory;
							setDrmSessionManager(param0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.MediaSourceFactory;
							setDrmHttpDataSourceFactory(param0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.MediaSourceFactory;
							setDrmUserAgent(param0: string): com.google.android.exoplayer2.source.MediaSourceFactory;
							setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.MediaSourceFactory;
							getSupportedTypes(): androidNative.Array<number>;
							createMediaSource(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.MediaSource;
							createMediaSource(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.MediaSource;
						});
						public constructor();
						public getSupportedTypes(): androidNative.Array<number>;
						public setDrmSessionManagerProvider(param0: com.google.android.exoplayer2.drm.DrmSessionManagerProvider): com.google.android.exoplayer2.source.MediaSourceFactory;
						/** @deprecated */
						public setDrmUserAgent(param0: string): com.google.android.exoplayer2.source.MediaSourceFactory;
						/** @deprecated */
						public createMediaSource(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.MediaSource;
						public createMediaSource(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.MediaSource;
						/** @deprecated */
						public setStreamKeys(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.MediaSourceFactory;
						/** @deprecated */
						public setDrmHttpDataSourceFactory(param0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.MediaSourceFactory;
						public setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.MediaSourceFactory;
						/** @deprecated */
						public setDrmSessionManager(param0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.MediaSourceFactory;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MergingMediaPeriod implements com.google.android.exoplayer2.source.MediaPeriod, com.google.android.exoplayer2.source.MediaPeriod.Callback {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MergingMediaPeriod>;
						public readDiscontinuity(): number;
						public isLoading(): boolean;
						public selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>, param1: androidNative.Array<boolean>, param2: androidNative.Array<com.google.android.exoplayer2.source.SampleStream>, param3: androidNative.Array<boolean>, param4: number): number;
						public onPrepared(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public continueLoading(param0: number): boolean;
						public constructor(param0: com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory, param1: androidNative.Array<number>, param2: androidNative.Array<com.google.android.exoplayer2.source.MediaPeriod>);
						public discardBuffer(param0: number, param1: boolean): void;
						public getChildPeriod(param0: number): com.google.android.exoplayer2.source.MediaPeriod;
						public prepare(param0: com.google.android.exoplayer2.source.MediaPeriod.Callback, param1: number): void;
						public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
						public getNextLoadPositionUs(): number;
						public seekToUs(param0: number): number;
						public onContinueLoadingRequested(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public getBufferedPositionUs(): number;
						public getStreamKeys(param0: java.util.List<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
						public reevaluateBuffer(param0: number): void;
						public onContinueLoadingRequested(param0: any): void;
						public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						public maybeThrowPrepareError(): void;
					}
					export module MergingMediaPeriod {
						export class TimeOffsetMediaPeriod implements com.google.android.exoplayer2.source.MediaPeriod, com.google.android.exoplayer2.source.MediaPeriod.Callback {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MergingMediaPeriod.TimeOffsetMediaPeriod>;
							public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
							public selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>, param1: androidNative.Array<boolean>, param2: androidNative.Array<com.google.android.exoplayer2.source.SampleStream>, param3: androidNative.Array<boolean>, param4: number): number;
							public onContinueLoadingRequested(param0: any): void;
							public getStreamKeys(param0: java.util.List<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
							public isLoading(): boolean;
							public continueLoading(param0: number): boolean;
							public onContinueLoadingRequested(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
							public maybeThrowPrepareError(): void;
							public getBufferedPositionUs(): number;
							public seekToUs(param0: number): number;
							public getNextLoadPositionUs(): number;
							public prepare(param0: com.google.android.exoplayer2.source.MediaPeriod.Callback, param1: number): void;
							public discardBuffer(param0: number, param1: boolean): void;
							public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
							public readDiscontinuity(): number;
							public onPrepared(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
							public constructor(param0: com.google.android.exoplayer2.source.MediaPeriod, param1: number);
							public reevaluateBuffer(param0: number): void;
						}
						export class TimeOffsetSampleStream extends com.google.android.exoplayer2.source.SampleStream {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MergingMediaPeriod.TimeOffsetSampleStream>;
							public readData(param0: com.google.android.exoplayer2.FormatHolder, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param2: boolean): number;
							public constructor(param0: com.google.android.exoplayer2.source.SampleStream, param1: number);
							public isReady(): boolean;
							public skipData(param0: number): number;
							public getChildStream(): com.google.android.exoplayer2.source.SampleStream;
							public maybeThrowError(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class MergingMediaSource extends com.google.android.exoplayer2.source.CompositeMediaSource<java.lang.Integer> {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.MergingMediaSource>;
						public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
						public constructor(param0: boolean, param1: androidNative.Array<com.google.android.exoplayer2.source.MediaSource>);
						public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public onChildSourceInfoRefreshed(param0: java.lang.Integer, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.Timeline): void;
						public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public onChildSourceInfoRefreshed(param0: any, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.Timeline): void;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
						public constructor(param0: androidNative.Array<com.google.android.exoplayer2.source.MediaSource>);
						public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public isSingleWindow(): boolean;
						public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public constructor(param0: boolean, param1: boolean, param2: com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory, param3: androidNative.Array<com.google.android.exoplayer2.source.MediaSource>);
						public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releaseSourceInternal(): void;
						public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public constructor(param0: boolean, param1: boolean, param2: androidNative.Array<com.google.android.exoplayer2.source.MediaSource>);
						public getMediaPeriodIdForChildMediaPeriodId(param0: java.lang.Integer, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public getMediaPeriodIdForChildMediaPeriodId(param0: any, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
						public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						/** @deprecated */
						public getTag(): any;
					}
					export module MergingMediaSource {
						export class ClippedTimeline extends com.google.android.exoplayer2.source.ForwardingTimeline {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MergingMediaSource.ClippedTimeline>;
							public constructor();
							public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
							public constructor(param0: com.google.android.exoplayer2.Timeline, param1: java.util.Map<any,java.lang.Long>);
							public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: number): com.google.android.exoplayer2.Timeline.Window;
							public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period, param2: boolean): com.google.android.exoplayer2.Timeline.Period;
							public constructor(param0: com.google.android.exoplayer2.Timeline);
							public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
							/** @deprecated */
							public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: boolean): com.google.android.exoplayer2.Timeline.Window;
						}
						export class IllegalMergeException {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.MergingMediaSource.IllegalMergeException>;
							public static REASON_PERIOD_COUNT_MISMATCH: number;
							public reason: number;
							public constructor(param0: number);
						}
						export module IllegalMergeException {
							export class Reason {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.MergingMediaSource.IllegalMergeException.Reason>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.MergingMediaSource$IllegalMergeException$Reason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ProgressiveMediaExtractor {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaExtractor>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.ProgressiveMediaExtractor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							init(param0: com.google.android.exoplayer2.upstream.DataReader, param1: globalAndroid.net.Uri, param2: java.util.Map<string,java.util.List<string>>, param3: number, param4: number, param5: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							release(): void;
							disableSeekingOnMp3Streams(): void;
							getCurrentInputPosition(): number;
							seek(param0: number, param1: number): void;
							read(param0: com.google.android.exoplayer2.extractor.PositionHolder): number;
						});
						public constructor();
						public disableSeekingOnMp3Streams(): void;
						public getCurrentInputPosition(): number;
						public init(param0: com.google.android.exoplayer2.upstream.DataReader, param1: globalAndroid.net.Uri, param2: java.util.Map<string,java.util.List<string>>, param3: number, param4: number, param5: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
						public seek(param0: number, param1: number): void;
						public release(): void;
						public read(param0: com.google.android.exoplayer2.extractor.PositionHolder): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ProgressiveMediaPeriod extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaPeriod>;
						public isLoading(): boolean;
						public constructor(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.upstream.DataSource, param2: com.google.android.exoplayer2.extractor.ExtractorsFactory, param3: com.google.android.exoplayer2.drm.DrmSessionManager, param4: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher, param5: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy, param6: com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher, param7: com.google.android.exoplayer2.source.ProgressiveMediaPeriod.Listener, param8: com.google.android.exoplayer2.upstream.Allocator, param9: string, param10: number);
						public selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>, param1: androidNative.Array<boolean>, param2: androidNative.Array<com.google.android.exoplayer2.source.SampleStream>, param3: androidNative.Array<boolean>, param4: number): number;
						public endTracks(): void;
						public onLoaderReleased(): void;
						public onLoadCompleted(param0: any, param1: number, param2: number): void;
						public onUpstreamFormatChanged(param0: com.google.android.exoplayer2.Format): void;
						public onLoadError(param0: any, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public prepare(param0: com.google.android.exoplayer2.source.MediaPeriod.Callback, param1: number): void;
						public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
						public getNextLoadPositionUs(): number;
						public onLoadCompleted(param0: com.google.android.exoplayer2.source.ProgressiveMediaPeriod.ExtractingLoadable, param1: number, param2: number): void;
						public getStreamKeys(param0: java.util.List<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
						public reevaluateBuffer(param0: number): void;
						public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						public onLoadCanceled(param0: com.google.android.exoplayer2.source.ProgressiveMediaPeriod.ExtractingLoadable, param1: number, param2: number, param3: boolean): void;
						public readDiscontinuity(): number;
						public track(param0: number, param1: number): com.google.android.exoplayer2.extractor.TrackOutput;
						public seekMap(param0: com.google.android.exoplayer2.extractor.SeekMap): void;
						public release(): void;
						public continueLoading(param0: number): boolean;
						public discardBuffer(param0: number, param1: boolean): void;
						public onLoadError(param0: com.google.android.exoplayer2.source.ProgressiveMediaPeriod.ExtractingLoadable, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public seekToUs(param0: number): number;
						public getBufferedPositionUs(): number;
						public maybeThrowPrepareError(): void;
						public onLoadCanceled(param0: any, param1: number, param2: number, param3: boolean): void;
					}
					export module ProgressiveMediaPeriod {
						export class ExtractingLoadable implements com.google.android.exoplayer2.upstream.Loader.Loadable, com.google.android.exoplayer2.source.IcyDataSource.Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaPeriod.ExtractingLoadable>;
							public constructor(param0: com.google.android.exoplayer2.source.ProgressiveMediaPeriod, param1: globalAndroid.net.Uri, param2: com.google.android.exoplayer2.upstream.DataSource, param3: com.google.android.exoplayer2.source.ProgressiveMediaExtractor, param4: com.google.android.exoplayer2.extractor.ExtractorOutput, param5: com.google.android.exoplayer2.util.ConditionVariable);
							public cancelLoad(): void;
							public onIcyMetadata(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public load(): void;
						}
						export class Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaPeriod.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.ProgressiveMediaPeriod$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onSourceInfoRefreshed(param0: number, param1: boolean, param2: boolean): void;
							});
							public constructor();
							public onSourceInfoRefreshed(param0: number, param1: boolean, param2: boolean): void;
						}
						export class SampleStreamImpl extends com.google.android.exoplayer2.source.SampleStream {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaPeriod.SampleStreamImpl>;
							public readData(param0: com.google.android.exoplayer2.FormatHolder, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param2: boolean): number;
							public isReady(): boolean;
							public skipData(param0: number): number;
							public constructor(param0: com.google.android.exoplayer2.source.ProgressiveMediaPeriod, param1: number);
							public maybeThrowError(): void;
						}
						export class TrackId {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaPeriod.TrackId>;
							public id: number;
							public isIcyTrack: boolean;
							public constructor(param0: number, param1: boolean);
							public hashCode(): number;
							public equals(param0: any): boolean;
						}
						export class TrackState {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaPeriod.TrackState>;
							public tracks: com.google.android.exoplayer2.source.TrackGroupArray;
							public trackIsAudioVideoFlags: androidNative.Array<boolean>;
							public trackEnabledStates: androidNative.Array<boolean>;
							public trackNotifiedDownstreamFormats: androidNative.Array<boolean>;
							public constructor(param0: com.google.android.exoplayer2.source.TrackGroupArray, param1: androidNative.Array<boolean>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ProgressiveMediaSource extends com.google.android.exoplayer2.source.BaseMediaSource implements com.google.android.exoplayer2.source.ProgressiveMediaPeriod.Listener {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaSource>;
						public static DEFAULT_LOADING_CHECK_INTERVAL_BYTES: number;
						public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
						public onSourceInfoRefreshed(param0: number, param1: boolean, param2: boolean): void;
						public isSingleWindow(): boolean;
						public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
						public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releaseSourceInternal(): void;
						public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						/** @deprecated */
						public getTag(): any;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
					}
					export module ProgressiveMediaSource {
						export class Factory extends com.google.android.exoplayer2.source.MediaSourceFactory {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory>;
							/** @deprecated */
							public createMediaSource(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.ProgressiveMediaSource;
							/** @deprecated */
							public setExtractorsFactory(param0: com.google.android.exoplayer2.extractor.ExtractorsFactory): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							public setDrmHttpDataSourceFactory(param0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							public createMediaSource(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.ProgressiveMediaSource;
							/** @deprecated */
							public setTag(param0: any): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							/** @deprecated */
							public setDrmHttpDataSourceFactory(param0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.MediaSourceFactory;
							public setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.MediaSourceFactory;
							/** @deprecated */
							public setStreamKeys(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.MediaSourceFactory;
							public setDrmSessionManager(param0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource.Factory, param1: com.google.android.exoplayer2.extractor.ExtractorsFactory);
							/** @deprecated */
							public setDrmSessionManager(param0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.MediaSourceFactory;
							/** @deprecated */
							public setDrmUserAgent(param0: string): com.google.android.exoplayer2.source.MediaSourceFactory;
							/** @deprecated */
							public createMediaSource(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.MediaSource;
							public setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							public setDrmSessionManagerProvider(param0: com.google.android.exoplayer2.drm.DrmSessionManagerProvider): com.google.android.exoplayer2.source.MediaSourceFactory;
							public createMediaSource(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.MediaSource;
							public setDrmSessionManagerProvider(param0: com.google.android.exoplayer2.drm.DrmSessionManagerProvider): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource.Factory);
							/** @deprecated */
							public setCustomCacheKey(param0: string): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							public setContinueLoadingCheckIntervalBytes(param0: number): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							public setDrmUserAgent(param0: string): com.google.android.exoplayer2.source.ProgressiveMediaSource.Factory;
							public getSupportedTypes(): androidNative.Array<number>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SampleDataQueue {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SampleDataQueue>;
						public rewind(): void;
						public sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): void;
						public peekToBuffer(param0: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param1: com.google.android.exoplayer2.source.SampleQueue.SampleExtrasHolder): void;
						public discardDownstreamTo(param0: number): void;
						public readToBuffer(param0: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param1: com.google.android.exoplayer2.source.SampleQueue.SampleExtrasHolder): void;
						public getTotalBytesWritten(): number;
						public discardUpstreamSampleBytes(param0: number): void;
						public constructor(param0: com.google.android.exoplayer2.upstream.Allocator);
						public reset(): void;
						public sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean): number;
					}
					export module SampleDataQueue {
						export class AllocationNode {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SampleDataQueue.AllocationNode>;
							public startPosition: number;
							public endPosition: number;
							public wasInitialized: boolean;
							public allocation: com.google.android.exoplayer2.upstream.Allocation;
							public next: com.google.android.exoplayer2.source.SampleDataQueue.AllocationNode;
							public translateOffset(param0: number): number;
							public constructor(param0: number, param1: number);
							public initialize(param0: com.google.android.exoplayer2.upstream.Allocation, param1: com.google.android.exoplayer2.source.SampleDataQueue.AllocationNode): void;
							public clear(): com.google.android.exoplayer2.source.SampleDataQueue.AllocationNode;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SampleQueue extends com.google.android.exoplayer2.extractor.TrackOutput {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SampleQueue>;
						public getWriteIndex(): number;
						public getReadIndex(): number;
						public peekSourceId(): number;
						public read(param0: com.google.android.exoplayer2.FormatHolder, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param2: boolean, param3: boolean): number;
						public discardSampleMetadataToRead(): number;
						public skip(param0: number): void;
						public invalidateUpstreamFormatAdjustment(): void;
						public sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): void;
						public getFirstTimestampUs(): number;
						public getFirstIndex(): number;
						public preRelease(): void;
						public getUpstreamFormat(): com.google.android.exoplayer2.Format;
						public getLargestQueuedTimestampUs(): number;
						public sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean, param3: number): number;
						public constructor(param0: com.google.android.exoplayer2.upstream.Allocator, param1: globalAndroid.os.Looper, param2: com.google.android.exoplayer2.drm.DrmSessionManager, param3: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher);
						public peek(param0: com.google.android.exoplayer2.FormatHolder, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param2: boolean, param3: boolean): number;
						public discardTo(param0: number, param1: boolean, param2: boolean): void;
						public sourceId(param0: number): void;
						public discardToRead(): void;
						public setStartTimeUs(param0: number): void;
						public seekTo(param0: number): boolean;
						public getAdjustedUpstreamFormat(param0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.Format;
						public format(param0: com.google.android.exoplayer2.Format): void;
						public discardUpstreamSamples(param0: number): void;
						public isLastSampleQueued(): boolean;
						public release(): void;
						public setSampleOffsetUs(param0: number): void;
						public isReady(param0: boolean): boolean;
						public getSkipCount(param0: number, param1: boolean): number;
						public discardUpstreamFrom(param0: number): void;
						public static createWithoutDrm(param0: com.google.android.exoplayer2.upstream.Allocator): com.google.android.exoplayer2.source.SampleQueue;
						public sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean): number;
						public reset(param0: boolean): void;
						public getLargestReadTimestampUs(): number;
						public seekTo(param0: number, param1: boolean): boolean;
						public setUpstreamFormatChangeListener(param0: com.google.android.exoplayer2.source.SampleQueue.UpstreamFormatChangedListener): void;
						public discardToEnd(): void;
						public sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number, param2: number): void;
						public splice(): void;
						public maybeThrowError(): void;
						public static createWithDrm(param0: com.google.android.exoplayer2.upstream.Allocator, param1: globalAndroid.os.Looper, param2: com.google.android.exoplayer2.drm.DrmSessionManager, param3: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher): com.google.android.exoplayer2.source.SampleQueue;
						public reset(): void;
						public sampleMetadata(param0: number, param1: number, param2: number, param3: number, param4: com.google.android.exoplayer2.extractor.TrackOutput.CryptoData): void;
					}
					export module SampleQueue {
						export class SampleExtrasHolder {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SampleQueue.SampleExtrasHolder>;
							public size: number;
							public offset: number;
							public cryptoData: com.google.android.exoplayer2.extractor.TrackOutput.CryptoData;
						}
						export class UpstreamFormatChangedListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SampleQueue.UpstreamFormatChangedListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.SampleQueue$UpstreamFormatChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onUpstreamFormatChanged(param0: com.google.android.exoplayer2.Format): void;
							});
							public constructor();
							public onUpstreamFormatChanged(param0: com.google.android.exoplayer2.Format): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SampleStream {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SampleStream>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.SampleStream interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							isReady(): boolean;
							maybeThrowError(): void;
							readData(param0: com.google.android.exoplayer2.FormatHolder, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param2: boolean): number;
							skipData(param0: number): number;
						});
						public constructor();
						public readData(param0: com.google.android.exoplayer2.FormatHolder, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param2: boolean): number;
						public isReady(): boolean;
						public maybeThrowError(): void;
						public skipData(param0: number): number;
					}
					export module SampleStream {
						export class ReadDataResult {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SampleStream.ReadDataResult>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.SampleStream$ReadDataResult interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SequenceableLoader {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SequenceableLoader>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.SequenceableLoader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getBufferedPositionUs(): number;
							getNextLoadPositionUs(): number;
							continueLoading(param0: number): boolean;
							isLoading(): boolean;
							reevaluateBuffer(param0: number): void;
						});
						public constructor();
						public isLoading(): boolean;
						public getNextLoadPositionUs(): number;
						public getBufferedPositionUs(): number;
						public reevaluateBuffer(param0: number): void;
						public continueLoading(param0: number): boolean;
					}
					export module SequenceableLoader {
						export class Callback<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SequenceableLoader.Callback<any>>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.SequenceableLoader$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onContinueLoadingRequested(param0: T): void;
							});
							public constructor();
							public onContinueLoadingRequested(param0: T): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class ShuffleOrder {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.ShuffleOrder>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.source.ShuffleOrder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getLength(): number;
							getNextIndex(param0: number): number;
							getPreviousIndex(param0: number): number;
							getLastIndex(): number;
							getFirstIndex(): number;
							cloneAndInsert(param0: number, param1: number): com.google.android.exoplayer2.source.ShuffleOrder;
							cloneAndRemove(param0: number, param1: number): com.google.android.exoplayer2.source.ShuffleOrder;
							cloneAndClear(): com.google.android.exoplayer2.source.ShuffleOrder;
						});
						public constructor();
						public getPreviousIndex(param0: number): number;
						public cloneAndInsert(param0: number, param1: number): com.google.android.exoplayer2.source.ShuffleOrder;
						public getLastIndex(): number;
						public getNextIndex(param0: number): number;
						public cloneAndRemove(param0: number, param1: number): com.google.android.exoplayer2.source.ShuffleOrder;
						public getLength(): number;
						public getFirstIndex(): number;
						public cloneAndClear(): com.google.android.exoplayer2.source.ShuffleOrder;
					}
					export module ShuffleOrder {
						export class DefaultShuffleOrder extends com.google.android.exoplayer2.source.ShuffleOrder {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ShuffleOrder.DefaultShuffleOrder>;
							public getLength(): number;
							public cloneAndRemove(param0: number, param1: number): com.google.android.exoplayer2.source.ShuffleOrder;
							public constructor(param0: number, param1: number);
							public getLastIndex(): number;
							public getNextIndex(param0: number): number;
							public constructor(param0: androidNative.Array<number>, param1: number);
							public getFirstIndex(): number;
							public cloneAndInsert(param0: number, param1: number): com.google.android.exoplayer2.source.ShuffleOrder;
							public cloneAndClear(): com.google.android.exoplayer2.source.ShuffleOrder;
							public getPreviousIndex(param0: number): number;
							public constructor(param0: number);
						}
						export class UnshuffledShuffleOrder extends com.google.android.exoplayer2.source.ShuffleOrder {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ShuffleOrder.UnshuffledShuffleOrder>;
							public getLength(): number;
							public cloneAndRemove(param0: number, param1: number): com.google.android.exoplayer2.source.ShuffleOrder;
							public getLastIndex(): number;
							public getNextIndex(param0: number): number;
							public getFirstIndex(): number;
							public cloneAndInsert(param0: number, param1: number): com.google.android.exoplayer2.source.ShuffleOrder;
							public cloneAndClear(): com.google.android.exoplayer2.source.ShuffleOrder;
							public getPreviousIndex(param0: number): number;
							public constructor(param0: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SilenceMediaSource extends com.google.android.exoplayer2.source.BaseMediaSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SilenceMediaSource>;
						public static MEDIA_ID: string;
						public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public constructor();
						public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
						public isSingleWindow(): boolean;
						public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
						public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releaseSourceInternal(): void;
						public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public constructor(param0: number);
						public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						/** @deprecated */
						public getTag(): any;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
					}
					export module SilenceMediaSource {
						export class Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SilenceMediaSource.Factory>;
							public constructor();
							public createMediaSource(): com.google.android.exoplayer2.source.SilenceMediaSource;
							public setTag(param0: any): com.google.android.exoplayer2.source.SilenceMediaSource.Factory;
							public setDurationUs(param0: number): com.google.android.exoplayer2.source.SilenceMediaSource.Factory;
						}
						export class SilenceMediaPeriod extends com.google.android.exoplayer2.source.MediaPeriod {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SilenceMediaSource.SilenceMediaPeriod>;
							public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
							public selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>, param1: androidNative.Array<boolean>, param2: androidNative.Array<com.google.android.exoplayer2.source.SampleStream>, param3: androidNative.Array<boolean>, param4: number): number;
							public getStreamKeys(param0: java.util.List<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
							public isLoading(): boolean;
							public continueLoading(param0: number): boolean;
							public constructor(param0: number);
							public maybeThrowPrepareError(): void;
							public getBufferedPositionUs(): number;
							public seekToUs(param0: number): number;
							public getNextLoadPositionUs(): number;
							public prepare(param0: com.google.android.exoplayer2.source.MediaPeriod.Callback, param1: number): void;
							public discardBuffer(param0: number, param1: boolean): void;
							public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
							public readDiscontinuity(): number;
							public reevaluateBuffer(param0: number): void;
						}
						export class SilenceSampleStream extends com.google.android.exoplayer2.source.SampleStream {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SilenceMediaSource.SilenceSampleStream>;
							public readData(param0: com.google.android.exoplayer2.FormatHolder, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param2: boolean): number;
							public isReady(): boolean;
							public skipData(param0: number): number;
							public maybeThrowError(): void;
							public constructor(param0: number);
							public seekTo(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SinglePeriodTimeline extends com.google.android.exoplayer2.Timeline {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SinglePeriodTimeline>;
						public constructor(param0: number, param1: boolean, param2: boolean, param3: boolean, param4: any, param5: com.google.android.exoplayer2.MediaItem);
						/** @deprecated */
						public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: boolean, param8: boolean, param9: boolean, param10: any, param11: any);
						public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
						public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period, param2: boolean): com.google.android.exoplayer2.Timeline.Period;
						public constructor();
						/** @deprecated */
						public constructor(param0: number, param1: number, param2: number, param3: number, param4: boolean, param5: boolean, param6: boolean, param7: any, param8: any);
						public constructor(param0: number, param1: number, param2: number, param3: number, param4: boolean, param5: boolean, param6: boolean, param7: any, param8: com.google.android.exoplayer2.MediaItem);
						public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: boolean, param8: boolean, param9: any, param10: com.google.android.exoplayer2.MediaItem, param11: com.google.android.exoplayer2.MediaItem.LiveConfiguration);
						public getWindowCount(): number;
						/** @deprecated */
						public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: boolean): com.google.android.exoplayer2.Timeline.Window;
						public getIndexOfPeriod(param0: any): number;
						public getUidOfPeriod(param0: number): any;
						/** @deprecated */
						public constructor(param0: number, param1: boolean, param2: boolean, param3: boolean, param4: any, param5: any);
						public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: number): com.google.android.exoplayer2.Timeline.Window;
						public getPeriodCount(): number;
						public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SingleSampleMediaPeriod extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SingleSampleMediaPeriod>;
						public readDiscontinuity(): number;
						public isLoading(): boolean;
						public selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>, param1: androidNative.Array<boolean>, param2: androidNative.Array<com.google.android.exoplayer2.source.SampleStream>, param3: androidNative.Array<boolean>, param4: number): number;
						public release(): void;
						public continueLoading(param0: number): boolean;
						public onLoadCompleted(param0: any, param1: number, param2: number): void;
						public onLoadError(param0: any, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public discardBuffer(param0: number, param1: boolean): void;
						public prepare(param0: com.google.android.exoplayer2.source.MediaPeriod.Callback, param1: number): void;
						public onLoadCanceled(param0: com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable, param1: number, param2: number, param3: boolean): void;
						public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
						public getNextLoadPositionUs(): number;
						public seekToUs(param0: number): number;
						public constructor(param0: com.google.android.exoplayer2.upstream.DataSpec, param1: com.google.android.exoplayer2.upstream.DataSource.Factory, param2: com.google.android.exoplayer2.upstream.TransferListener, param3: com.google.android.exoplayer2.Format, param4: number, param5: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy, param6: com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher, param7: boolean);
						public getBufferedPositionUs(): number;
						public onLoadError(param0: com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public getStreamKeys(param0: java.util.List<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
						public reevaluateBuffer(param0: number): void;
						public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
						public onLoadCompleted(param0: com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable, param1: number, param2: number): void;
						public maybeThrowPrepareError(): void;
						public onLoadCanceled(param0: any, param1: number, param2: number, param3: boolean): void;
					}
					export module SingleSampleMediaPeriod {
						export class SampleStreamImpl extends com.google.android.exoplayer2.source.SampleStream {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SampleStreamImpl>;
							public readData(param0: com.google.android.exoplayer2.FormatHolder, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param2: boolean): number;
							public isReady(): boolean;
							public skipData(param0: number): number;
							public maybeThrowError(): void;
							public reset(): void;
						}
						export class SourceLoadable extends com.google.android.exoplayer2.upstream.Loader.Loadable {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SingleSampleMediaPeriod.SourceLoadable>;
							public loadTaskId: number;
							public dataSpec: com.google.android.exoplayer2.upstream.DataSpec;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSpec, param1: com.google.android.exoplayer2.upstream.DataSource);
							public cancelLoad(): void;
							public load(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class SingleSampleMediaSource extends com.google.android.exoplayer2.source.BaseMediaSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.SingleSampleMediaSource>;
						public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
						public isSingleWindow(): boolean;
						public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public maybeThrowSourceInfoRefreshError(): void;
						public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
						public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
						public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releaseSourceInternal(): void;
						public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
						public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
						public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
						/** @deprecated */
						public getTag(): any;
						public getMediaItem(): com.google.android.exoplayer2.MediaItem;
					}
					export module SingleSampleMediaSource {
						export class Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.SingleSampleMediaSource.Factory>;
							/** @deprecated */
							public createMediaSource(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.Format, param2: number): com.google.android.exoplayer2.source.SingleSampleMediaSource;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource.Factory);
							public setTag(param0: any): com.google.android.exoplayer2.source.SingleSampleMediaSource.Factory;
							public createMediaSource(param0: com.google.android.exoplayer2.MediaItem.Subtitle, param1: number): com.google.android.exoplayer2.source.SingleSampleMediaSource;
							public setTrackId(param0: string): com.google.android.exoplayer2.source.SingleSampleMediaSource.Factory;
							public setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.SingleSampleMediaSource.Factory;
							public setTreatLoadErrorsAsEndOfStream(param0: boolean): com.google.android.exoplayer2.source.SingleSampleMediaSource.Factory;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class TrackGroup {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.TrackGroup>;
						public length: number;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.source.TrackGroup>;
						public constructor(param0: androidNative.Array<com.google.android.exoplayer2.Format>);
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getFormat(param0: number): com.google.android.exoplayer2.Format;
						public indexOf(param0: com.google.android.exoplayer2.Format): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class TrackGroupArray {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.TrackGroupArray>;
						public static EMPTY: com.google.android.exoplayer2.source.TrackGroupArray;
						public length: number;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.source.TrackGroupArray>;
						public describeContents(): number;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public isEmpty(): boolean;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public constructor(param0: androidNative.Array<com.google.android.exoplayer2.source.TrackGroup>);
						public indexOf(param0: com.google.android.exoplayer2.source.TrackGroup): number;
						public get(param0: number): com.google.android.exoplayer2.source.TrackGroup;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export class UnrecognizedInputFormatException extends com.google.android.exoplayer2.ParserException {
						public static class: java.lang.Class<com.google.android.exoplayer2.source.UnrecognizedInputFormatException>;
						public uri: globalAndroid.net.Uri;
						public constructor();
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: globalAndroid.net.Uri);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module ads {
						export class AdPlaybackState {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdPlaybackState>;
							public static AD_STATE_UNAVAILABLE: number;
							public static AD_STATE_AVAILABLE: number;
							public static AD_STATE_SKIPPED: number;
							public static AD_STATE_PLAYED: number;
							public static AD_STATE_ERROR: number;
							public static NONE: com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public adsId: any;
							public adGroupCount: number;
							public adGroupTimesUs: androidNative.Array<number>;
							public adGroups: androidNative.Array<com.google.android.exoplayer2.source.ads.AdPlaybackState.AdGroup>;
							public adResumePositionUs: number;
							public contentDurationUs: number;
							public constructor(param0: any, param1: androidNative.Array<number>);
							public withSkippedAdGroup(param0: number): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public withAdCount(param0: number, param1: number): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public withSkippedAd(param0: number, param1: number): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public withContentDurationUs(param0: number): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public withPlayedAd(param0: number, param1: number): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public hashCode(): number;
							public withAdUri(param0: number, param1: number, param2: globalAndroid.net.Uri): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public withAdDurationsUs(param0: androidNative.Array<native.Array<number>>): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public withAdResumePositionUs(param0: number): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public toString(): string;
							public withAdLoadError(param0: number, param1: number): com.google.android.exoplayer2.source.ads.AdPlaybackState;
							public getAdGroupIndexAfterPositionUs(param0: number, param1: number): number;
							public isAdInErrorState(param0: number, param1: number): boolean;
							public getAdGroupIndexForPositionUs(param0: number, param1: number): number;
							public equals(param0: any): boolean;
						}
						export module AdPlaybackState {
							export class AdGroup {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdPlaybackState.AdGroup>;
								public count: number;
								public uris: androidNative.Array<globalAndroid.net.Uri>;
								public states: androidNative.Array<number>;
								public durationsUs: androidNative.Array<number>;
								public getNextAdIndexToPlay(param0: number): number;
								public withAdDurationsUs(param0: androidNative.Array<number>): com.google.android.exoplayer2.source.ads.AdPlaybackState.AdGroup;
								public equals(param0: any): boolean;
								public withAllAdsSkipped(): com.google.android.exoplayer2.source.ads.AdPlaybackState.AdGroup;
								public getFirstAdIndexToPlay(): number;
								public hasUnplayedAds(): boolean;
								public withAdUri(param0: globalAndroid.net.Uri, param1: number): com.google.android.exoplayer2.source.ads.AdPlaybackState.AdGroup;
								public constructor();
								public withAdCount(param0: number): com.google.android.exoplayer2.source.ads.AdPlaybackState.AdGroup;
								public withAdState(param0: number, param1: number): com.google.android.exoplayer2.source.ads.AdPlaybackState.AdGroup;
								public hashCode(): number;
							}
							export class AdState {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdPlaybackState.AdState>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.ads.AdPlaybackState$AdState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module ads {
						export class AdsLoader {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsLoader>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.ads.AdsLoader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								setPlayer(param0: com.google.android.exoplayer2.Player): void;
								release(): void;
								setSupportedContentTypes(param0: androidNative.Array<number>): void;
								start(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: any, param3: com.google.android.exoplayer2.source.ads.AdsLoader.AdViewProvider, param4: com.google.android.exoplayer2.source.ads.AdsLoader.EventListener): void;
								stop(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource, param1: com.google.android.exoplayer2.source.ads.AdsLoader.EventListener): void;
								handlePrepareComplete(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource, param1: number, param2: number): void;
								handlePrepareError(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource, param1: number, param2: number, param3: java.io.IOException): void;
							});
							public constructor();
							public stop(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource, param1: com.google.android.exoplayer2.source.ads.AdsLoader.EventListener): void;
							public setPlayer(param0: com.google.android.exoplayer2.Player): void;
							public start(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: any, param3: com.google.android.exoplayer2.source.ads.AdsLoader.AdViewProvider, param4: com.google.android.exoplayer2.source.ads.AdsLoader.EventListener): void;
							public release(): void;
							public handlePrepareError(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource, param1: number, param2: number, param3: java.io.IOException): void;
							public setSupportedContentTypes(param0: androidNative.Array<number>): void;
							public handlePrepareComplete(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource, param1: number, param2: number): void;
						}
						export module AdsLoader {
							export class AdViewProvider {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsLoader.AdViewProvider>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.ads.AdsLoader$AdViewProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									getAdViewGroup(): globalAndroid.view.ViewGroup;
									getAdOverlayViews(): androidNative.Array<globalAndroid.view.View>;
									getAdOverlayInfos(): java.util.List<com.google.android.exoplayer2.source.ads.AdsLoader.OverlayInfo>;
								});
								public constructor();
								public getAdOverlayInfos(): java.util.List<com.google.android.exoplayer2.source.ads.AdsLoader.OverlayInfo>;
								/** @deprecated */
								public getAdOverlayViews(): androidNative.Array<globalAndroid.view.View>;
								public getAdViewGroup(): globalAndroid.view.ViewGroup;
							}
							export class EventListener {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsLoader.EventListener>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.ads.AdsLoader$EventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onAdPlaybackState(param0: com.google.android.exoplayer2.source.ads.AdPlaybackState): void;
									onAdLoadError(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException, param1: com.google.android.exoplayer2.upstream.DataSpec): void;
									onAdClicked(): void;
									onAdTapped(): void;
								});
								public constructor();
								public onAdPlaybackState(param0: com.google.android.exoplayer2.source.ads.AdPlaybackState): void;
								public onAdLoadError(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException, param1: com.google.android.exoplayer2.upstream.DataSpec): void;
								public onAdClicked(): void;
								public onAdTapped(): void;
							}
							export class OverlayInfo {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsLoader.OverlayInfo>;
								public static PURPOSE_CONTROLS: number;
								public static PURPOSE_CLOSE_AD: number;
								public static PURPOSE_OTHER: number;
								public static PURPOSE_NOT_VISIBLE: number;
								public view: globalAndroid.view.View;
								public purpose: number;
								public reasonDetail: string;
								public constructor(param0: globalAndroid.view.View, param1: number);
								public constructor(param0: globalAndroid.view.View, param1: number, param2: string);
							}
							export module OverlayInfo {
								export class Purpose {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsLoader.OverlayInfo.Purpose>;
									/**
									 * Constructs a new instance of the com.google.android.exoplayer2.source.ads.AdsLoader$OverlayInfo$Purpose interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
									});
									public constructor();
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module ads {
						export class AdsMediaSource extends com.google.android.exoplayer2.source.CompositeMediaSource<com.google.android.exoplayer2.source.MediaSource.MediaPeriodId> {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsMediaSource>;
							public constructor();
							public getMediaPeriodIdForChildMediaPeriodId(param0: any, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public getMediaItem(): com.google.android.exoplayer2.MediaItem;
							public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public releaseSourceInternal(): void;
							/** @deprecated */
							public getTag(): any;
							public maybeThrowSourceInfoRefreshError(): void;
							public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public constructor(param0: com.google.android.exoplayer2.source.MediaSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: any, param3: com.google.android.exoplayer2.source.MediaSourceFactory, param4: com.google.android.exoplayer2.source.ads.AdsLoader, param5: com.google.android.exoplayer2.source.ads.AdsLoader.AdViewProvider);
							public isSingleWindow(): boolean;
							public onChildSourceInfoRefreshed(param0: any, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.Timeline): void;
							public onChildSourceInfoRefreshed(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.source.MediaSource, param2: com.google.android.exoplayer2.Timeline): void;
							public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
							public getMediaPeriodIdForChildMediaPeriodId(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): com.google.android.exoplayer2.source.MediaSource.MediaPeriodId;
							public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
							public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
							public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
							public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
							public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						}
						export module AdsMediaSource {
							export class AdLoadException {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException>;
								public static TYPE_AD: number;
								public static TYPE_AD_GROUP: number;
								public static TYPE_ALL_ADS: number;
								public static TYPE_UNEXPECTED: number;
								public type: number;
								public static createForAdGroup(param0: java.lang.Exception, param1: number): com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException;
								public static createForUnexpected(param0: java.lang.RuntimeException): com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException;
								public static createForAd(param0: java.lang.Exception): com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException;
								public static createForAllAds(param0: java.lang.Exception): com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException;
								public getRuntimeExceptionForUnexpected(): java.lang.RuntimeException;
							}
							export module AdLoadException {
								export class Type {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException.Type>;
									/**
									 * Constructs a new instance of the com.google.android.exoplayer2.source.ads.AdsMediaSource$AdLoadException$Type interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
									});
									public constructor();
								}
							}
							export class AdMediaSourceHolder {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsMediaSource.AdMediaSourceHolder>;
								public getDurationUs(): number;
								public createMediaPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
								public hasMediaSource(): boolean;
								public isInactive(): boolean;
								public handleSourceInfoRefresh(param0: com.google.android.exoplayer2.Timeline): void;
								public constructor(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource, param1: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId);
								public releaseMediaPeriod(param0: com.google.android.exoplayer2.source.MaskingMediaPeriod): void;
								public release(): void;
								public initializeWithMediaSource(param0: com.google.android.exoplayer2.source.MediaSource, param1: globalAndroid.net.Uri): void;
							}
							export class AdPrepareListener extends com.google.android.exoplayer2.source.MaskingMediaPeriod.PrepareListener {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsMediaSource.AdPrepareListener>;
								public onPrepareError(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: java.io.IOException): void;
								public constructor(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource, param1: globalAndroid.net.Uri);
								public onPrepareComplete(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId): void;
							}
							export class ComponentListener extends com.google.android.exoplayer2.source.ads.AdsLoader.EventListener {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.AdsMediaSource.ComponentListener>;
								public constructor(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource);
								public onAdPlaybackState(param0: com.google.android.exoplayer2.source.ads.AdPlaybackState): void;
								public onAdLoadError(param0: com.google.android.exoplayer2.source.ads.AdsMediaSource.AdLoadException, param1: com.google.android.exoplayer2.upstream.DataSpec): void;
								public onAdClicked(): void;
								public onAdTapped(): void;
								public stop(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module ads {
						export class SinglePeriodAdTimeline extends com.google.android.exoplayer2.source.ForwardingTimeline {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.ads.SinglePeriodAdTimeline>;
							public constructor();
							public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period, param2: boolean): com.google.android.exoplayer2.Timeline.Period;
							public constructor(param0: com.google.android.exoplayer2.Timeline);
							public constructor(param0: com.google.android.exoplayer2.Timeline, param1: com.google.android.exoplayer2.source.ads.AdPlaybackState);
							public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export abstract class BaseMediaChunk extends com.google.android.exoplayer2.source.chunk.MediaChunk {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.BaseMediaChunk>;
							public clippedStartTimeUs: number;
							public clippedEndTimeUs: number;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: com.google.android.exoplayer2.Format, param3: number, param4: any, param5: number, param6: number, param7: number);
							public cancelLoad(): void;
							public init(param0: com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput): void;
							public load(): void;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: any, param6: number, param7: number);
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: com.google.android.exoplayer2.Format, param3: number, param4: any, param5: number, param6: number, param7: number, param8: number, param9: number);
							public getFirstSampleIndex(param0: number): number;
							public getOutput(): com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export abstract class BaseMediaChunkIterator extends com.google.android.exoplayer2.source.chunk.MediaChunkIterator {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.BaseMediaChunkIterator>;
							public isEnded(): boolean;
							public checkInBounds(): void;
							public getCurrentIndex(): number;
							public constructor(param0: number, param1: number);
							public getChunkEndTimeUs(): number;
							public getChunkStartTimeUs(): number;
							public next(): boolean;
							public getDataSpec(): com.google.android.exoplayer2.upstream.DataSpec;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class BaseMediaChunkOutput extends com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput>;
							public constructor(param0: androidNative.Array<number>, param1: androidNative.Array<com.google.android.exoplayer2.source.SampleQueue>);
							public getWriteIndices(): androidNative.Array<number>;
							public track(param0: number, param1: number): com.google.android.exoplayer2.extractor.TrackOutput;
							public setSampleOffsetUs(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class BundledChunkExtractor implements com.google.android.exoplayer2.extractor.ExtractorOutput, com.google.android.exoplayer2.source.chunk.ChunkExtractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.BundledChunkExtractor>;
							public init(param0: com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider, param1: number, param2: number): void;
							public getChunkIndex(): com.google.android.exoplayer2.extractor.ChunkIndex;
							public getSampleFormats(): androidNative.Array<com.google.android.exoplayer2.Format>;
							public track(param0: number, param1: number): com.google.android.exoplayer2.extractor.TrackOutput;
							public release(): void;
							public constructor(param0: com.google.android.exoplayer2.extractor.Extractor, param1: number, param2: com.google.android.exoplayer2.Format);
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public endTracks(): void;
							public seekMap(param0: com.google.android.exoplayer2.extractor.SeekMap): void;
						}
						export module BundledChunkExtractor {
							export class BindingTrackOutput extends com.google.android.exoplayer2.extractor.TrackOutput {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.BundledChunkExtractor.BindingTrackOutput>;
								public sampleFormat: com.google.android.exoplayer2.Format;
								public bind(param0: com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider, param1: number): void;
								public sampleMetadata(param0: number, param1: number, param2: number, param3: number, param4: com.google.android.exoplayer2.extractor.TrackOutput.CryptoData): void;
								public sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean): number;
								public sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number, param2: number): void;
								public sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): void;
								public constructor(param0: number, param1: number, param2: com.google.android.exoplayer2.Format);
								public format(param0: com.google.android.exoplayer2.Format): void;
								public sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean, param3: number): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export abstract class Chunk extends com.google.android.exoplayer2.upstream.Loader.Loadable {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.Chunk>;
							public loadTaskId: number;
							public dataSpec: com.google.android.exoplayer2.upstream.DataSpec;
							public type: number;
							public trackFormat: com.google.android.exoplayer2.Format;
							public trackSelectionReason: number;
							public trackSelectionData: any;
							public startTimeUs: number;
							public endTimeUs: number;
							public dataSource: com.google.android.exoplayer2.upstream.StatsDataSource;
							public cancelLoad(): void;
							public getUri(): globalAndroid.net.Uri;
							public getDurationUs(): number;
							public load(): void;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: any, param6: number, param7: number);
							public bytesLoaded(): number;
							public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class ChunkExtractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ChunkExtractor>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.chunk.ChunkExtractor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getChunkIndex(): com.google.android.exoplayer2.extractor.ChunkIndex;
								getSampleFormats(): androidNative.Array<com.google.android.exoplayer2.Format>;
								init(param0: com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider, param1: number, param2: number): void;
								release(): void;
								read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							});
							public constructor();
							public init(param0: com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider, param1: number, param2: number): void;
							public getChunkIndex(): com.google.android.exoplayer2.extractor.ChunkIndex;
							public getSampleFormats(): androidNative.Array<com.google.android.exoplayer2.Format>;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
						}
						export module ChunkExtractor {
							export class TrackOutputProvider {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.chunk.ChunkExtractor$TrackOutputProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									track(param0: number, param1: number): com.google.android.exoplayer2.extractor.TrackOutput;
								});
								public constructor();
								public track(param0: number, param1: number): com.google.android.exoplayer2.extractor.TrackOutput;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class ChunkHolder {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ChunkHolder>;
							public chunk: com.google.android.exoplayer2.source.chunk.Chunk;
							public endOfStream: boolean;
							public constructor();
							public clear(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class ChunkSampleStream<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ChunkSampleStream<any>>;
							public primaryTrackType: number;
							public onLoadCanceled(param0: com.google.android.exoplayer2.source.chunk.Chunk, param1: number, param2: number, param3: boolean): void;
							public selectEmbeddedTrack(param0: number, param1: number): com.google.android.exoplayer2.source.chunk.ChunkSampleStream.EmbeddedSampleStream;
							public onLoadError(param0: T, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							public isReady(): boolean;
							public isLoading(): boolean;
							public skipData(param0: number): number;
							public release(): void;
							public continueLoading(param0: number): boolean;
							public constructor(param0: number, param1: androidNative.Array<number>, param2: androidNative.Array<com.google.android.exoplayer2.Format>, param3: T, param4: com.google.android.exoplayer2.source.SequenceableLoader.Callback<com.google.android.exoplayer2.source.chunk.ChunkSampleStream<T>>, param5: com.google.android.exoplayer2.upstream.Allocator, param6: number, param7: com.google.android.exoplayer2.drm.DrmSessionManager, param8: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher, param9: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy, param10: com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher);
							public onLoadCanceled(param0: T, param1: number, param2: number, param3: boolean): void;
							public getChunkSource(): T;
							public getBufferedPositionUs(): number;
							public readData(param0: com.google.android.exoplayer2.FormatHolder, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param2: boolean): number;
							public getNextLoadPositionUs(): number;
							public release(param0: com.google.android.exoplayer2.source.chunk.ChunkSampleStream.ReleaseCallback<T>): void;
							public onLoadError(param0: com.google.android.exoplayer2.source.chunk.Chunk, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							public discardBuffer(param0: number, param1: boolean): void;
							public seekToUs(param0: number): void;
							public onLoaderReleased(): void;
							public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
							public onLoadCompleted(param0: com.google.android.exoplayer2.source.chunk.Chunk, param1: number, param2: number): void;
							public onLoadCompleted(param0: T, param1: number, param2: number): void;
							public maybeThrowError(): void;
							public reevaluateBuffer(param0: number): void;
						}
						export module ChunkSampleStream {
							export class EmbeddedSampleStream extends com.google.android.exoplayer2.source.SampleStream {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ChunkSampleStream.EmbeddedSampleStream>;
								public parent: com.google.android.exoplayer2.source.chunk.ChunkSampleStream<any>;
								public readData(param0: com.google.android.exoplayer2.FormatHolder, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param2: boolean): number;
								public skipData(param0: number): number;
								public isReady(): boolean;
								public release(): void;
								public constructor(param0: com.google.android.exoplayer2.source.chunk.ChunkSampleStream<any>, param1: com.google.android.exoplayer2.source.SampleQueue, param2: number);
								public maybeThrowError(): void;
							}
							export class ReleaseCallback<T>  extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ChunkSampleStream.ReleaseCallback<any>>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.chunk.ChunkSampleStream$ReleaseCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onSampleStreamReleased(param0: com.google.android.exoplayer2.source.chunk.ChunkSampleStream<T>): void;
								});
								public constructor();
								public onSampleStreamReleased(param0: com.google.android.exoplayer2.source.chunk.ChunkSampleStream<T>): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class ChunkSource {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ChunkSource>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.chunk.ChunkSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
								maybeThrowError(): void;
								getPreferredQueueSize(param0: number, param1: java.util.List<any>): number;
								shouldCancelLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
								getNextChunk(param0: number, param1: number, param2: java.util.List<any>, param3: com.google.android.exoplayer2.source.chunk.ChunkHolder): void;
								onChunkLoadCompleted(param0: com.google.android.exoplayer2.source.chunk.Chunk): void;
								onChunkLoadError(param0: com.google.android.exoplayer2.source.chunk.Chunk, param1: boolean, param2: java.lang.Exception, param3: number): boolean;
								release(): void;
							});
							public constructor();
							public getNextChunk(param0: number, param1: number, param2: java.util.List<any>, param3: com.google.android.exoplayer2.source.chunk.ChunkHolder): void;
							public onChunkLoadCompleted(param0: com.google.android.exoplayer2.source.chunk.Chunk): void;
							public shouldCancelLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
							public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
							public release(): void;
							public maybeThrowError(): void;
							public getPreferredQueueSize(param0: number, param1: java.util.List<any>): number;
							public onChunkLoadError(param0: com.google.android.exoplayer2.source.chunk.Chunk, param1: boolean, param2: java.lang.Exception, param3: number): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class ContainerMediaChunk extends com.google.android.exoplayer2.source.chunk.BaseMediaChunk {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.ContainerMediaChunk>;
							public isLoadCompleted(): boolean;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: com.google.android.exoplayer2.Format, param3: number, param4: any, param5: number, param6: number, param7: number);
							public cancelLoad(): void;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: com.google.android.exoplayer2.Format, param3: number, param4: any, param5: number, param6: number, param7: number, param8: number, param9: number, param10: number, param11: number, param12: com.google.android.exoplayer2.source.chunk.ChunkExtractor);
							public load(): void;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: any, param6: number, param7: number);
							public getNextChunkIndex(): number;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: com.google.android.exoplayer2.Format, param3: number, param4: any, param5: number, param6: number, param7: number, param8: number, param9: number);
							public getTrackOutputProvider(param0: com.google.android.exoplayer2.source.chunk.BaseMediaChunkOutput): com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export abstract class DataChunk extends com.google.android.exoplayer2.source.chunk.Chunk {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.DataChunk>;
							public consume(param0: androidNative.Array<number>, param1: number): void;
							public cancelLoad(): void;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: any, param6: androidNative.Array<number>);
							public getDataHolder(): androidNative.Array<number>;
							public load(): void;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: any, param6: number, param7: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class InitializationChunk extends com.google.android.exoplayer2.source.chunk.Chunk {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.InitializationChunk>;
							public cancelLoad(): void;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: com.google.android.exoplayer2.Format, param3: number, param4: any, param5: com.google.android.exoplayer2.source.chunk.ChunkExtractor);
							public load(): void;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: any, param6: number, param7: number);
							public init(param0: com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export abstract class MediaChunk extends com.google.android.exoplayer2.source.chunk.Chunk {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.MediaChunk>;
							public chunkIndex: number;
							public isLoadCompleted(): boolean;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: com.google.android.exoplayer2.Format, param3: number, param4: any, param5: number, param6: number, param7: number);
							public cancelLoad(): void;
							public load(): void;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: any, param6: number, param7: number);
							public getNextChunkIndex(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class MediaChunkIterator {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.chunk.MediaChunkIterator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								isEnded(): boolean;
								next(): boolean;
								getDataSpec(): com.google.android.exoplayer2.upstream.DataSpec;
								getChunkStartTimeUs(): number;
								getChunkEndTimeUs(): number;
								reset(): void;
								<clinit>(): void;
							});
							public constructor();
							public static EMPTY: com.google.android.exoplayer2.source.chunk.MediaChunkIterator;
							public isEnded(): boolean;
							public getChunkEndTimeUs(): number;
							public getChunkStartTimeUs(): number;
							public next(): boolean;
							public getDataSpec(): com.google.android.exoplayer2.upstream.DataSpec;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class MediaParserChunkExtractor extends com.google.android.exoplayer2.source.chunk.ChunkExtractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.MediaParserChunkExtractor>;
							public init(param0: com.google.android.exoplayer2.source.chunk.ChunkExtractor.TrackOutputProvider, param1: number, param2: number): void;
							public getChunkIndex(): com.google.android.exoplayer2.extractor.ChunkIndex;
							public getSampleFormats(): androidNative.Array<com.google.android.exoplayer2.Format>;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public constructor(param0: number, param1: com.google.android.exoplayer2.Format, param2: java.util.List<com.google.android.exoplayer2.Format>);
						}
						export module MediaParserChunkExtractor {
							export class TrackOutputProviderAdapter extends com.google.android.exoplayer2.extractor.ExtractorOutput {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.MediaParserChunkExtractor.TrackOutputProviderAdapter>;
								public seekMap(param0: com.google.android.exoplayer2.extractor.SeekMap): void;
								public track(param0: number, param1: number): com.google.android.exoplayer2.extractor.TrackOutput;
								public endTracks(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module chunk {
						export class SingleSampleMediaChunk extends com.google.android.exoplayer2.source.chunk.BaseMediaChunk {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.chunk.SingleSampleMediaChunk>;
							public isLoadCompleted(): boolean;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: com.google.android.exoplayer2.Format, param3: number, param4: any, param5: number, param6: number, param7: number);
							public cancelLoad(): void;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: com.google.android.exoplayer2.Format, param3: number, param4: any, param5: number, param6: number, param7: number, param8: number, param9: com.google.android.exoplayer2.Format);
							public load(): void;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: any, param6: number, param7: number);
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: com.google.android.exoplayer2.Format, param3: number, param4: any, param5: number, param6: number, param7: number, param8: number, param9: number);
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export class BuildConfig {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.BuildConfig>;
							public static DEBUG: boolean;
							public static LIBRARY_PACKAGE_NAME: string;
							public static APPLICATION_ID: string;
							public static BUILD_TYPE: string;
							public static FLAVOR: string;
							public static VERSION_CODE: number;
							public static VERSION_NAME: string;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export class DashChunkSource extends com.google.android.exoplayer2.source.chunk.ChunkSource {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashChunkSource>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.dash.DashChunkSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								updateManifest(param0: com.google.android.exoplayer2.source.dash.manifest.DashManifest, param1: number): void;
								updateTrackSelection(param0: com.google.android.exoplayer2.trackselection.ExoTrackSelection): void;
								getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
								maybeThrowError(): void;
								getPreferredQueueSize(param0: number, param1: java.util.List<any>): number;
								shouldCancelLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
								getNextChunk(param0: number, param1: number, param2: java.util.List<any>, param3: com.google.android.exoplayer2.source.chunk.ChunkHolder): void;
								onChunkLoadCompleted(param0: com.google.android.exoplayer2.source.chunk.Chunk): void;
								onChunkLoadError(param0: com.google.android.exoplayer2.source.chunk.Chunk, param1: boolean, param2: java.lang.Exception, param3: number): boolean;
								release(): void;
							});
							public constructor();
							public updateTrackSelection(param0: com.google.android.exoplayer2.trackselection.ExoTrackSelection): void;
							public getNextChunk(param0: number, param1: number, param2: java.util.List<any>, param3: com.google.android.exoplayer2.source.chunk.ChunkHolder): void;
							public updateManifest(param0: com.google.android.exoplayer2.source.dash.manifest.DashManifest, param1: number): void;
							public onChunkLoadCompleted(param0: com.google.android.exoplayer2.source.chunk.Chunk): void;
							public shouldCancelLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
							public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
							public release(): void;
							public maybeThrowError(): void;
							public getPreferredQueueSize(param0: number, param1: java.util.List<any>): number;
							public onChunkLoadError(param0: com.google.android.exoplayer2.source.chunk.Chunk, param1: boolean, param2: java.lang.Exception, param3: number): boolean;
						}
						export module DashChunkSource {
							export class Factory {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashChunkSource.Factory>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.dash.DashChunkSource$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									createDashChunkSource(param0: com.google.android.exoplayer2.upstream.LoaderErrorThrower, param1: com.google.android.exoplayer2.source.dash.manifest.DashManifest, param2: number, param3: androidNative.Array<number>, param4: com.google.android.exoplayer2.trackselection.ExoTrackSelection, param5: number, param6: number, param7: boolean, param8: java.util.List<com.google.android.exoplayer2.Format>, param9: com.google.android.exoplayer2.source.dash.PlayerEmsgHandler.PlayerTrackEmsgHandler, param10: com.google.android.exoplayer2.upstream.TransferListener): com.google.android.exoplayer2.source.dash.DashChunkSource;
								});
								public constructor();
								public createDashChunkSource(param0: com.google.android.exoplayer2.upstream.LoaderErrorThrower, param1: com.google.android.exoplayer2.source.dash.manifest.DashManifest, param2: number, param3: androidNative.Array<number>, param4: com.google.android.exoplayer2.trackselection.ExoTrackSelection, param5: number, param6: number, param7: boolean, param8: java.util.List<com.google.android.exoplayer2.Format>, param9: com.google.android.exoplayer2.source.dash.PlayerEmsgHandler.PlayerTrackEmsgHandler, param10: com.google.android.exoplayer2.upstream.TransferListener): com.google.android.exoplayer2.source.dash.DashChunkSource;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export class DashManifestStaleException {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashManifestStaleException>;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export class DashMediaPeriod extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashMediaPeriod>;
							public onSampleStreamReleased(param0: com.google.android.exoplayer2.source.chunk.ChunkSampleStream<com.google.android.exoplayer2.source.dash.DashChunkSource>): void;
							public updateManifest(param0: com.google.android.exoplayer2.source.dash.manifest.DashManifest, param1: number): void;
							public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
							public selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>, param1: androidNative.Array<boolean>, param2: androidNative.Array<com.google.android.exoplayer2.source.SampleStream>, param3: androidNative.Array<boolean>, param4: number): number;
							public onContinueLoadingRequested(param0: any): void;
							public getStreamKeys(param0: java.util.List<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
							public isLoading(): boolean;
							public release(): void;
							public continueLoading(param0: number): boolean;
							public onSampleStreamReleased(param0: com.google.android.exoplayer2.source.chunk.ChunkSampleStream<any>): void;
							public maybeThrowPrepareError(): void;
							public getBufferedPositionUs(): number;
							public onContinueLoadingRequested(param0: com.google.android.exoplayer2.source.chunk.ChunkSampleStream<com.google.android.exoplayer2.source.dash.DashChunkSource>): void;
							public constructor(param0: number, param1: com.google.android.exoplayer2.source.dash.manifest.DashManifest, param2: number, param3: com.google.android.exoplayer2.source.dash.DashChunkSource.Factory, param4: com.google.android.exoplayer2.upstream.TransferListener, param5: com.google.android.exoplayer2.drm.DrmSessionManager, param6: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher, param7: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy, param8: com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher, param9: number, param10: com.google.android.exoplayer2.upstream.LoaderErrorThrower, param11: com.google.android.exoplayer2.upstream.Allocator, param12: com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory, param13: com.google.android.exoplayer2.source.dash.PlayerEmsgHandler.PlayerEmsgCallback);
							public getNextLoadPositionUs(): number;
							public seekToUs(param0: number): number;
							public prepare(param0: com.google.android.exoplayer2.source.MediaPeriod.Callback, param1: number): void;
							public discardBuffer(param0: number, param1: boolean): void;
							public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
							public readDiscontinuity(): number;
							public reevaluateBuffer(param0: number): void;
						}
						export module DashMediaPeriod {
							export class TrackGroupInfo {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashMediaPeriod.TrackGroupInfo>;
								public adaptationSetIndices: androidNative.Array<number>;
								public trackType: number;
								public trackGroupCategory: number;
								public eventStreamGroupIndex: number;
								public primaryTrackGroupIndex: number;
								public embeddedEventMessageTrackGroupIndex: number;
								public embeddedClosedCaptionTrackGroupIndex: number;
								public static embeddedClosedCaptionTrack(param0: androidNative.Array<number>, param1: number): com.google.android.exoplayer2.source.dash.DashMediaPeriod.TrackGroupInfo;
								public static mpdEventTrack(param0: number): com.google.android.exoplayer2.source.dash.DashMediaPeriod.TrackGroupInfo;
								public static primaryTrack(param0: number, param1: androidNative.Array<number>, param2: number, param3: number, param4: number): com.google.android.exoplayer2.source.dash.DashMediaPeriod.TrackGroupInfo;
								public static embeddedEmsgTrack(param0: androidNative.Array<number>, param1: number): com.google.android.exoplayer2.source.dash.DashMediaPeriod.TrackGroupInfo;
							}
							export module TrackGroupInfo {
								export class TrackGroupCategory {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashMediaPeriod.TrackGroupInfo.TrackGroupCategory>;
									/**
									 * Constructs a new instance of the com.google.android.exoplayer2.source.dash.DashMediaPeriod$TrackGroupInfo$TrackGroupCategory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
									});
									public constructor();
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export class DashMediaSource extends com.google.android.exoplayer2.source.BaseMediaSource {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashMediaSource>;
							public static DEFAULT_FALLBACK_TARGET_LIVE_OFFSET_MS: number;
							public static DEFAULT_LIVE_PRESENTATION_DELAY_MS: number;
							public static DEFAULT_MEDIA_ID: string;
							public replaceManifestUri(param0: globalAndroid.net.Uri): void;
							public getMediaItem(): com.google.android.exoplayer2.MediaItem;
							public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public releaseSourceInternal(): void;
							/** @deprecated */
							public getTag(): any;
							public maybeThrowSourceInfoRefreshError(): void;
							public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public isSingleWindow(): boolean;
							public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
							public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
							public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
							public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
							public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
							public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						}
						export module DashMediaSource {
							export class DashTimeline extends com.google.android.exoplayer2.Timeline {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashMediaSource.DashTimeline>;
								public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: number): com.google.android.exoplayer2.Timeline.Window;
								public getUidOfPeriod(param0: number): any;
								public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period): com.google.android.exoplayer2.Timeline.Period;
								public getIndexOfPeriod(param0: any): number;
								public getWindowCount(): number;
								public constructor();
								public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: com.google.android.exoplayer2.source.dash.manifest.DashManifest, param8: com.google.android.exoplayer2.MediaItem, param9: com.google.android.exoplayer2.MediaItem.LiveConfiguration);
								public getPeriodCount(): number;
								public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window): com.google.android.exoplayer2.Timeline.Window;
								public getPeriod(param0: number, param1: com.google.android.exoplayer2.Timeline.Period, param2: boolean): com.google.android.exoplayer2.Timeline.Period;
								/** @deprecated */
								public getWindow(param0: number, param1: com.google.android.exoplayer2.Timeline.Window, param2: boolean): com.google.android.exoplayer2.Timeline.Window;
							}
							export class DefaultPlayerEmsgCallback extends com.google.android.exoplayer2.source.dash.PlayerEmsgHandler.PlayerEmsgCallback {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashMediaSource.DefaultPlayerEmsgCallback>;
								public onDashManifestRefreshRequested(): void;
								public onDashManifestPublishTimeExpired(param0: number): void;
							}
							export class Factory extends com.google.android.exoplayer2.source.MediaSourceFactory {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashMediaSource.Factory>;
								public setFallbackTargetLiveOffsetMs(param0: number): com.google.android.exoplayer2.source.dash.DashMediaSource.Factory;
								public setDrmUserAgent(param0: string): com.google.android.exoplayer2.source.dash.DashMediaSource.Factory;
								/** @deprecated */
								public createMediaSource(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.dash.DashMediaSource;
								public getSupportedTypes(): androidNative.Array<number>;
								public setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.MediaSourceFactory;
								public setDrmSessionManager(param0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.dash.DashMediaSource.Factory;
								public setDrmSessionManagerProvider(param0: com.google.android.exoplayer2.drm.DrmSessionManagerProvider): com.google.android.exoplayer2.source.MediaSourceFactory;
								public createMediaSource(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.MediaSource;
								/** @deprecated */
								public createMediaSource(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.MediaSource;
								public constructor(param0: com.google.android.exoplayer2.source.dash.DashChunkSource.Factory, param1: com.google.android.exoplayer2.upstream.DataSource.Factory);
								public setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.dash.DashMediaSource.Factory;
								/** @deprecated */
								public setDrmHttpDataSourceFactory(param0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.MediaSourceFactory;
								public constructor(param0: com.google.android.exoplayer2.upstream.DataSource.Factory);
								/** @deprecated */
								public setStreamKeys(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.MediaSourceFactory;
								public setDrmHttpDataSourceFactory(param0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.dash.DashMediaSource.Factory;
								/** @deprecated */
								public setStreamKeys(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.dash.DashMediaSource.Factory;
								public setManifestParser(param0: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>): com.google.android.exoplayer2.source.dash.DashMediaSource.Factory;
								/** @deprecated */
								public setLivePresentationDelayMs(param0: number, param1: boolean): com.google.android.exoplayer2.source.dash.DashMediaSource.Factory;
								public createMediaSource(param0: com.google.android.exoplayer2.source.dash.manifest.DashManifest): com.google.android.exoplayer2.source.dash.DashMediaSource;
								/** @deprecated */
								public setDrmSessionManager(param0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.MediaSourceFactory;
								/** @deprecated */
								public setDrmUserAgent(param0: string): com.google.android.exoplayer2.source.MediaSourceFactory;
								/** @deprecated */
								public setTag(param0: any): com.google.android.exoplayer2.source.dash.DashMediaSource.Factory;
								public createMediaSource(param0: com.google.android.exoplayer2.source.dash.manifest.DashManifest, param1: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.dash.DashMediaSource;
								public setCompositeSequenceableLoaderFactory(param0: com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory): com.google.android.exoplayer2.source.dash.DashMediaSource.Factory;
								public setDrmSessionManagerProvider(param0: com.google.android.exoplayer2.drm.DrmSessionManagerProvider): com.google.android.exoplayer2.source.dash.DashMediaSource.Factory;
								public createMediaSource(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.dash.DashMediaSource;
							}
							export class Iso8601Parser extends com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<java.lang.Long> {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashMediaSource.Iso8601Parser>;
								public parse(param0: globalAndroid.net.Uri, param1: java.io.InputStream): java.lang.Long;
								public parse(param0: globalAndroid.net.Uri, param1: java.io.InputStream): any;
							}
							export class ManifestCallback extends com.google.android.exoplayer2.upstream.Loader.Callback<com.google.android.exoplayer2.upstream.ParsingLoadable<com.google.android.exoplayer2.source.dash.manifest.DashManifest>> {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashMediaSource.ManifestCallback>;
								public onLoadCompleted(param0: com.google.android.exoplayer2.upstream.ParsingLoadable<com.google.android.exoplayer2.source.dash.manifest.DashManifest>, param1: number, param2: number): void;
								public onLoadError(param0: com.google.android.exoplayer2.upstream.ParsingLoadable<com.google.android.exoplayer2.source.dash.manifest.DashManifest>, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
								public onLoadCanceled(param0: any, param1: number, param2: number, param3: boolean): void;
								public onLoadCompleted(param0: any, param1: number, param2: number): void;
								public onLoadCanceled(param0: com.google.android.exoplayer2.upstream.ParsingLoadable<com.google.android.exoplayer2.source.dash.manifest.DashManifest>, param1: number, param2: number, param3: boolean): void;
								public onLoadError(param0: any, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							}
							export class ManifestLoadErrorThrower extends com.google.android.exoplayer2.upstream.LoaderErrorThrower {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashMediaSource.ManifestLoadErrorThrower>;
								public maybeThrowError(param0: number): void;
								public maybeThrowError(): void;
							}
							export class UtcTimestampCallback extends com.google.android.exoplayer2.upstream.Loader.Callback<com.google.android.exoplayer2.upstream.ParsingLoadable<java.lang.Long>> {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashMediaSource.UtcTimestampCallback>;
								public onLoadError(param0: com.google.android.exoplayer2.upstream.ParsingLoadable<java.lang.Long>, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
								public onLoadCanceled(param0: com.google.android.exoplayer2.upstream.ParsingLoadable<java.lang.Long>, param1: number, param2: number, param3: boolean): void;
								public onLoadCanceled(param0: any, param1: number, param2: number, param3: boolean): void;
								public onLoadCompleted(param0: any, param1: number, param2: number): void;
								public onLoadError(param0: any, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
								public onLoadCompleted(param0: com.google.android.exoplayer2.upstream.ParsingLoadable<java.lang.Long>, param1: number, param2: number): void;
							}
							export class XsDateTimeParser extends com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<java.lang.Long> {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashMediaSource.XsDateTimeParser>;
								public parse(param0: globalAndroid.net.Uri, param1: java.io.InputStream): java.lang.Long;
								public parse(param0: globalAndroid.net.Uri, param1: java.io.InputStream): any;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export class DashSegmentIndex {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashSegmentIndex>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.dash.DashSegmentIndex interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getSegmentNum(param0: number, param1: number): number;
								getTimeUs(param0: number): number;
								getDurationUs(param0: number, param1: number): number;
								getSegmentUrl(param0: number): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
								getFirstSegmentNum(): number;
								getFirstAvailableSegmentNum(param0: number, param1: number): number;
								getSegmentCount(param0: number): number;
								getAvailableSegmentCount(param0: number, param1: number): number;
								getNextSegmentAvailableTimeUs(param0: number, param1: number): number;
								isExplicit(): boolean;
							});
							public constructor();
							public static INDEX_UNBOUNDED: number;
							public getTimeUs(param0: number): number;
							public getFirstAvailableSegmentNum(param0: number, param1: number): number;
							public getDurationUs(param0: number, param1: number): number;
							public getNextSegmentAvailableTimeUs(param0: number, param1: number): number;
							public isExplicit(): boolean;
							public getSegmentNum(param0: number, param1: number): number;
							public getFirstSegmentNum(): number;
							public getSegmentCount(param0: number): number;
							public getSegmentUrl(param0: number): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
							public getAvailableSegmentCount(param0: number, param1: number): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export class DashUtil {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashUtil>;
							public static loadSampleFormat(param0: com.google.android.exoplayer2.upstream.DataSource, param1: number, param2: com.google.android.exoplayer2.source.dash.manifest.Representation): com.google.android.exoplayer2.Format;
							public static loadChunkIndex(param0: com.google.android.exoplayer2.upstream.DataSource, param1: number, param2: com.google.android.exoplayer2.source.dash.manifest.Representation): com.google.android.exoplayer2.extractor.ChunkIndex;
							public static loadFormatWithDrmInitData(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.source.dash.manifest.Period): com.google.android.exoplayer2.Format;
							public static buildDataSpec(param0: com.google.android.exoplayer2.source.dash.manifest.Representation, param1: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param2: number): com.google.android.exoplayer2.upstream.DataSpec;
							public static loadManifest(param0: com.google.android.exoplayer2.upstream.DataSource, param1: globalAndroid.net.Uri): com.google.android.exoplayer2.source.dash.manifest.DashManifest;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export class DashWrappingSegmentIndex extends com.google.android.exoplayer2.source.dash.DashSegmentIndex {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DashWrappingSegmentIndex>;
							public getFirstAvailableSegmentNum(param0: number, param1: number): number;
							public getTimeUs(param0: number): number;
							public getDurationUs(param0: number, param1: number): number;
							public getNextSegmentAvailableTimeUs(param0: number, param1: number): number;
							public isExplicit(): boolean;
							public getSegmentNum(param0: number, param1: number): number;
							public constructor(param0: com.google.android.exoplayer2.extractor.ChunkIndex, param1: number);
							public getFirstSegmentNum(): number;
							public getSegmentCount(param0: number): number;
							public getAvailableSegmentCount(param0: number, param1: number): number;
							public getSegmentUrl(param0: number): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export class DefaultDashChunkSource extends com.google.android.exoplayer2.source.dash.DashChunkSource {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DefaultDashChunkSource>;
							public representationHolders: androidNative.Array<com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationHolder>;
							public updateTrackSelection(param0: com.google.android.exoplayer2.trackselection.ExoTrackSelection): void;
							public getNextChunk(param0: number, param1: number, param2: java.util.List<any>, param3: com.google.android.exoplayer2.source.chunk.ChunkHolder): void;
							public updateManifest(param0: com.google.android.exoplayer2.source.dash.manifest.DashManifest, param1: number): void;
							public onChunkLoadCompleted(param0: com.google.android.exoplayer2.source.chunk.Chunk): void;
							public newMediaChunk(param0: com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationHolder, param1: com.google.android.exoplayer2.upstream.DataSource, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: any, param6: number, param7: number, param8: number, param9: number): com.google.android.exoplayer2.source.chunk.Chunk;
							public constructor(param0: com.google.android.exoplayer2.upstream.LoaderErrorThrower, param1: com.google.android.exoplayer2.source.dash.manifest.DashManifest, param2: number, param3: androidNative.Array<number>, param4: com.google.android.exoplayer2.trackselection.ExoTrackSelection, param5: number, param6: com.google.android.exoplayer2.upstream.DataSource, param7: number, param8: number, param9: boolean, param10: java.util.List<com.google.android.exoplayer2.Format>, param11: com.google.android.exoplayer2.source.dash.PlayerEmsgHandler.PlayerTrackEmsgHandler);
							public shouldCancelLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
							public release(): void;
							public newInitializationChunk(param0: com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationHolder, param1: com.google.android.exoplayer2.upstream.DataSource, param2: com.google.android.exoplayer2.Format, param3: number, param4: any, param5: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param6: com.google.android.exoplayer2.source.dash.manifest.RangedUri): com.google.android.exoplayer2.source.chunk.Chunk;
							public onChunkLoadError(param0: com.google.android.exoplayer2.source.chunk.Chunk, param1: boolean, param2: java.lang.Exception, param3: number): boolean;
							public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
							public maybeThrowError(): void;
							public getPreferredQueueSize(param0: number, param1: java.util.List<any>): number;
						}
						export module DefaultDashChunkSource {
							export class Factory extends com.google.android.exoplayer2.source.dash.DashChunkSource.Factory {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.Factory>;
								public constructor(param0: com.google.android.exoplayer2.upstream.DataSource.Factory, param1: number);
								public createDashChunkSource(param0: com.google.android.exoplayer2.upstream.LoaderErrorThrower, param1: com.google.android.exoplayer2.source.dash.manifest.DashManifest, param2: number, param3: androidNative.Array<number>, param4: com.google.android.exoplayer2.trackselection.ExoTrackSelection, param5: number, param6: number, param7: boolean, param8: java.util.List<com.google.android.exoplayer2.Format>, param9: com.google.android.exoplayer2.source.dash.PlayerEmsgHandler.PlayerTrackEmsgHandler, param10: com.google.android.exoplayer2.upstream.TransferListener): com.google.android.exoplayer2.source.dash.DashChunkSource;
								public constructor(param0: com.google.android.exoplayer2.upstream.DataSource.Factory);
							}
							export class RepresentationHolder {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationHolder>;
								public representation: com.google.android.exoplayer2.source.dash.manifest.Representation;
								public segmentIndex: com.google.android.exoplayer2.source.dash.DashSegmentIndex;
								public getLastAvailableSegmentNum(param0: number): number;
								public getFirstAvailableSegmentNum(param0: number): number;
								public getSegmentEndTimeUs(param0: number): number;
								public isSegmentAvailableAtFullNetworkSpeed(param0: number, param1: number): boolean;
								public getFirstSegmentNum(): number;
								public getSegmentStartTimeUs(param0: number): number;
								public getSegmentUrl(param0: number): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
								public getSegmentCount(): number;
								public getSegmentNum(param0: number): number;
							}
							export class RepresentationSegmentIterator extends com.google.android.exoplayer2.source.chunk.BaseMediaChunkIterator {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationSegmentIterator>;
								public getChunkStartTimeUs(): number;
								public getDataSpec(): com.google.android.exoplayer2.upstream.DataSpec;
								public constructor(param0: number, param1: number);
								public reset(): void;
								public getChunkEndTimeUs(): number;
								public constructor(param0: com.google.android.exoplayer2.source.dash.DefaultDashChunkSource.RepresentationHolder, param1: number, param2: number, param3: number);
								public next(): boolean;
								public isEnded(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export class EventSampleStream extends com.google.android.exoplayer2.source.SampleStream {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.EventSampleStream>;
							public readData(param0: com.google.android.exoplayer2.FormatHolder, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param2: boolean): number;
							public eventStreamId(): string;
							public constructor(param0: com.google.android.exoplayer2.source.dash.manifest.EventStream, param1: com.google.android.exoplayer2.Format, param2: boolean);
							public isReady(): boolean;
							public updateEventStream(param0: com.google.android.exoplayer2.source.dash.manifest.EventStream, param1: boolean): void;
							public seekToUs(param0: number): void;
							public skipData(param0: number): number;
							public maybeThrowError(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export class PlayerEmsgHandler {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.PlayerEmsgHandler>;
							public constructor(param0: com.google.android.exoplayer2.source.dash.manifest.DashManifest, param1: com.google.android.exoplayer2.source.dash.PlayerEmsgHandler.PlayerEmsgCallback, param2: com.google.android.exoplayer2.upstream.Allocator);
							public newPlayerTrackEmsgHandler(): com.google.android.exoplayer2.source.dash.PlayerEmsgHandler.PlayerTrackEmsgHandler;
							public handleMessage(param0: globalAndroid.os.Message): boolean;
							public release(): void;
							public updateManifest(param0: com.google.android.exoplayer2.source.dash.manifest.DashManifest): void;
						}
						export module PlayerEmsgHandler {
							export class ManifestExpiryEventInfo {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.PlayerEmsgHandler.ManifestExpiryEventInfo>;
								public eventTimeUs: number;
								public manifestPublishTimeMsInEmsg: number;
								public constructor(param0: number, param1: number);
							}
							export class PlayerEmsgCallback {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.PlayerEmsgHandler.PlayerEmsgCallback>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.dash.PlayerEmsgHandler$PlayerEmsgCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onDashManifestRefreshRequested(): void;
									onDashManifestPublishTimeExpired(param0: number): void;
								});
								public constructor();
								public onDashManifestRefreshRequested(): void;
								public onDashManifestPublishTimeExpired(param0: number): void;
							}
							export class PlayerTrackEmsgHandler extends com.google.android.exoplayer2.extractor.TrackOutput {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.PlayerEmsgHandler.PlayerTrackEmsgHandler>;
								public sampleMetadata(param0: number, param1: number, param2: number, param3: number, param4: com.google.android.exoplayer2.extractor.TrackOutput.CryptoData): void;
								public maybeRefreshManifestBeforeLoadingNextChunk(param0: number): boolean;
								public sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean): number;
								public sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number, param2: number): void;
								public sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): void;
								public onChunkLoadCompleted(param0: com.google.android.exoplayer2.source.chunk.Chunk): void;
								public onChunkLoadError(param0: com.google.android.exoplayer2.source.chunk.Chunk): boolean;
								public release(): void;
								public format(param0: com.google.android.exoplayer2.Format): void;
								public sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean, param3: number): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export module manifest {
							export class AdaptationSet {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.AdaptationSet>;
								public static ID_UNSET: number;
								public id: number;
								public type: number;
								public representations: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Representation>;
								public accessibilityDescriptors: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>;
								public essentialProperties: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>;
								public supplementalProperties: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>;
								public constructor(param0: number, param1: number, param2: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Representation>, param3: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param4: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param5: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export module manifest {
							export class DashManifest extends com.google.android.exoplayer2.offline.FilterableManifest<com.google.android.exoplayer2.source.dash.manifest.DashManifest> {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.DashManifest>;
								public availabilityStartTimeMs: number;
								public durationMs: number;
								public minBufferTimeMs: number;
								public dynamic: boolean;
								public minUpdatePeriodMs: number;
								public timeShiftBufferDepthMs: number;
								public suggestedPresentationDelayMs: number;
								public publishTimeMs: number;
								public utcTiming: com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement;
								public serviceDescription: com.google.android.exoplayer2.source.dash.manifest.ServiceDescriptionElement;
								public location: globalAndroid.net.Uri;
								public programInformation: com.google.android.exoplayer2.source.dash.manifest.ProgramInformation;
								public constructor(param0: number, param1: number, param2: number, param3: boolean, param4: number, param5: number, param6: number, param7: number, param8: com.google.android.exoplayer2.source.dash.manifest.ProgramInformation, param9: com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement, param10: com.google.android.exoplayer2.source.dash.manifest.ServiceDescriptionElement, param11: globalAndroid.net.Uri, param12: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Period>);
								public getPeriod(param0: number): com.google.android.exoplayer2.source.dash.manifest.Period;
								public copy(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.dash.manifest.DashManifest;
								public getPeriodCount(): number;
								public copy(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): any;
								public getPeriodDurationMs(param0: number): number;
								public getPeriodDurationUs(param0: number): number;
								/** @deprecated */
								public constructor(param0: number, param1: number, param2: number, param3: boolean, param4: number, param5: number, param6: number, param7: number, param8: com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement, param9: globalAndroid.net.Uri, param10: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Period>);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export module manifest {
							export class DashManifestParser extends org.xml.sax.helpers.DefaultHandler implements com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<com.google.android.exoplayer2.source.dash.manifest.DashManifest>  {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.DashManifestParser>;
								public buildUtcTimingElement(param0: string, param1: string): com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement;
								public parseContentProtection(param0: org.xmlpull.v1.XmlPullParser): globalAndroid.util.Pair<string,com.google.android.exoplayer2.drm.DrmInitData.SchemeData>;
								public parseDashRoleSchemeValue(param0: string): number;
								public parseServiceDescription(param0: org.xmlpull.v1.XmlPullParser): com.google.android.exoplayer2.source.dash.manifest.ServiceDescriptionElement;
								public parse(param0: globalAndroid.net.Uri, param1: java.io.InputStream): com.google.android.exoplayer2.source.dash.manifest.DashManifest;
								public parseEventStream(param0: org.xmlpull.v1.XmlPullParser): com.google.android.exoplayer2.source.dash.manifest.EventStream;
								public parseUtcTiming(param0: org.xmlpull.v1.XmlPullParser): com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement;
								public parseMediaPresentationDescription(param0: org.xmlpull.v1.XmlPullParser, param1: string): com.google.android.exoplayer2.source.dash.manifest.DashManifest;
								public parseEvent(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: string, param3: number, param4: java.io.ByteArrayOutputStream): globalAndroid.util.Pair<java.lang.Long,com.google.android.exoplayer2.metadata.emsg.EventMessage>;
								public parseInitialization(param0: org.xmlpull.v1.XmlPullParser): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
								public static parseInt(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: number): number;
								public static parseDuration(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: number): number;
								public static parseFrameRate(param0: org.xmlpull.v1.XmlPullParser, param1: number): number;
								public parsePeriod(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: number, param3: number, param4: number, param5: number): globalAndroid.util.Pair<com.google.android.exoplayer2.source.dash.manifest.Period,java.lang.Long>;
								public constructor();
								public buildEvent(param0: string, param1: string, param2: number, param3: number, param4: androidNative.Array<number>): com.google.android.exoplayer2.metadata.emsg.EventMessage;
								public parseEventObject(param0: org.xmlpull.v1.XmlPullParser, param1: java.io.ByteArrayOutputStream): androidNative.Array<number>;
								public buildEventStream(param0: string, param1: string, param2: number, param3: androidNative.Array<number>, param4: androidNative.Array<com.google.android.exoplayer2.metadata.emsg.EventMessage>): com.google.android.exoplayer2.source.dash.manifest.EventStream;
								public static parseFloat(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: number): number;
								public parseContentType(param0: org.xmlpull.v1.XmlPullParser): number;
								public parseRepresentation(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: string, param3: string, param4: number, param5: number, param6: number, param7: number, param8: number, param9: string, param10: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param11: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param12: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param13: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param14: com.google.android.exoplayer2.source.dash.manifest.SegmentBase, param15: number, param16: number, param17: number, param18: number, param19: number): com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.RepresentationInfo;
								public parseSegmentTimeline(param0: org.xmlpull.v1.XmlPullParser, param1: number, param2: number): java.util.List<com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTimelineElement>;
								public parseSegmentBase(param0: org.xmlpull.v1.XmlPullParser, param1: com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SingleSegmentBase): com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SingleSegmentBase;
								public buildSegmentTimelineElement(param0: number, param1: number): com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTimelineElement;
								public parseUrlTemplate(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: com.google.android.exoplayer2.source.dash.manifest.UrlTemplate): com.google.android.exoplayer2.source.dash.manifest.UrlTemplate;
								public static parseCea608AccessibilityChannel(param0: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>): number;
								public static parseEac3SupplementalProperties(param0: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>): string;
								public buildMediaPresentationDescription(param0: number, param1: number, param2: number, param3: boolean, param4: number, param5: number, param6: number, param7: number, param8: com.google.android.exoplayer2.source.dash.manifest.ProgramInformation, param9: com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement, param10: com.google.android.exoplayer2.source.dash.manifest.ServiceDescriptionElement, param11: globalAndroid.net.Uri, param12: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Period>): com.google.android.exoplayer2.source.dash.manifest.DashManifest;
								public static parseDateTime(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: number): number;
								public static parseLong(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: number): number;
								public static parseDescriptor(param0: org.xmlpull.v1.XmlPullParser, param1: string): com.google.android.exoplayer2.source.dash.manifest.Descriptor;
								public parseRangedUrl(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: string): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
								public static parseCea708AccessibilityChannel(param0: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>): number;
								public parse(param0: globalAndroid.net.Uri, param1: java.io.InputStream): any;
								public parseBaseUrl(param0: org.xmlpull.v1.XmlPullParser, param1: string): string;
								public parseAvailabilityTimeOffsetUs(param0: org.xmlpull.v1.XmlPullParser, param1: number): number;
								public parseSegmentList(param0: org.xmlpull.v1.XmlPullParser, param1: com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentList, param2: number, param3: number, param4: number, param5: number, param6: number): com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentList;
								public static maybeSkipTag(param0: org.xmlpull.v1.XmlPullParser): void;
								public buildAdaptationSet(param0: number, param1: number, param2: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Representation>, param3: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param4: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param5: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>): com.google.android.exoplayer2.source.dash.manifest.AdaptationSet;
								public parseRoleFlagsFromAccessibilityDescriptors(param0: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>): number;
								public parseProgramInformation(param0: org.xmlpull.v1.XmlPullParser): com.google.android.exoplayer2.source.dash.manifest.ProgramInformation;
								public buildPeriod(param0: string, param1: number, param2: java.util.List<com.google.android.exoplayer2.source.dash.manifest.AdaptationSet>, param3: java.util.List<com.google.android.exoplayer2.source.dash.manifest.EventStream>, param4: com.google.android.exoplayer2.source.dash.manifest.Descriptor): com.google.android.exoplayer2.source.dash.manifest.Period;
								public buildRangedUri(param0: string, param1: number, param2: number): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
								public static parseDolbyChannelConfiguration(param0: org.xmlpull.v1.XmlPullParser): number;
								public parseSegmentUrl(param0: org.xmlpull.v1.XmlPullParser): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
								public buildSegmentList(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param1: number, param2: number, param3: number, param4: number, param5: java.util.List<com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTimelineElement>, param6: number, param7: java.util.List<com.google.android.exoplayer2.source.dash.manifest.RangedUri>, param8: number, param9: number): com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentList;
								public parseAdaptationSetChild(param0: org.xmlpull.v1.XmlPullParser): void;
								public parseRoleFlagsFromProperties(param0: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>): number;
								public parseAdaptationSet(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: com.google.android.exoplayer2.source.dash.manifest.SegmentBase, param3: number, param4: number, param5: number, param6: number, param7: number): com.google.android.exoplayer2.source.dash.manifest.AdaptationSet;
								public parseLabel(param0: org.xmlpull.v1.XmlPullParser): string;
								public static parseText(param0: org.xmlpull.v1.XmlPullParser, param1: string): string;
								public parseSegmentTemplate(param0: org.xmlpull.v1.XmlPullParser, param1: com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTemplate, param2: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param3: number, param4: number, param5: number, param6: number, param7: number): com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTemplate;
								public static parseMpegChannelConfiguration(param0: org.xmlpull.v1.XmlPullParser): number;
								public buildRepresentation(param0: com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.RepresentationInfo, param1: string, param2: string, param3: java.util.ArrayList<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>, param4: java.util.ArrayList<com.google.android.exoplayer2.source.dash.manifest.Descriptor>): com.google.android.exoplayer2.source.dash.manifest.Representation;
								public buildSegmentTemplate(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param1: number, param2: number, param3: number, param4: number, param5: number, param6: java.util.List<com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTimelineElement>, param7: number, param8: com.google.android.exoplayer2.source.dash.manifest.UrlTemplate, param9: com.google.android.exoplayer2.source.dash.manifest.UrlTemplate, param10: number, param11: number): com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTemplate;
								public parseSelectionFlagsFromRoleDescriptors(param0: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>): number;
								public static parseString(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: string): string;
								public parseTvaAudioPurposeCsValue(param0: string): number;
								public parseRoleFlagsFromRoleDescriptors(param0: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>): number;
								public buildSingleSegmentBase(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param1: number, param2: number, param3: number, param4: number): com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SingleSegmentBase;
								public parseAudioChannelConfiguration(param0: org.xmlpull.v1.XmlPullParser): number;
								public static parseLastSegmentNumberSupplementalProperty(param0: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>): number;
								public buildFormat(param0: string, param1: string, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: string, param9: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param10: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param11: string, param12: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param13: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>): com.google.android.exoplayer2.Format;
							}
							export module DashManifestParser {
								export class RepresentationInfo {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.DashManifestParser.RepresentationInfo>;
									public format: com.google.android.exoplayer2.Format;
									public baseUrl: string;
									public segmentBase: com.google.android.exoplayer2.source.dash.manifest.SegmentBase;
									public drmSchemeType: string;
									public drmSchemeDatas: java.util.ArrayList<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>;
									public inbandEventStreams: java.util.ArrayList<com.google.android.exoplayer2.source.dash.manifest.Descriptor>;
									public revisionId: number;
									public constructor(param0: com.google.android.exoplayer2.Format, param1: string, param2: com.google.android.exoplayer2.source.dash.manifest.SegmentBase, param3: string, param4: java.util.ArrayList<com.google.android.exoplayer2.drm.DrmInitData.SchemeData>, param5: java.util.ArrayList<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param6: number);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export module manifest {
							export class Descriptor {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.Descriptor>;
								public schemeIdUri: string;
								public value: string;
								public id: string;
								public equals(param0: any): boolean;
								public constructor(param0: string, param1: string, param2: string);
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export module manifest {
							export class EventStream {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.EventStream>;
								public events: androidNative.Array<com.google.android.exoplayer2.metadata.emsg.EventMessage>;
								public presentationTimesUs: androidNative.Array<number>;
								public schemeIdUri: string;
								public value: string;
								public timescale: number;
								public constructor(param0: string, param1: string, param2: number, param3: androidNative.Array<number>, param4: androidNative.Array<com.google.android.exoplayer2.metadata.emsg.EventMessage>);
								public id(): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export module manifest {
							export class Period {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.Period>;
								public id: string;
								public startMs: number;
								public adaptationSets: java.util.List<com.google.android.exoplayer2.source.dash.manifest.AdaptationSet>;
								public eventStreams: java.util.List<com.google.android.exoplayer2.source.dash.manifest.EventStream>;
								public assetIdentifier: com.google.android.exoplayer2.source.dash.manifest.Descriptor;
								public constructor(param0: string, param1: number, param2: java.util.List<com.google.android.exoplayer2.source.dash.manifest.AdaptationSet>, param3: java.util.List<com.google.android.exoplayer2.source.dash.manifest.EventStream>, param4: com.google.android.exoplayer2.source.dash.manifest.Descriptor);
								public constructor(param0: string, param1: number, param2: java.util.List<com.google.android.exoplayer2.source.dash.manifest.AdaptationSet>, param3: java.util.List<com.google.android.exoplayer2.source.dash.manifest.EventStream>);
								public constructor(param0: string, param1: number, param2: java.util.List<com.google.android.exoplayer2.source.dash.manifest.AdaptationSet>);
								public getAdaptationSetIndex(param0: number): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export module manifest {
							export class ProgramInformation {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.ProgramInformation>;
								public title: string;
								public source: string;
								public copyright: string;
								public moreInformationURL: string;
								public lang: string;
								public constructor(param0: string, param1: string, param2: string, param3: string, param4: string);
								public equals(param0: any): boolean;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export module manifest {
							export class RangedUri {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.RangedUri>;
								public start: number;
								public length: number;
								public toString(): string;
								public attemptMerge(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param1: string): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
								public resolveUri(param0: string): globalAndroid.net.Uri;
								public equals(param0: any): boolean;
								public resolveUriString(param0: string): string;
								public hashCode(): number;
								public constructor(param0: string, param1: number, param2: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export module manifest {
							export abstract class Representation {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.Representation>;
								public static REVISION_ID_DEFAULT: number;
								public revisionId: number;
								public format: com.google.android.exoplayer2.Format;
								public baseUrl: string;
								public presentationTimeOffsetUs: number;
								public inbandEventStreams: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>;
								public static newInstance(param0: number, param1: com.google.android.exoplayer2.Format, param2: string, param3: com.google.android.exoplayer2.source.dash.manifest.SegmentBase, param4: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param5: string): com.google.android.exoplayer2.source.dash.manifest.Representation;
								public getIndex(): com.google.android.exoplayer2.source.dash.DashSegmentIndex;
								public static newInstance(param0: number, param1: com.google.android.exoplayer2.Format, param2: string, param3: com.google.android.exoplayer2.source.dash.manifest.SegmentBase, param4: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>): com.google.android.exoplayer2.source.dash.manifest.Representation;
								public static newInstance(param0: number, param1: com.google.android.exoplayer2.Format, param2: string, param3: com.google.android.exoplayer2.source.dash.manifest.SegmentBase): com.google.android.exoplayer2.source.dash.manifest.Representation;
								public getCacheKey(): string;
								public getInitializationUri(): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
								public getIndexUri(): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
							}
							export module Representation {
								export class MultiSegmentRepresentation extends com.google.android.exoplayer2.source.dash.manifest.Representation implements com.google.android.exoplayer2.source.dash.DashSegmentIndex {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.Representation.MultiSegmentRepresentation>;
									public getDurationUs(param0: number, param1: number): number;
									public constructor(param0: number, param1: com.google.android.exoplayer2.Format, param2: string, param3: com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase, param4: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>);
									public getTimeUs(param0: number): number;
									public getSegmentUrl(param0: number): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
									public getCacheKey(): string;
									public getSegmentNum(param0: number, param1: number): number;
									public getIndex(): com.google.android.exoplayer2.source.dash.DashSegmentIndex;
									public getSegmentCount(param0: number): number;
									public getIndexUri(): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
									public getNextSegmentAvailableTimeUs(param0: number, param1: number): number;
									public getFirstSegmentNum(): number;
									public getFirstAvailableSegmentNum(param0: number, param1: number): number;
									public isExplicit(): boolean;
									public getAvailableSegmentCount(param0: number, param1: number): number;
								}
								export class SingleSegmentRepresentation extends com.google.android.exoplayer2.source.dash.manifest.Representation {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.Representation.SingleSegmentRepresentation>;
									public uri: globalAndroid.net.Uri;
									public contentLength: number;
									public getCacheKey(): string;
									public static newInstance(param0: number, param1: com.google.android.exoplayer2.Format, param2: string, param3: number, param4: number, param5: number, param6: number, param7: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param8: string, param9: number): com.google.android.exoplayer2.source.dash.manifest.Representation.SingleSegmentRepresentation;
									public static newInstance(param0: number, param1: com.google.android.exoplayer2.Format, param2: string, param3: com.google.android.exoplayer2.source.dash.manifest.SegmentBase, param4: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param5: string): com.google.android.exoplayer2.source.dash.manifest.Representation;
									public static newInstance(param0: number, param1: com.google.android.exoplayer2.Format, param2: string, param3: com.google.android.exoplayer2.source.dash.manifest.SegmentBase, param4: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>): com.google.android.exoplayer2.source.dash.manifest.Representation;
									public constructor(param0: number, param1: com.google.android.exoplayer2.Format, param2: string, param3: com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SingleSegmentBase, param4: java.util.List<com.google.android.exoplayer2.source.dash.manifest.Descriptor>, param5: string, param6: number);
									public getIndex(): com.google.android.exoplayer2.source.dash.DashSegmentIndex;
									public static newInstance(param0: number, param1: com.google.android.exoplayer2.Format, param2: string, param3: com.google.android.exoplayer2.source.dash.manifest.SegmentBase): com.google.android.exoplayer2.source.dash.manifest.Representation;
									public getIndexUri(): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export module manifest {
							export abstract class SegmentBase {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.SegmentBase>;
								public getInitialization(param0: com.google.android.exoplayer2.source.dash.manifest.Representation): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
								public getPresentationTimeOffsetUs(): number;
								public constructor(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param1: number, param2: number);
							}
							export module SegmentBase {
								export abstract class MultiSegmentBase extends com.google.android.exoplayer2.source.dash.manifest.SegmentBase {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase>;
									public getSegmentTimeUs(param0: number): number;
									public getFirstSegmentNum(): number;
									public constructor(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param1: number, param2: number);
									public getSegmentDurationUs(param0: number, param1: number): number;
									public getSegmentUrl(param0: com.google.android.exoplayer2.source.dash.manifest.Representation, param1: number): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
									public getFirstAvailableSegmentNum(param0: number, param1: number): number;
									public isExplicit(): boolean;
									public getSegmentNum(param0: number, param1: number): number;
									public getAvailableSegmentCount(param0: number, param1: number): number;
									public getSegmentCount(param0: number): number;
									public constructor(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param1: number, param2: number, param3: number, param4: number, param5: java.util.List<com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTimelineElement>, param6: number, param7: number, param8: number);
									public getNextSegmentAvailableTimeUs(param0: number, param1: number): number;
								}
								export class SegmentList extends com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentList>;
									public constructor(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param1: number, param2: number);
									public getSegmentUrl(param0: com.google.android.exoplayer2.source.dash.manifest.Representation, param1: number): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
									public isExplicit(): boolean;
									public constructor(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param1: number, param2: number, param3: number, param4: number, param5: java.util.List<com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTimelineElement>, param6: number, param7: java.util.List<com.google.android.exoplayer2.source.dash.manifest.RangedUri>, param8: number, param9: number);
									public getSegmentCount(param0: number): number;
									public constructor(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param1: number, param2: number, param3: number, param4: number, param5: java.util.List<com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTimelineElement>, param6: number, param7: number, param8: number);
								}
								export class SegmentTemplate extends com.google.android.exoplayer2.source.dash.manifest.SegmentBase.MultiSegmentBase {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTemplate>;
									public constructor(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param1: number, param2: number, param3: number, param4: number, param5: number, param6: java.util.List<com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTimelineElement>, param7: number, param8: com.google.android.exoplayer2.source.dash.manifest.UrlTemplate, param9: com.google.android.exoplayer2.source.dash.manifest.UrlTemplate, param10: number, param11: number);
									public constructor(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param1: number, param2: number);
									public getInitialization(param0: com.google.android.exoplayer2.source.dash.manifest.Representation): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
									public getSegmentUrl(param0: com.google.android.exoplayer2.source.dash.manifest.Representation, param1: number): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
									public getSegmentCount(param0: number): number;
									public constructor(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param1: number, param2: number, param3: number, param4: number, param5: java.util.List<com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTimelineElement>, param6: number, param7: number, param8: number);
								}
								export class SegmentTimelineElement {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SegmentTimelineElement>;
									public hashCode(): number;
									public equals(param0: any): boolean;
									public constructor(param0: number, param1: number);
								}
								export class SingleSegmentBase extends com.google.android.exoplayer2.source.dash.manifest.SegmentBase {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.SegmentBase.SingleSegmentBase>;
									public constructor(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param1: number, param2: number, param3: number, param4: number);
									public constructor();
									public constructor(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri, param1: number, param2: number);
									public getIndex(): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export module manifest {
							export class ServiceDescriptionElement {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.ServiceDescriptionElement>;
								public targetOffsetMs: number;
								public minOffsetMs: number;
								public maxOffsetMs: number;
								public minPlaybackSpeed: number;
								public maxPlaybackSpeed: number;
								public constructor(param0: number, param1: number, param2: number, param3: number, param4: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export module manifest {
							export class SingleSegmentIndex extends com.google.android.exoplayer2.source.dash.DashSegmentIndex {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.SingleSegmentIndex>;
								public getTimeUs(param0: number): number;
								public getDurationUs(param0: number, param1: number): number;
								public getFirstAvailableSegmentNum(param0: number, param1: number): number;
								public getAvailableSegmentCount(param0: number, param1: number): number;
								public isExplicit(): boolean;
								public getNextSegmentAvailableTimeUs(param0: number, param1: number): number;
								public constructor(param0: com.google.android.exoplayer2.source.dash.manifest.RangedUri);
								public getSegmentUrl(param0: number): com.google.android.exoplayer2.source.dash.manifest.RangedUri;
								public getFirstSegmentNum(): number;
								public getSegmentNum(param0: number, param1: number): number;
								public getSegmentCount(param0: number): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export module manifest {
							export class UrlTemplate {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.UrlTemplate>;
								public static compile(param0: string): com.google.android.exoplayer2.source.dash.manifest.UrlTemplate;
								public buildUri(param0: string, param1: number, param2: number, param3: number): string;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export module manifest {
							export class UtcTimingElement {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.manifest.UtcTimingElement>;
								public schemeIdUri: string;
								public value: string;
								public toString(): string;
								public constructor(param0: string, param1: string);
							}
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module dash {
						export module offline {
							export class DashDownloader extends com.google.android.exoplayer2.offline.SegmentDownloader<com.google.android.exoplayer2.source.dash.manifest.DashManifest> {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.dash.offline.DashDownloader>;
								public getSegments(param0: com.google.android.exoplayer2.upstream.DataSource, param1: any, param2: boolean): java.util.List<com.google.android.exoplayer2.offline.SegmentDownloader.Segment>;
								public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>, param2: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param3: java.util.concurrent.Executor);
								public cancel(): void;
								public download(param0: com.google.android.exoplayer2.offline.Downloader.ProgressListener): void;
								/** @deprecated */
								public constructor(param0: globalAndroid.net.Uri, param1: java.util.List<com.google.android.exoplayer2.offline.StreamKey>, param2: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory);
								/** @deprecated */
								public constructor(param0: globalAndroid.net.Uri, param1: java.util.List<com.google.android.exoplayer2.offline.StreamKey>, param2: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param3: java.util.concurrent.Executor);
								public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param2: java.util.concurrent.Executor);
								public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<com.google.android.exoplayer2.source.dash.manifest.DashManifest>, param2: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param3: java.util.concurrent.Executor);
								public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory);
								public getSegments(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.source.dash.manifest.DashManifest, param2: boolean): java.util.List<com.google.android.exoplayer2.offline.SegmentDownloader.Segment>;
								public remove(): void;
							}
						}
					}
				}
			}
		}
	}
}



declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class Aes128DataSource extends com.google.android.exoplayer2.upstream.DataSource {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.Aes128DataSource>;
							public getCipherInstance(): javax.crypto.Cipher;
							public getUri(): globalAndroid.net.Uri;
							public close(): void;
							public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: androidNative.Array<number>, param2: androidNative.Array<number>);
							public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
							public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
							public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class BuildConfig {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.BuildConfig>;
							public static DEBUG: boolean;
							public static LIBRARY_PACKAGE_NAME: string;
							public static APPLICATION_ID: string;
							public static BUILD_TYPE: string;
							public static FLAVOR: string;
							public static VERSION_CODE: number;
							public static VERSION_NAME: string;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class BundledHlsMediaChunkExtractor extends com.google.android.exoplayer2.source.hls.HlsMediaChunkExtractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.BundledHlsMediaChunkExtractor>;
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public onTruncatedSegmentParsed(): void;
							public constructor(param0: com.google.android.exoplayer2.extractor.Extractor, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.util.TimestampAdjuster);
							public isPackedAudioExtractor(): boolean;
							public isReusable(): boolean;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public recreate(): com.google.android.exoplayer2.source.hls.HlsMediaChunkExtractor;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class DefaultHlsDataSourceFactory extends com.google.android.exoplayer2.source.hls.HlsDataSourceFactory {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.DefaultHlsDataSourceFactory>;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource.Factory);
							public createDataSource(param0: number): com.google.android.exoplayer2.upstream.DataSource;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class DefaultHlsExtractorFactory extends com.google.android.exoplayer2.source.hls.HlsExtractorFactory {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.DefaultHlsExtractorFactory>;
							public constructor();
							public createExtractor(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.Format, param2: java.util.List<com.google.android.exoplayer2.Format>, param3: com.google.android.exoplayer2.util.TimestampAdjuster, param4: java.util.Map<string,java.util.List<string>>, param5: com.google.android.exoplayer2.extractor.ExtractorInput): com.google.android.exoplayer2.source.hls.HlsMediaChunkExtractor;
							public constructor(param0: number, param1: boolean);
							public createExtractor(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.Format, param2: java.util.List<com.google.android.exoplayer2.Format>, param3: com.google.android.exoplayer2.util.TimestampAdjuster, param4: java.util.Map<string,java.util.List<string>>, param5: com.google.android.exoplayer2.extractor.ExtractorInput): com.google.android.exoplayer2.source.hls.BundledHlsMediaChunkExtractor;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class FullSegmentEncryptionKeyCache {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.FullSegmentEncryptionKeyCache>;
							public remove(param0: globalAndroid.net.Uri): androidNative.Array<number>;
							public get(param0: globalAndroid.net.Uri): androidNative.Array<number>;
							public put(param0: globalAndroid.net.Uri, param1: androidNative.Array<number>): androidNative.Array<number>;
							public constructor(param0: number);
							public containsUri(param0: globalAndroid.net.Uri): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class HlsChunkSource {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsChunkSource>;
							public static CHUNK_PUBLICATION_STATE_PRELOAD: number;
							public static CHUNK_PUBLICATION_STATE_PUBLISHED: number;
							public static CHUNK_PUBLICATION_STATE_REMOVED: number;
							public getChunkPublicationState(param0: com.google.android.exoplayer2.source.hls.HlsMediaChunk): number;
							public onChunkLoadCompleted(param0: com.google.android.exoplayer2.source.chunk.Chunk): void;
							public shouldCancelLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
							public onPlaylistError(param0: globalAndroid.net.Uri, param1: number): boolean;
							public getNextChunk(param0: number, param1: number, param2: java.util.List<com.google.android.exoplayer2.source.hls.HlsMediaChunk>, param3: boolean, param4: com.google.android.exoplayer2.source.hls.HlsChunkSource.HlsChunkHolder): void;
							public reset(): void;
							public getTrackGroup(): com.google.android.exoplayer2.source.TrackGroup;
							public getTrackSelection(): com.google.android.exoplayer2.trackselection.ExoTrackSelection;
							public maybeExcludeTrack(param0: com.google.android.exoplayer2.source.chunk.Chunk, param1: number): boolean;
							public setIsTimestampMaster(param0: boolean): void;
							public maybeThrowError(): void;
							public getPreferredQueueSize(param0: number, param1: java.util.List<any>): number;
							public constructor(param0: com.google.android.exoplayer2.source.hls.HlsExtractorFactory, param1: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker, param2: androidNative.Array<globalAndroid.net.Uri>, param3: androidNative.Array<com.google.android.exoplayer2.Format>, param4: com.google.android.exoplayer2.source.hls.HlsDataSourceFactory, param5: com.google.android.exoplayer2.upstream.TransferListener, param6: com.google.android.exoplayer2.source.hls.TimestampAdjusterProvider, param7: java.util.List<com.google.android.exoplayer2.Format>);
							public setTrackSelection(param0: com.google.android.exoplayer2.trackselection.ExoTrackSelection): void;
							public createMediaChunkIterators(param0: com.google.android.exoplayer2.source.hls.HlsMediaChunk, param1: number): androidNative.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>;
						}
						export module HlsChunkSource {
							export class EncryptionKeyChunk extends com.google.android.exoplayer2.source.chunk.DataChunk {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsChunkSource.EncryptionKeyChunk>;
								public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: any, param6: number, param7: number);
								public getResult(): androidNative.Array<number>;
								public cancelLoad(): void;
								public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: com.google.android.exoplayer2.Format, param3: number, param4: any, param5: androidNative.Array<number>);
								public consume(param0: androidNative.Array<number>, param1: number): void;
								public load(): void;
								public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number, param3: com.google.android.exoplayer2.Format, param4: number, param5: any, param6: androidNative.Array<number>);
							}
							export class HlsChunkHolder {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsChunkSource.HlsChunkHolder>;
								public chunk: com.google.android.exoplayer2.source.chunk.Chunk;
								public endOfStream: boolean;
								public playlistUrl: globalAndroid.net.Uri;
								public clear(): void;
								public constructor();
							}
							export class HlsMediaPlaylistSegmentIterator extends com.google.android.exoplayer2.source.chunk.BaseMediaChunkIterator {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsChunkSource.HlsMediaPlaylistSegmentIterator>;
								public getChunkStartTimeUs(): number;
								public getDataSpec(): com.google.android.exoplayer2.upstream.DataSpec;
								public constructor(param0: number, param1: number);
								public reset(): void;
								public getChunkEndTimeUs(): number;
								public next(): boolean;
								public constructor(param0: string, param1: number, param2: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.SegmentBase>);
								public isEnded(): boolean;
							}
							export class InitializationTrackSelection extends com.google.android.exoplayer2.trackselection.BaseTrackSelection {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsChunkSource.InitializationTrackSelection>;
								public onRebuffer(): void;
								public getSelectedIndex(): number;
								public disable(): void;
								public enable(): void;
								public updateSelectedTrack(param0: number, param1: number, param2: number, param3: java.util.List<any>, param4: androidNative.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>): void;
								public onDiscontinuity(): void;
								public onPlayWhenReadyChanged(param0: boolean): void;
								public getSelectedFormat(): com.google.android.exoplayer2.Format;
								public getSelectionData(): any;
								public shouldCancelChunkLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
								public constructor(param0: com.google.android.exoplayer2.source.TrackGroup, param1: androidNative.Array<number>);
								public getSelectionReason(): number;
								public evaluateQueueSize(param0: number, param1: java.util.List<any>): number;
								public blacklist(param0: number, param1: number): boolean;
								public getSelectedIndexInTrackGroup(): number;
								public onPlaybackSpeed(param0: number): void;
							}
							export class SegmentBaseHolder {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsChunkSource.SegmentBaseHolder>;
								public segmentBase: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.SegmentBase;
								public mediaSequence: number;
								public partIndex: number;
								public isPreload: boolean;
								public constructor(param0: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.SegmentBase, param1: number, param2: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class HlsDataSourceFactory {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsDataSourceFactory>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.hls.HlsDataSourceFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createDataSource(param0: number): com.google.android.exoplayer2.upstream.DataSource;
							});
							public constructor();
							public createDataSource(param0: number): com.google.android.exoplayer2.upstream.DataSource;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class HlsExtractorFactory {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsExtractorFactory>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.hls.HlsExtractorFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createExtractor(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.Format, param2: java.util.List<com.google.android.exoplayer2.Format>, param3: com.google.android.exoplayer2.util.TimestampAdjuster, param4: java.util.Map<string,java.util.List<string>>, param5: com.google.android.exoplayer2.extractor.ExtractorInput): com.google.android.exoplayer2.source.hls.HlsMediaChunkExtractor;
								<clinit>(): void;
							});
							public constructor();
							public static DEFAULT: com.google.android.exoplayer2.source.hls.HlsExtractorFactory;
							public createExtractor(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.Format, param2: java.util.List<com.google.android.exoplayer2.Format>, param3: com.google.android.exoplayer2.util.TimestampAdjuster, param4: java.util.Map<string,java.util.List<string>>, param5: com.google.android.exoplayer2.extractor.ExtractorInput): com.google.android.exoplayer2.source.hls.HlsMediaChunkExtractor;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class HlsManifest {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsManifest>;
							public masterPlaylist: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist;
							public mediaPlaylist: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class HlsMediaChunk extends com.google.android.exoplayer2.source.chunk.MediaChunk {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsMediaChunk>;
							public static PRIV_TIMESTAMP_FRAME_OWNER: string;
							public uid: number;
							public discontinuitySequenceNumber: number;
							public playlistUrl: globalAndroid.net.Uri;
							public shouldSpliceIn: boolean;
							public partIndex: number;
							public isLoadCompleted(): boolean;
							public static createInstance(param0: com.google.android.exoplayer2.source.hls.HlsExtractorFactory, param1: com.google.android.exoplayer2.upstream.DataSource, param2: com.google.android.exoplayer2.Format, param3: number, param4: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist, param5: com.google.android.exoplayer2.source.hls.HlsChunkSource.SegmentBaseHolder, param6: globalAndroid.net.Uri, param7: java.util.List<com.google.android.exoplayer2.Format>, param8: number, param9: any, param10: boolean, param11: com.google.android.exoplayer2.source.hls.TimestampAdjusterProvider, param12: com.google.android.exoplayer2.source.hls.HlsMediaChunk, param13: androidNative.Array<number>, param14: androidNative.Array<number>): com.google.android.exoplayer2.source.hls.HlsMediaChunk;
							public cancelLoad(): void;
							public init(param0: com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper, param1: com.google.common.collect.ImmutableList<java.lang.Integer>): void;
							public load(): void;
							public isPublished(): boolean;
							public publish(): void;
							public getFirstSampleIndex(param0: number): number;
							public invalidateExtractor(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class HlsMediaChunkExtractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsMediaChunkExtractor>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.hls.HlsMediaChunkExtractor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
								read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
								isPackedAudioExtractor(): boolean;
								isReusable(): boolean;
								recreate(): com.google.android.exoplayer2.source.hls.HlsMediaChunkExtractor;
								onTruncatedSegmentParsed(): void;
							});
							public constructor();
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public onTruncatedSegmentParsed(): void;
							public isPackedAudioExtractor(): boolean;
							public isReusable(): boolean;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public recreate(): com.google.android.exoplayer2.source.hls.HlsMediaChunkExtractor;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class HlsMediaPeriod implements com.google.android.exoplayer2.source.MediaPeriod, com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper.Callback, com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsMediaPeriod>;
							public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
							public selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>, param1: androidNative.Array<boolean>, param2: androidNative.Array<com.google.android.exoplayer2.source.SampleStream>, param3: androidNative.Array<boolean>, param4: number): number;
							public onContinueLoadingRequested(param0: any): void;
							public constructor(param0: com.google.android.exoplayer2.source.hls.HlsExtractorFactory, param1: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker, param2: com.google.android.exoplayer2.source.hls.HlsDataSourceFactory, param3: com.google.android.exoplayer2.upstream.TransferListener, param4: com.google.android.exoplayer2.drm.DrmSessionManager, param5: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher, param6: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy, param7: com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher, param8: com.google.android.exoplayer2.upstream.Allocator, param9: com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory, param10: boolean, param11: number, param12: boolean);
							public getStreamKeys(param0: java.util.List<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
							public onPlaylistRefreshRequired(param0: globalAndroid.net.Uri): void;
							public isLoading(): boolean;
							public onPlaylistError(param0: globalAndroid.net.Uri, param1: number): boolean;
							public release(): void;
							public continueLoading(param0: number): boolean;
							public onPlaylistChanged(): void;
							public maybeThrowPrepareError(): void;
							public getBufferedPositionUs(): number;
							public getNextLoadPositionUs(): number;
							public seekToUs(param0: number): number;
							public prepare(param0: com.google.android.exoplayer2.source.MediaPeriod.Callback, param1: number): void;
							public discardBuffer(param0: number, param1: boolean): void;
							public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
							public readDiscontinuity(): number;
							public onPrepared(): void;
							public onContinueLoadingRequested(param0: com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper): void;
							public reevaluateBuffer(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class HlsMediaSource extends com.google.android.exoplayer2.source.BaseMediaSource implements com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.PrimaryPlaylistListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsMediaSource>;
							public static METADATA_TYPE_ID3: number;
							public static METADATA_TYPE_EMSG: number;
							public getMediaItem(): com.google.android.exoplayer2.MediaItem;
							public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public releaseSourceInternal(): void;
							/** @deprecated */
							public getTag(): any;
							public maybeThrowSourceInfoRefreshError(): void;
							public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public onPrimaryPlaylistRefreshed(param0: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist): void;
							public isSingleWindow(): boolean;
							public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
							public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
							public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
							public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
							public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
							public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						}
						export module HlsMediaSource {
							export class Factory extends com.google.android.exoplayer2.source.MediaSourceFactory {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsMediaSource.Factory>;
								public getSupportedTypes(): androidNative.Array<number>;
								/** @deprecated */
								public setTag(param0: any): com.google.android.exoplayer2.source.hls.HlsMediaSource.Factory;
								/** @deprecated */
								public createMediaSource(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.hls.HlsMediaSource;
								public setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.MediaSourceFactory;
								public setExtractorFactory(param0: com.google.android.exoplayer2.source.hls.HlsExtractorFactory): com.google.android.exoplayer2.source.hls.HlsMediaSource.Factory;
								public setPlaylistParserFactory(param0: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory): com.google.android.exoplayer2.source.hls.HlsMediaSource.Factory;
								public setDrmSessionManager(param0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.hls.HlsMediaSource.Factory;
								public setDrmSessionManagerProvider(param0: com.google.android.exoplayer2.drm.DrmSessionManagerProvider): com.google.android.exoplayer2.source.MediaSourceFactory;
								public createMediaSource(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.MediaSource;
								/** @deprecated */
								public createMediaSource(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.MediaSource;
								/** @deprecated */
								public setDrmHttpDataSourceFactory(param0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.MediaSourceFactory;
								public constructor(param0: com.google.android.exoplayer2.upstream.DataSource.Factory);
								/** @deprecated */
								public setStreamKeys(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.hls.HlsMediaSource.Factory;
								/** @deprecated */
								public setStreamKeys(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.MediaSourceFactory;
								public setUseSessionKeys(param0: boolean): com.google.android.exoplayer2.source.hls.HlsMediaSource.Factory;
								public setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.hls.HlsMediaSource.Factory;
								public setAllowChunklessPreparation(param0: boolean): com.google.android.exoplayer2.source.hls.HlsMediaSource.Factory;
								public setDrmSessionManagerProvider(param0: com.google.android.exoplayer2.drm.DrmSessionManagerProvider): com.google.android.exoplayer2.source.hls.HlsMediaSource.Factory;
								public setDrmHttpDataSourceFactory(param0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.hls.HlsMediaSource.Factory;
								/** @deprecated */
								public setDrmSessionManager(param0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.MediaSourceFactory;
								public setPlaylistTrackerFactory(param0: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.Factory): com.google.android.exoplayer2.source.hls.HlsMediaSource.Factory;
								public setCompositeSequenceableLoaderFactory(param0: com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory): com.google.android.exoplayer2.source.hls.HlsMediaSource.Factory;
								public createMediaSource(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.hls.HlsMediaSource;
								public setMetadataType(param0: number): com.google.android.exoplayer2.source.hls.HlsMediaSource.Factory;
								/** @deprecated */
								public setDrmUserAgent(param0: string): com.google.android.exoplayer2.source.MediaSourceFactory;
								public constructor(param0: com.google.android.exoplayer2.source.hls.HlsDataSourceFactory);
								public setDrmUserAgent(param0: string): com.google.android.exoplayer2.source.hls.HlsMediaSource.Factory;
							}
							export class MetadataType {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsMediaSource.MetadataType>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.hls.HlsMediaSource$MetadataType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class HlsSampleStream extends com.google.android.exoplayer2.source.SampleStream {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsSampleStream>;
							public readData(param0: com.google.android.exoplayer2.FormatHolder, param1: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param2: boolean): number;
							public isReady(): boolean;
							public skipData(param0: number): number;
							public constructor(param0: com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper, param1: number);
							public maybeThrowError(): void;
							public unbindSampleQueue(): void;
							public bindSampleQueue(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class HlsSampleStreamWrapper extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper>;
							public static SAMPLE_QUEUE_INDEX_PENDING: number;
							public static SAMPLE_QUEUE_INDEX_NO_MAPPING_FATAL: number;
							public static SAMPLE_QUEUE_INDEX_NO_MAPPING_NON_FATAL: number;
							public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
							public onLoadCompleted(param0: any, param1: number, param2: number): void;
							public onNewExtractor(): void;
							public maybeThrowPrepareError(): void;
							public unbindSampleQueue(param0: number): void;
							public onLoadError(param0: com.google.android.exoplayer2.source.chunk.Chunk, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							public readData(param0: number, param1: com.google.android.exoplayer2.FormatHolder, param2: com.google.android.exoplayer2.decoder.DecoderInputBuffer, param3: boolean): number;
							public bindSampleQueueToSampleStream(param0: number): number;
							public onPlaylistUpdated(): void;
							public onUpstreamFormatChanged(param0: com.google.android.exoplayer2.Format): void;
							public continuePreparing(): void;
							public onLoadCanceled(param0: com.google.android.exoplayer2.source.chunk.Chunk, param1: number, param2: number, param3: boolean): void;
							public selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>, param1: androidNative.Array<boolean>, param2: androidNative.Array<com.google.android.exoplayer2.source.SampleStream>, param3: androidNative.Array<boolean>, param4: number, param5: boolean): boolean;
							public setDrmInitData(param0: com.google.android.exoplayer2.drm.DrmInitData): void;
							public onLoadCanceled(param0: any, param1: number, param2: number, param3: boolean): void;
							public skipData(param0: number, param1: number): number;
							public onPlaylistError(param0: globalAndroid.net.Uri, param1: number): boolean;
							public isLoading(): boolean;
							public constructor(param0: number, param1: com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper.Callback, param2: com.google.android.exoplayer2.source.hls.HlsChunkSource, param3: java.util.Map<string,com.google.android.exoplayer2.drm.DrmInitData>, param4: com.google.android.exoplayer2.upstream.Allocator, param5: number, param6: com.google.android.exoplayer2.Format, param7: com.google.android.exoplayer2.drm.DrmSessionManager, param8: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher, param9: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy, param10: com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher, param11: number);
							public seekToUs(param0: number, param1: boolean): boolean;
							public release(): void;
							public getPrimaryTrackGroupIndex(): number;
							public continueLoading(param0: number): boolean;
							public prepareWithMasterPlaylistInfo(param0: androidNative.Array<com.google.android.exoplayer2.source.TrackGroup>, param1: number, param2: androidNative.Array<number>): void;
							public endTracks(): void;
							public seekMap(param0: com.google.android.exoplayer2.extractor.SeekMap): void;
							public getBufferedPositionUs(): number;
							public getNextLoadPositionUs(): number;
							public onLoadError(param0: any, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							public maybeThrowError(param0: number): void;
							public discardBuffer(param0: number, param1: boolean): void;
							public isReady(param0: number): boolean;
							public onLoaderReleased(): void;
							public track(param0: number, param1: number): com.google.android.exoplayer2.extractor.TrackOutput;
							public setIsTimestampMaster(param0: boolean): void;
							public onLoadCompleted(param0: com.google.android.exoplayer2.source.chunk.Chunk, param1: number, param2: number): void;
							public maybeThrowError(): void;
							public setSampleOffsetUs(param0: number): void;
							public reevaluateBuffer(param0: number): void;
						}
						export module HlsSampleStreamWrapper {
							export class Callback extends com.google.android.exoplayer2.source.SequenceableLoader.Callback<com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper> {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper.Callback>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onPrepared(): void;
									onPlaylistRefreshRequired(param0: globalAndroid.net.Uri): void;
									onContinueLoadingRequested(param0: any): void;
								});
								public constructor();
								public onContinueLoadingRequested(param0: any): void;
								public onPrepared(): void;
								public onPlaylistRefreshRequired(param0: globalAndroid.net.Uri): void;
							}
							export class EmsgUnwrappingTrackOutput extends com.google.android.exoplayer2.extractor.TrackOutput {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper.EmsgUnwrappingTrackOutput>;
								public constructor(param0: com.google.android.exoplayer2.extractor.TrackOutput, param1: number);
								public sampleMetadata(param0: number, param1: number, param2: number, param3: number, param4: com.google.android.exoplayer2.extractor.TrackOutput.CryptoData): void;
								public sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean): number;
								public sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number, param2: number): void;
								public sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): void;
								public format(param0: com.google.android.exoplayer2.Format): void;
								public sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean, param3: number): number;
							}
							export class HlsSampleQueue extends com.google.android.exoplayer2.source.SampleQueue {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsSampleStreamWrapper.HlsSampleQueue>;
								public sampleMetadata(param0: number, param1: number, param2: number, param3: number, param4: com.google.android.exoplayer2.extractor.TrackOutput.CryptoData): void;
								public setSourceChunk(param0: com.google.android.exoplayer2.source.hls.HlsMediaChunk): void;
								public setDrmInitData(param0: com.google.android.exoplayer2.drm.DrmInitData): void;
								public sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean): number;
								public getAdjustedUpstreamFormat(param0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.Format;
								public sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number, param2: number): void;
								public sampleData(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: number): void;
								public format(param0: com.google.android.exoplayer2.Format): void;
								public sampleData(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number, param2: boolean, param3: number): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class HlsTrackMetadataEntry extends com.google.android.exoplayer2.metadata.Metadata.Entry {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry>;
							public groupId: string;
							public name: string;
							public variantInfos: java.util.List<com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry.VariantInfo>;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry>;
							public getWrappedMetadataFormat(): com.google.android.exoplayer2.Format;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public describeContents(): number;
							public getWrappedMetadataBytes(): androidNative.Array<number>;
							public constructor(param0: string, param1: string, param2: java.util.List<com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry.VariantInfo>);
							public toString(): string;
							public equals(param0: any): boolean;
						}
						export module HlsTrackMetadataEntry {
							export class VariantInfo {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry.VariantInfo>;
								public averageBitrate: number;
								public peakBitrate: number;
								public videoGroupId: string;
								public audioGroupId: string;
								public subtitleGroupId: string;
								public captionGroupId: string;
								public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.source.hls.HlsTrackMetadataEntry.VariantInfo>;
								public constructor(param0: number, param1: number, param2: string, param3: string, param4: string, param5: string);
								public describeContents(): number;
								public equals(param0: any): boolean;
								public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
								public hashCode(): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class MediaParserHlsMediaChunkExtractor extends com.google.android.exoplayer2.source.hls.HlsMediaChunkExtractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.MediaParserHlsMediaChunkExtractor>;
							public static FACTORY: com.google.android.exoplayer2.source.hls.HlsExtractorFactory;
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public onTruncatedSegmentParsed(): void;
							public constructor(param0: globalAndroid.media.MediaParser, param1: com.google.android.exoplayer2.source.mediaparser.OutputConsumerAdapterV30, param2: com.google.android.exoplayer2.Format, param3: boolean, param4: com.google.common.collect.ImmutableList<globalAndroid.media.MediaFormat>, param5: number);
							public isPackedAudioExtractor(): boolean;
							public isReusable(): boolean;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public recreate(): com.google.android.exoplayer2.source.hls.HlsMediaChunkExtractor;
						}
						export module MediaParserHlsMediaChunkExtractor {
							export class PeekingInputReader {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.MediaParserHlsMediaChunkExtractor.PeekingInputReader>;
								public getPosition(): number;
								public getLength(): number;
								public seekToPosition(param0: number): void;
								public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class SampleQueueMappingException {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.SampleQueueMappingException>;
							public constructor(param0: string);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class TimestampAdjusterProvider {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.TimestampAdjusterProvider>;
							public constructor();
							public getAdjuster(param0: number): com.google.android.exoplayer2.util.TimestampAdjuster;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class UnexpectedSampleTimestampException {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.UnexpectedSampleTimestampException>;
							public mediaChunk: com.google.android.exoplayer2.source.chunk.MediaChunk;
							public lastAcceptedSampleTimeUs: number;
							public rejectedSampleTimeUs: number;
							public constructor(param0: com.google.android.exoplayer2.source.chunk.MediaChunk, param1: number, param2: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export class WebvttExtractor extends com.google.android.exoplayer2.extractor.Extractor {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.WebvttExtractor>;
							public init(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public sniff(param0: com.google.android.exoplayer2.extractor.ExtractorInput): boolean;
							public constructor(param0: string, param1: com.google.android.exoplayer2.util.TimestampAdjuster);
							public seek(param0: number, param1: number): void;
							public release(): void;
							public read(param0: com.google.android.exoplayer2.extractor.ExtractorInput, param1: com.google.android.exoplayer2.extractor.PositionHolder): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export module offline {
							export class HlsDownloader extends com.google.android.exoplayer2.offline.SegmentDownloader<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist> {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.offline.HlsDownloader>;
								public getSegments(param0: com.google.android.exoplayer2.upstream.DataSource, param1: any, param2: boolean): java.util.List<com.google.android.exoplayer2.offline.SegmentDownloader.Segment>;
								public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>, param2: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param3: java.util.concurrent.Executor);
								public cancel(): void;
								public download(param0: com.google.android.exoplayer2.offline.Downloader.ProgressListener): void;
								/** @deprecated */
								public constructor(param0: globalAndroid.net.Uri, param1: java.util.List<com.google.android.exoplayer2.offline.StreamKey>, param2: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory);
								public getSegments(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist, param2: boolean): java.util.List<com.google.android.exoplayer2.offline.SegmentDownloader.Segment>;
								/** @deprecated */
								public constructor(param0: globalAndroid.net.Uri, param1: java.util.List<com.google.android.exoplayer2.offline.StreamKey>, param2: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param3: java.util.concurrent.Executor);
								public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param2: java.util.concurrent.Executor);
								public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory);
								public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>, param2: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param3: java.util.concurrent.Executor);
								public remove(): void;
							}
						}
					}
				}
			}
		}
	}
}



declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export module playlist {
							export class DefaultHlsPlaylistParserFactory extends com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistParserFactory>;
								public createPlaylistParser(): com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>;
								public createPlaylistParser(param0: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist, param1: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist): com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export module playlist {
							export class DefaultHlsPlaylistTracker extends java.lang.Object {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker>;
								public static FACTORY: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.Factory;
								public static DEFAULT_PLAYLIST_STUCK_TARGET_DURATION_COEFFICIENT: number;
								public constructor(param0: com.google.android.exoplayer2.source.hls.HlsDataSourceFactory, param1: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy, param2: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory, param3: number);
								public constructor(param0: com.google.android.exoplayer2.source.hls.HlsDataSourceFactory, param1: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy, param2: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory);
								public onLoadCompleted(param0: any, param1: number, param2: number): void;
								public removeListener(param0: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener): void;
								public isSnapshotValid(param0: globalAndroid.net.Uri): boolean;
								public getMasterPlaylist(): com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist;
								public maybeThrowPlaylistRefreshError(param0: globalAndroid.net.Uri): void;
								public start(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher, param2: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.PrimaryPlaylistListener): void;
								public getPlaylistSnapshot(param0: globalAndroid.net.Uri, param1: boolean): com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist;
								public maybeThrowPrimaryPlaylistRefreshError(): void;
								public addListener(param0: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener): void;
								public getInitialStartTimeUs(): number;
								public isLive(): boolean;
								public onLoadCanceled(param0: com.google.android.exoplayer2.upstream.ParsingLoadable<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>, param1: number, param2: number, param3: boolean): void;
								public onLoadError(param0: com.google.android.exoplayer2.upstream.ParsingLoadable<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
								public stop(): void;
								public onLoadCanceled(param0: any, param1: number, param2: number, param3: boolean): void;
								public onLoadError(param0: any, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
								public refreshPlaylist(param0: globalAndroid.net.Uri): void;
								public onLoadCompleted(param0: com.google.android.exoplayer2.upstream.ParsingLoadable<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>, param1: number, param2: number): void;
							}
							export module DefaultHlsPlaylistTracker {
								export class MediaPlaylistBundle extends com.google.android.exoplayer2.upstream.Loader.Callback<com.google.android.exoplayer2.upstream.ParsingLoadable<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>> {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker.MediaPlaylistBundle>;
									public onLoadError(param0: any, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
									public onLoadError(param0: com.google.android.exoplayer2.upstream.ParsingLoadable<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
									public onLoadCompleted(param0: com.google.android.exoplayer2.upstream.ParsingLoadable<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>, param1: number, param2: number): void;
									public release(): void;
									public constructor(param0: com.google.android.exoplayer2.source.hls.playlist.DefaultHlsPlaylistTracker, param1: globalAndroid.net.Uri);
									public getPlaylistSnapshot(): com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist;
									public isSnapshotValid(): boolean;
									public onLoadCompleted(param0: any, param1: number, param2: number): void;
									public onLoadCanceled(param0: com.google.android.exoplayer2.upstream.ParsingLoadable<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>, param1: number, param2: number, param3: boolean): void;
									public loadPlaylist(): void;
									public onLoadCanceled(param0: any, param1: number, param2: number, param3: boolean): void;
									public maybeThrowPlaylistRefreshError(): void;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export module playlist {
							export class FilteringHlsPlaylistParserFactory extends com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.FilteringHlsPlaylistParserFactory>;
								public createPlaylistParser(): com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>;
								public createPlaylistParser(param0: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist, param1: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist): com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>;
								public constructor(param0: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory, param1: java.util.List<com.google.android.exoplayer2.offline.StreamKey>);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export module playlist {
							export class HlsMasterPlaylist extends com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist>;
								public static EMPTY: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist;
								public static GROUP_INDEX_VARIANT: number;
								public static GROUP_INDEX_AUDIO: number;
								public static GROUP_INDEX_SUBTITLE: number;
								public mediaPlaylistUrls: java.util.List<globalAndroid.net.Uri>;
								public variants: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist.Variant>;
								public videos: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist.Rendition>;
								public audios: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist.Rendition>;
								public subtitles: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist.Rendition>;
								public closedCaptions: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist.Rendition>;
								public muxedAudioFormat: com.google.android.exoplayer2.Format;
								public muxedCaptionFormats: java.util.List<com.google.android.exoplayer2.Format>;
								public variableDefinitions: java.util.Map<string,string>;
								public sessionKeyDrmInitData: java.util.List<com.google.android.exoplayer2.drm.DrmInitData>;
								public static createSingleVariantMasterPlaylist(param0: string): com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist;
								public constructor(param0: string, param1: java.util.List<string>, param2: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist.Variant>, param3: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist.Rendition>, param4: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist.Rendition>, param5: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist.Rendition>, param6: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist.Rendition>, param7: com.google.android.exoplayer2.Format, param8: java.util.List<com.google.android.exoplayer2.Format>, param9: boolean, param10: java.util.Map<string,string>, param11: java.util.List<com.google.android.exoplayer2.drm.DrmInitData>);
								public copy(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist;
								public copy(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): any;
								public constructor(param0: string, param1: java.util.List<string>, param2: boolean);
							}
							export module HlsMasterPlaylist {
								export class Rendition {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist.Rendition>;
									public url: globalAndroid.net.Uri;
									public format: com.google.android.exoplayer2.Format;
									public groupId: string;
									public name: string;
									public constructor(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.Format, param2: string, param3: string);
								}
								export class Variant {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist.Variant>;
									public url: globalAndroid.net.Uri;
									public format: com.google.android.exoplayer2.Format;
									public videoGroupId: string;
									public audioGroupId: string;
									public subtitleGroupId: string;
									public captionGroupId: string;
									public static createMediaPlaylistVariantUrl(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist.Variant;
									public copyWithFormat(param0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist.Variant;
									public constructor(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.Format, param2: string, param3: string, param4: string, param5: string);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export module playlist {
							export class HlsMediaPlaylist extends com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist>;
								public static PLAYLIST_TYPE_UNKNOWN: number;
								public static PLAYLIST_TYPE_VOD: number;
								public static PLAYLIST_TYPE_EVENT: number;
								public playlistType: number;
								public startOffsetUs: number;
								public startTimeUs: number;
								public hasDiscontinuitySequence: boolean;
								public discontinuitySequence: number;
								public mediaSequence: number;
								public version: number;
								public targetDurationUs: number;
								public partTargetDurationUs: number;
								public hasEndTag: boolean;
								public hasProgramDateTime: boolean;
								public protectionSchemes: com.google.android.exoplayer2.drm.DrmInitData;
								public segments: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.Segment>;
								public trailingParts: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.Part>;
								public renditionReports: java.util.Map<globalAndroid.net.Uri,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.RenditionReport>;
								public durationUs: number;
								public serverControl: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.ServerControl;
								public copyWithEndTag(): com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist;
								public isNewerThan(param0: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist): boolean;
								public copy(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist;
								public copyWith(param0: number, param1: number): com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist;
								public copy(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): any;
								public constructor(param0: string, param1: java.util.List<string>, param2: boolean);
								public getEndTimeUs(): number;
								public constructor(param0: number, param1: string, param2: java.util.List<string>, param3: number, param4: number, param5: boolean, param6: number, param7: number, param8: number, param9: number, param10: number, param11: boolean, param12: boolean, param13: boolean, param14: com.google.android.exoplayer2.drm.DrmInitData, param15: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.Segment>, param16: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.Part>, param17: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.ServerControl, param18: java.util.Map<globalAndroid.net.Uri,com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.RenditionReport>);
							}
							export module HlsMediaPlaylist {
								export class Part extends com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.SegmentBase {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.Part>;
									public isIndependent: boolean;
									public isPreload: boolean;
									public constructor(param0: string, param1: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.Segment, param2: number, param3: number, param4: number, param5: com.google.android.exoplayer2.drm.DrmInitData, param6: string, param7: string, param8: number, param9: number, param10: boolean, param11: boolean, param12: boolean);
									public copyWith(param0: number, param1: number): com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.Part;
								}
								export class PlaylistType {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.PlaylistType>;
									/**
									 * Constructs a new instance of the com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist$PlaylistType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
									});
									public constructor();
								}
								export class RenditionReport {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.RenditionReport>;
									public playlistUri: globalAndroid.net.Uri;
									public lastMediaSequence: number;
									public lastPartIndex: number;
									public constructor(param0: globalAndroid.net.Uri, param1: number, param2: number);
								}
								export class Segment extends com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.SegmentBase {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.Segment>;
									public title: string;
									public parts: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.Part>;
									public constructor(param0: string, param1: number, param2: number, param3: string, param4: string);
									public constructor(param0: string, param1: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.Segment, param2: string, param3: number, param4: number, param5: number, param6: com.google.android.exoplayer2.drm.DrmInitData, param7: string, param8: string, param9: number, param10: number, param11: boolean, param12: java.util.List<com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.Part>);
									public copyWith(param0: number, param1: number): com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.Segment;
								}
								export class SegmentBase extends java.lang.Comparable<java.lang.Long> {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.SegmentBase>;
									public url: string;
									public initializationSegment: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.Segment;
									public durationUs: number;
									public relativeDiscontinuitySequence: number;
									public relativeStartTimeUs: number;
									public drmInitData: com.google.android.exoplayer2.drm.DrmInitData;
									public fullSegmentEncryptionKeyUri: string;
									public encryptionIV: string;
									public byteRangeOffset: number;
									public byteRangeLength: number;
									public hasGapTag: boolean;
									public compareTo(param0: java.lang.Long): number;
								}
								export class ServerControl {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist.ServerControl>;
									public skipUntilUs: number;
									public canSkipDateRanges: boolean;
									public holdBackUs: number;
									public partHoldBackUs: number;
									public canBlockReload: boolean;
									public constructor(param0: number, param1: boolean, param2: number, param3: number, param4: boolean);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export module playlist {
							export abstract class HlsPlaylist extends com.google.android.exoplayer2.offline.FilterableManifest<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist> {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>;
								public baseUri: string;
								public tags: java.util.List<string>;
								public hasIndependentSegments: boolean;
								public copy(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): any;
								public constructor(param0: string, param1: java.util.List<string>, param2: boolean);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export module playlist {
							export class HlsPlaylistParser extends com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist> {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser>;
								public constructor(param0: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist, param1: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist);
								public parse(param0: globalAndroid.net.Uri, param1: java.io.InputStream): any;
								public constructor();
								public parse(param0: globalAndroid.net.Uri, param1: java.io.InputStream): com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist;
							}
							export module HlsPlaylistParser {
								export class DeltaUpdateException {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser.DeltaUpdateException>;
									public constructor();
								}
								export class LineIterator {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParser.LineIterator>;
									public hasNext(): boolean;
									public next(): string;
									public constructor(param0: java.util.Queue<string>, param1: java.io.BufferedReader);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export module playlist {
							export class HlsPlaylistParserFactory {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									createPlaylistParser(): com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>;
									createPlaylistParser(param0: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist, param1: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist): com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>;
								});
								public constructor();
								public createPlaylistParser(): com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>;
								public createPlaylistParser(param0: com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist, param1: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist): com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylist>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module hls {
						export module playlist {
							export class HlsPlaylistTracker {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									start(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher, param2: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.PrimaryPlaylistListener): void;
									stop(): void;
									addListener(param0: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener): void;
									removeListener(param0: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener): void;
									getMasterPlaylist(): com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist;
									getPlaylistSnapshot(param0: globalAndroid.net.Uri, param1: boolean): com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist;
									getInitialStartTimeUs(): number;
									isSnapshotValid(param0: globalAndroid.net.Uri): boolean;
									maybeThrowPrimaryPlaylistRefreshError(): void;
									maybeThrowPlaylistRefreshError(param0: globalAndroid.net.Uri): void;
									refreshPlaylist(param0: globalAndroid.net.Uri): void;
									isLive(): boolean;
								});
								public constructor();
								public getPlaylistSnapshot(param0: globalAndroid.net.Uri, param1: boolean): com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist;
								public maybeThrowPrimaryPlaylistRefreshError(): void;
								public addListener(param0: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener): void;
								public getInitialStartTimeUs(): number;
								public isLive(): boolean;
								public stop(): void;
								public removeListener(param0: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener): void;
								public isSnapshotValid(param0: globalAndroid.net.Uri): boolean;
								public getMasterPlaylist(): com.google.android.exoplayer2.source.hls.playlist.HlsMasterPlaylist;
								public maybeThrowPlaylistRefreshError(param0: globalAndroid.net.Uri): void;
								public refreshPlaylist(param0: globalAndroid.net.Uri): void;
								public start(param0: globalAndroid.net.Uri, param1: com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher, param2: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.PrimaryPlaylistListener): void;
							}
							export module HlsPlaylistTracker {
								export class Factory {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.Factory>;
									/**
									 * Constructs a new instance of the com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										createTracker(param0: com.google.android.exoplayer2.source.hls.HlsDataSourceFactory, param1: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy, param2: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory): com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker;
									});
									public constructor();
									public createTracker(param0: com.google.android.exoplayer2.source.hls.HlsDataSourceFactory, param1: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy, param2: com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistParserFactory): com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker;
								}
								export class PlaylistEventListener {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.PlaylistEventListener>;
									/**
									 * Constructs a new instance of the com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PlaylistEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										onPlaylistChanged(): void;
										onPlaylistError(param0: globalAndroid.net.Uri, param1: number): boolean;
									});
									public constructor();
									public onPlaylistError(param0: globalAndroid.net.Uri, param1: number): boolean;
									public onPlaylistChanged(): void;
								}
								export class PlaylistResetException {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.PlaylistResetException>;
									public url: globalAndroid.net.Uri;
									public constructor(param0: globalAndroid.net.Uri);
								}
								export class PlaylistStuckException {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.PlaylistStuckException>;
									public url: globalAndroid.net.Uri;
									public constructor(param0: globalAndroid.net.Uri);
								}
								export class PrimaryPlaylistListener {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker.PrimaryPlaylistListener>;
									/**
									 * Constructs a new instance of the com.google.android.exoplayer2.source.hls.playlist.HlsPlaylistTracker$PrimaryPlaylistListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
									 */
									public constructor(implementation: {
										onPrimaryPlaylistRefreshed(param0: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist): void;
									});
									public constructor();
									public onPrimaryPlaylistRefreshed(param0: com.google.android.exoplayer2.source.hls.playlist.HlsMediaPlaylist): void;
								}
							}
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module mediaparser {
						export class InputReaderAdapterV30 {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.mediaparser.InputReaderAdapterV30>;
							public constructor();
							public setDataReader(param0: com.google.android.exoplayer2.upstream.DataReader, param1: number): void;
							public getLength(): number;
							public getAndResetSeekPosition(): number;
							public getPosition(): number;
							public setCurrentPosition(param0: number): void;
							public seekToPosition(param0: number): void;
							public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module mediaparser {
						export class MediaParserUtil {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.mediaparser.MediaParserUtil>;
							public static PARAMETER_IN_BAND_CRYPTO_INFO: string;
							public static PARAMETER_INCLUDE_SUPPLEMENTAL_DATA: string;
							public static PARAMETER_EAGERLY_EXPOSE_TRACK_TYPE: string;
							public static PARAMETER_EXPOSE_DUMMY_SEEK_MAP: string;
							public static PARAMETER_EXPOSE_CHUNK_INDEX_AS_MEDIA_FORMAT: string;
							public static PARAMETER_OVERRIDE_IN_BAND_CAPTION_DECLARATIONS: string;
							public static PARAMETER_EXPOSE_CAPTION_FORMATS: string;
							public static PARAMETER_IGNORE_TIMESTAMP_OFFSET: string;
							public static toCaptionsMediaFormat(param0: com.google.android.exoplayer2.Format): globalAndroid.media.MediaFormat;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module mediaparser {
						export class OutputConsumerAdapterV30 {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.mediaparser.OutputConsumerAdapterV30>;
							public constructor();
							public onTrackCountFound(param0: number): void;
							public setMuxedCaptionFormats(param0: java.util.List<com.google.android.exoplayer2.Format>): void;
							public onSampleCompleted(param0: number, param1: number, param2: number, param3: number, param4: number, param5: globalAndroid.media.MediaCodec.CryptoInfo): void;
							public setTimestampAdjuster(param0: com.google.android.exoplayer2.util.TimestampAdjuster): void;
							public setExtractorOutput(param0: com.google.android.exoplayer2.extractor.ExtractorOutput): void;
							public getDummySeekMap(): globalAndroid.media.MediaParser.SeekMap;
							public onTrackDataFound(param0: number, param1: globalAndroid.media.MediaParser.TrackData): void;
							public constructor(param0: com.google.android.exoplayer2.Format, param1: number, param2: boolean);
							public getChunkIndex(): com.google.android.exoplayer2.extractor.ChunkIndex;
							public setSampleTimestampUpperLimitFilterUs(param0: number): void;
							public setSelectedParserName(param0: string): void;
							public getSampleFormats(): androidNative.Array<com.google.android.exoplayer2.Format>;
							public onSeekMapFound(param0: globalAndroid.media.MediaParser.SeekMap): void;
							public onSampleDataFound(param0: number, param1: globalAndroid.media.MediaParser.InputReader): void;
							public getSeekPoints(param0: number): globalAndroid.util.Pair<globalAndroid.media.MediaParser.SeekPoint,globalAndroid.media.MediaParser.SeekPoint>;
							public disableSeeking(): void;
						}
						export module OutputConsumerAdapterV30 {
							export class DataReaderAdapter extends com.google.android.exoplayer2.upstream.DataReader {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.mediaparser.OutputConsumerAdapterV30.DataReaderAdapter>;
								public input: globalAndroid.media.MediaParser.InputReader;
								public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
							}
							export class SeekMapAdapter extends com.google.android.exoplayer2.extractor.SeekMap {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.mediaparser.OutputConsumerAdapterV30.SeekMapAdapter>;
								public getDurationUs(): number;
								public getSeekPoints(param0: number): com.google.android.exoplayer2.extractor.SeekMap.SeekPoints;
								public constructor(param0: globalAndroid.media.MediaParser.SeekMap);
								public isSeekable(): boolean;
							}
						}
					}
				}
			}
		}
	}
}



declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module smoothstreaming {
						export class BuildConfig {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.BuildConfig>;
							public static DEBUG: boolean;
							public static LIBRARY_PACKAGE_NAME: string;
							public static APPLICATION_ID: string;
							public static BUILD_TYPE: string;
							public static FLAVOR: string;
							public static VERSION_CODE: number;
							public static VERSION_NAME: string;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module smoothstreaming {
						export class DefaultSsChunkSource extends com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource>;
							public updateTrackSelection(param0: com.google.android.exoplayer2.trackselection.ExoTrackSelection): void;
							public getNextChunk(param0: number, param1: number, param2: java.util.List<any>, param3: com.google.android.exoplayer2.source.chunk.ChunkHolder): void;
							public onChunkLoadCompleted(param0: com.google.android.exoplayer2.source.chunk.Chunk): void;
							public shouldCancelLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
							public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
							public release(): void;
							public updateManifest(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest): void;
							public maybeThrowError(): void;
							public getPreferredQueueSize(param0: number, param1: java.util.List<any>): number;
							public onChunkLoadError(param0: com.google.android.exoplayer2.source.chunk.Chunk, param1: boolean, param2: java.lang.Exception, param3: number): boolean;
							public constructor(param0: com.google.android.exoplayer2.upstream.LoaderErrorThrower, param1: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest, param2: number, param3: com.google.android.exoplayer2.trackselection.ExoTrackSelection, param4: com.google.android.exoplayer2.upstream.DataSource);
						}
						export module DefaultSsChunkSource {
							export class Factory extends com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource.Factory {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource.Factory>;
								public createChunkSource(param0: com.google.android.exoplayer2.upstream.LoaderErrorThrower, param1: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest, param2: number, param3: com.google.android.exoplayer2.trackselection.ExoTrackSelection, param4: com.google.android.exoplayer2.upstream.TransferListener): com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource;
								public constructor(param0: com.google.android.exoplayer2.upstream.DataSource.Factory);
							}
							export class StreamElementIterator extends com.google.android.exoplayer2.source.chunk.BaseMediaChunkIterator {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.DefaultSsChunkSource.StreamElementIterator>;
								public getChunkStartTimeUs(): number;
								public constructor(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest.StreamElement, param1: number, param2: number);
								public getDataSpec(): com.google.android.exoplayer2.upstream.DataSpec;
								public constructor(param0: number, param1: number);
								public reset(): void;
								public getChunkEndTimeUs(): number;
								public next(): boolean;
								public isEnded(): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module smoothstreaming {
						export class SsChunkSource extends com.google.android.exoplayer2.source.chunk.ChunkSource {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								updateManifest(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest): void;
								updateTrackSelection(param0: com.google.android.exoplayer2.trackselection.ExoTrackSelection): void;
								getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
								maybeThrowError(): void;
								getPreferredQueueSize(param0: number, param1: java.util.List<any>): number;
								shouldCancelLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
								getNextChunk(param0: number, param1: number, param2: java.util.List<any>, param3: com.google.android.exoplayer2.source.chunk.ChunkHolder): void;
								onChunkLoadCompleted(param0: com.google.android.exoplayer2.source.chunk.Chunk): void;
								onChunkLoadError(param0: com.google.android.exoplayer2.source.chunk.Chunk, param1: boolean, param2: java.lang.Exception, param3: number): boolean;
								release(): void;
							});
							public constructor();
							public updateTrackSelection(param0: com.google.android.exoplayer2.trackselection.ExoTrackSelection): void;
							public getNextChunk(param0: number, param1: number, param2: java.util.List<any>, param3: com.google.android.exoplayer2.source.chunk.ChunkHolder): void;
							public onChunkLoadCompleted(param0: com.google.android.exoplayer2.source.chunk.Chunk): void;
							public shouldCancelLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
							public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
							public release(): void;
							public updateManifest(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest): void;
							public maybeThrowError(): void;
							public getPreferredQueueSize(param0: number, param1: java.util.List<any>): number;
							public onChunkLoadError(param0: com.google.android.exoplayer2.source.chunk.Chunk, param1: boolean, param2: java.lang.Exception, param3: number): boolean;
						}
						export module SsChunkSource {
							export class Factory {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource.Factory>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									createChunkSource(param0: com.google.android.exoplayer2.upstream.LoaderErrorThrower, param1: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest, param2: number, param3: com.google.android.exoplayer2.trackselection.ExoTrackSelection, param4: com.google.android.exoplayer2.upstream.TransferListener): com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource;
								});
								public constructor();
								public createChunkSource(param0: com.google.android.exoplayer2.upstream.LoaderErrorThrower, param1: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest, param2: number, param3: com.google.android.exoplayer2.trackselection.ExoTrackSelection, param4: com.google.android.exoplayer2.upstream.TransferListener): com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module smoothstreaming {
						export class SsMediaPeriod extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.SsMediaPeriod>;
							public getTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
							public onContinueLoadingRequested(param0: com.google.android.exoplayer2.source.chunk.ChunkSampleStream<com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource>): void;
							public selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>, param1: androidNative.Array<boolean>, param2: androidNative.Array<com.google.android.exoplayer2.source.SampleStream>, param3: androidNative.Array<boolean>, param4: number): number;
							public onContinueLoadingRequested(param0: any): void;
							public getStreamKeys(param0: java.util.List<com.google.android.exoplayer2.trackselection.ExoTrackSelection>): java.util.List<com.google.android.exoplayer2.offline.StreamKey>;
							public isLoading(): boolean;
							public release(): void;
							public continueLoading(param0: number): boolean;
							public maybeThrowPrepareError(): void;
							public getBufferedPositionUs(): number;
							public constructor(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest, param1: com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource.Factory, param2: com.google.android.exoplayer2.upstream.TransferListener, param3: com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory, param4: com.google.android.exoplayer2.drm.DrmSessionManager, param5: com.google.android.exoplayer2.drm.DrmSessionEventListener.EventDispatcher, param6: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy, param7: com.google.android.exoplayer2.source.MediaSourceEventListener.EventDispatcher, param8: com.google.android.exoplayer2.upstream.LoaderErrorThrower, param9: com.google.android.exoplayer2.upstream.Allocator);
							public getNextLoadPositionUs(): number;
							public seekToUs(param0: number): number;
							public prepare(param0: com.google.android.exoplayer2.source.MediaPeriod.Callback, param1: number): void;
							public discardBuffer(param0: number, param1: boolean): void;
							public getAdjustedSeekPositionUs(param0: number, param1: com.google.android.exoplayer2.SeekParameters): number;
							public updateManifest(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest): void;
							public readDiscontinuity(): number;
							public reevaluateBuffer(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module smoothstreaming {
						export class SsMediaSource extends com.google.android.exoplayer2.source.BaseMediaSource implements com.google.android.exoplayer2.upstream.Loader.Callback<com.google.android.exoplayer2.upstream.ParsingLoadable<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest>>  {
							public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource>;
							public static DEFAULT_LIVE_PRESENTATION_DELAY_MS: number;
							public getMediaItem(): com.google.android.exoplayer2.MediaItem;
							public removeDrmEventListener(param0: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
							public onLoadCanceled(param0: com.google.android.exoplayer2.upstream.ParsingLoadable<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest>, param1: number, param2: number, param3: boolean): void;
							public onLoadCanceled(param0: any, param1: number, param2: number, param3: boolean): void;
							public onLoadCompleted(param0: any, param1: number, param2: number): void;
							public releaseSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public removeEventListener(param0: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public releaseSourceInternal(): void;
							/** @deprecated */
							public getTag(): any;
							public maybeThrowSourceInfoRefreshError(): void;
							public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.source.MediaSourceEventListener): void;
							public disable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public isSingleWindow(): boolean;
							public enable(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller): void;
							public prepareSourceInternal(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
							public onLoadError(param0: any, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							public getInitialTimeline(): com.google.android.exoplayer2.Timeline;
							public onLoadCompleted(param0: com.google.android.exoplayer2.upstream.ParsingLoadable<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest>, param1: number, param2: number): void;
							public onLoadError(param0: com.google.android.exoplayer2.upstream.ParsingLoadable<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest>, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							public releasePeriod(param0: com.google.android.exoplayer2.source.MediaPeriod): void;
							public prepareSource(param0: com.google.android.exoplayer2.source.MediaSource.MediaSourceCaller, param1: com.google.android.exoplayer2.upstream.TransferListener): void;
							public createPeriod(param0: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param1: com.google.android.exoplayer2.upstream.Allocator, param2: number): com.google.android.exoplayer2.source.MediaPeriod;
							public addDrmEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.drm.DrmSessionEventListener): void;
						}
						export module SsMediaSource {
							export class Factory extends com.google.android.exoplayer2.source.MediaSourceFactory {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource.Factory>;
								/** @deprecated */
								public setTag(param0: any): com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource.Factory;
								public getSupportedTypes(): androidNative.Array<number>;
								public setDrmUserAgent(param0: string): com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource.Factory;
								public setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.MediaSourceFactory;
								public setCompositeSequenceableLoaderFactory(param0: com.google.android.exoplayer2.source.CompositeSequenceableLoaderFactory): com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource.Factory;
								public setLivePresentationDelayMs(param0: number): com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource.Factory;
								public createMediaSource(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest, param1: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource;
								public setManifestParser(param0: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>): com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource.Factory;
								public createMediaSource(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest): com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource;
								public setDrmSessionManagerProvider(param0: com.google.android.exoplayer2.drm.DrmSessionManagerProvider): com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource.Factory;
								public setLoadErrorHandlingPolicy(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy): com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource.Factory;
								public setDrmSessionManagerProvider(param0: com.google.android.exoplayer2.drm.DrmSessionManagerProvider): com.google.android.exoplayer2.source.MediaSourceFactory;
								public createMediaSource(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.MediaSource;
								/** @deprecated */
								public createMediaSource(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.MediaSource;
								/** @deprecated */
								public setStreamKeys(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource.Factory;
								/** @deprecated */
								public setDrmHttpDataSourceFactory(param0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.MediaSourceFactory;
								public constructor(param0: com.google.android.exoplayer2.upstream.DataSource.Factory);
								/** @deprecated */
								public setStreamKeys(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.MediaSourceFactory;
								public setDrmHttpDataSourceFactory(param0: com.google.android.exoplayer2.upstream.HttpDataSource.Factory): com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource.Factory;
								public setDrmSessionManager(param0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource.Factory;
								/** @deprecated */
								public setDrmSessionManager(param0: com.google.android.exoplayer2.drm.DrmSessionManager): com.google.android.exoplayer2.source.MediaSourceFactory;
								/** @deprecated */
								public createMediaSource(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource;
								/** @deprecated */
								public setDrmUserAgent(param0: string): com.google.android.exoplayer2.source.MediaSourceFactory;
								public createMediaSource(param0: com.google.android.exoplayer2.MediaItem): com.google.android.exoplayer2.source.smoothstreaming.SsMediaSource;
								public constructor(param0: com.google.android.exoplayer2.source.smoothstreaming.SsChunkSource.Factory, param1: com.google.android.exoplayer2.upstream.DataSource.Factory);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module smoothstreaming {
						export module manifest {
							export class SsManifest extends com.google.android.exoplayer2.offline.FilterableManifest<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest> {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest>;
								public static UNSET_LOOKAHEAD: number;
								public majorVersion: number;
								public minorVersion: number;
								public lookAheadCount: number;
								public isLive: boolean;
								public protectionElement: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest.ProtectionElement;
								public streamElements: androidNative.Array<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest.StreamElement>;
								public durationUs: number;
								public dvrWindowLengthUs: number;
								public copy(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest;
								public copy(param0: java.util.List<com.google.android.exoplayer2.offline.StreamKey>): any;
								public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: boolean, param7: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest.ProtectionElement, param8: androidNative.Array<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest.StreamElement>);
							}
							export module SsManifest {
								export class ProtectionElement {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest.ProtectionElement>;
									public uuid: java.util.UUID;
									public data: androidNative.Array<number>;
									public trackEncryptionBoxes: androidNative.Array<com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox>;
									public constructor(param0: java.util.UUID, param1: androidNative.Array<number>, param2: androidNative.Array<com.google.android.exoplayer2.extractor.mp4.TrackEncryptionBox>);
								}
								export class StreamElement {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest.StreamElement>;
									public type: number;
									public subType: string;
									public timescale: number;
									public name: string;
									public maxWidth: number;
									public maxHeight: number;
									public displayWidth: number;
									public displayHeight: number;
									public language: string;
									public formats: androidNative.Array<com.google.android.exoplayer2.Format>;
									public chunkCount: number;
									public getStartTimeUs(param0: number): number;
									public constructor(param0: string, param1: string, param2: number, param3: string, param4: number, param5: string, param6: number, param7: number, param8: number, param9: number, param10: string, param11: androidNative.Array<com.google.android.exoplayer2.Format>, param12: java.util.List<java.lang.Long>, param13: number);
									public copy(param0: androidNative.Array<com.google.android.exoplayer2.Format>): com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest.StreamElement;
									public getChunkIndex(param0: number): number;
									public getChunkDurationUs(param0: number): number;
									public buildRequestUri(param0: number, param1: number): globalAndroid.net.Uri;
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module smoothstreaming {
						export module manifest {
							export class SsManifestParser extends com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest> {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser>;
								public parse(param0: globalAndroid.net.Uri, param1: java.io.InputStream): com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest;
								public parse(param0: globalAndroid.net.Uri, param1: java.io.InputStream): any;
								public constructor();
							}
							export module SsManifestParser {
								export abstract class ElementParser {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.ElementParser>;
									public handleChildInline(param0: string): boolean;
									public addChild(param0: any): void;
									public parseInt(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: number): number;
									public parse(param0: org.xmlpull.v1.XmlPullParser): any;
									public getNormalizedAttribute(param0: string): any;
									public parseBoolean(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: boolean): boolean;
									public parseRequiredLong(param0: org.xmlpull.v1.XmlPullParser, param1: string): number;
									public parseRequiredString(param0: org.xmlpull.v1.XmlPullParser, param1: string): string;
									public parseRequiredInt(param0: org.xmlpull.v1.XmlPullParser, param1: string): number;
									public parseLong(param0: org.xmlpull.v1.XmlPullParser, param1: string, param2: number): number;
									public build(): any;
									public constructor(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.ElementParser, param1: string, param2: string);
									public putNormalizedAttribute(param0: string, param1: any): void;
									public parseStartTag(param0: org.xmlpull.v1.XmlPullParser): void;
									public parseEndTag(param0: org.xmlpull.v1.XmlPullParser): void;
									public parseText(param0: org.xmlpull.v1.XmlPullParser): void;
								}
								export class MissingFieldException extends com.google.android.exoplayer2.ParserException {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.MissingFieldException>;
									public constructor(param0: java.lang.Throwable);
									public constructor();
									public constructor(param0: string);
									public constructor(param0: string, param1: java.lang.Throwable);
								}
								export class ProtectionParser extends com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.ElementParser {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.ProtectionParser>;
									public static TAG: string;
									public static TAG_PROTECTION_HEADER: string;
									public static KEY_SYSTEM_ID: string;
									public handleChildInline(param0: string): boolean;
									public build(): any;
									public constructor(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.ElementParser, param1: string, param2: string);
									public parseStartTag(param0: org.xmlpull.v1.XmlPullParser): void;
									public parseEndTag(param0: org.xmlpull.v1.XmlPullParser): void;
									public parseText(param0: org.xmlpull.v1.XmlPullParser): void;
									public constructor(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.ElementParser, param1: string);
								}
								export class QualityLevelParser extends com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.ElementParser {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.QualityLevelParser>;
									public static TAG: string;
									public build(): any;
									public constructor(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.ElementParser, param1: string, param2: string);
									public parseStartTag(param0: org.xmlpull.v1.XmlPullParser): void;
									public constructor(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.ElementParser, param1: string);
								}
								export class SmoothStreamingMediaParser extends com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.ElementParser {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.SmoothStreamingMediaParser>;
									public static TAG: string;
									public addChild(param0: any): void;
									public build(): any;
									public constructor(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.ElementParser, param1: string, param2: string);
									public parseStartTag(param0: org.xmlpull.v1.XmlPullParser): void;
									public constructor(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.ElementParser, param1: string);
								}
								export class StreamIndexParser extends com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.ElementParser {
									public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.StreamIndexParser>;
									public static TAG: string;
									public handleChildInline(param0: string): boolean;
									public addChild(param0: any): void;
									public build(): any;
									public constructor(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.ElementParser, param1: string, param2: string);
									public parseStartTag(param0: org.xmlpull.v1.XmlPullParser): void;
									public constructor(param0: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifestParser.ElementParser, param1: string);
								}
							}
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module source {
					export module smoothstreaming {
						export module offline {
							export class SsDownloader extends com.google.android.exoplayer2.offline.SegmentDownloader<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest> {
								public static class: java.lang.Class<com.google.android.exoplayer2.source.smoothstreaming.offline.SsDownloader>;
								public getSegments(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest, param2: boolean): java.util.List<com.google.android.exoplayer2.offline.SegmentDownloader.Segment>;
								public getSegments(param0: com.google.android.exoplayer2.upstream.DataSource, param1: any, param2: boolean): java.util.List<com.google.android.exoplayer2.offline.SegmentDownloader.Segment>;
								public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<com.google.android.exoplayer2.source.smoothstreaming.manifest.SsManifest>, param2: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param3: java.util.concurrent.Executor);
								public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>, param2: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param3: java.util.concurrent.Executor);
								public cancel(): void;
								public download(param0: com.google.android.exoplayer2.offline.Downloader.ProgressListener): void;
								/** @deprecated */
								public constructor(param0: globalAndroid.net.Uri, param1: java.util.List<com.google.android.exoplayer2.offline.StreamKey>, param2: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory);
								/** @deprecated */
								public constructor(param0: globalAndroid.net.Uri, param1: java.util.List<com.google.android.exoplayer2.offline.StreamKey>, param2: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param3: java.util.concurrent.Executor);
								public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory, param2: java.util.concurrent.Executor);
								public constructor(param0: com.google.android.exoplayer2.MediaItem, param1: com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory);
								public remove(): void;
							}
						}
					}
				}
			}
		}
	}
}



declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class CaptionStyleCompat {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.CaptionStyleCompat>;
						public static EDGE_TYPE_NONE: number;
						public static EDGE_TYPE_OUTLINE: number;
						public static EDGE_TYPE_DROP_SHADOW: number;
						public static EDGE_TYPE_RAISED: number;
						public static EDGE_TYPE_DEPRESSED: number;
						public static USE_TRACK_COLOR_SETTINGS: number;
						public static DEFAULT: com.google.android.exoplayer2.text.CaptionStyleCompat;
						public foregroundColor: number;
						public backgroundColor: number;
						public windowColor: number;
						public edgeType: number;
						public edgeColor: number;
						public typeface: globalAndroid.graphics.Typeface;
						public static createFromCaptionStyle(param0: globalAndroid.view.accessibility.CaptioningManager.CaptionStyle): com.google.android.exoplayer2.text.CaptionStyleCompat;
						public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: globalAndroid.graphics.Typeface);
					}
					export module CaptionStyleCompat {
						export class EdgeType {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.CaptionStyleCompat.EdgeType>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.text.CaptionStyleCompat$EdgeType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class Cue {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.Cue>;
						public static EMPTY: com.google.android.exoplayer2.text.Cue;
						public static DIMEN_UNSET: number;
						public static TYPE_UNSET: number;
						public static ANCHOR_TYPE_START: number;
						public static ANCHOR_TYPE_MIDDLE: number;
						public static ANCHOR_TYPE_END: number;
						public static LINE_TYPE_FRACTION: number;
						public static LINE_TYPE_NUMBER: number;
						public static TEXT_SIZE_TYPE_FRACTIONAL: number;
						public static TEXT_SIZE_TYPE_FRACTIONAL_IGNORE_PADDING: number;
						public static TEXT_SIZE_TYPE_ABSOLUTE: number;
						public static VERTICAL_TYPE_RL: number;
						public static VERTICAL_TYPE_LR: number;
						public text: string;
						public textAlignment: globalAndroid.text.Layout.Alignment;
						public bitmap: globalAndroid.graphics.Bitmap;
						public line: number;
						public lineType: number;
						public lineAnchor: number;
						public position: number;
						public positionAnchor: number;
						public size: number;
						public bitmapHeight: number;
						public windowColorSet: boolean;
						public windowColor: number;
						public textSizeType: number;
						public textSize: number;
						public verticalType: number;
						/** @deprecated */
						public constructor(param0: string, param1: globalAndroid.text.Layout.Alignment, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: boolean, param9: number);
						/** @deprecated */
						public constructor(param0: string);
						/** @deprecated */
						public constructor(param0: string, param1: globalAndroid.text.Layout.Alignment, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number);
						/** @deprecated */
						public constructor(param0: string, param1: globalAndroid.text.Layout.Alignment, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number, param9: number);
						public buildUpon(): com.google.android.exoplayer2.text.Cue.Builder;
					}
					export module Cue {
						export class AnchorType {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.Cue.AnchorType>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.text.Cue$AnchorType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
						export class Builder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.Cue.Builder>;
							public getLine(): number;
							public setPosition(param0: number): com.google.android.exoplayer2.text.Cue.Builder;
							public setPositionAnchor(param0: number): com.google.android.exoplayer2.text.Cue.Builder;
							public getPosition(): number;
							public clearWindowColor(): com.google.android.exoplayer2.text.Cue.Builder;
							public setSize(param0: number): com.google.android.exoplayer2.text.Cue.Builder;
							public setTextAlignment(param0: globalAndroid.text.Layout.Alignment): com.google.android.exoplayer2.text.Cue.Builder;
							public getTextSizeType(): number;
							public getTextSize(): number;
							public getSize(): number;
							public setTextSize(param0: number, param1: number): com.google.android.exoplayer2.text.Cue.Builder;
							public setBitmap(param0: globalAndroid.graphics.Bitmap): com.google.android.exoplayer2.text.Cue.Builder;
							public build(): com.google.android.exoplayer2.text.Cue;
							public constructor();
							public getText(): string;
							public getTextAlignment(): globalAndroid.text.Layout.Alignment;
							public setWindowColor(param0: number): com.google.android.exoplayer2.text.Cue.Builder;
							public getWindowColor(): number;
							public getBitmap(): globalAndroid.graphics.Bitmap;
							public setLineAnchor(param0: number): com.google.android.exoplayer2.text.Cue.Builder;
							public getLineAnchor(): number;
							public getLineType(): number;
							public setBitmapHeight(param0: number): com.google.android.exoplayer2.text.Cue.Builder;
							public setVerticalType(param0: number): com.google.android.exoplayer2.text.Cue.Builder;
							public isWindowColorSet(): boolean;
							public setText(param0: string): com.google.android.exoplayer2.text.Cue.Builder;
							public getBitmapHeight(): number;
							public getVerticalType(): number;
							public getPositionAnchor(): number;
							public setLine(param0: number, param1: number): com.google.android.exoplayer2.text.Cue.Builder;
						}
						export class LineType {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.Cue.LineType>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.text.Cue$LineType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
						export class TextSizeType {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.Cue.TextSizeType>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.text.Cue$TextSizeType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
						export class VerticalType {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.Cue.VerticalType>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.text.Cue$VerticalType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export abstract class SimpleSubtitleDecoder extends com.google.android.exoplayer2.decoder.SimpleDecoder<com.google.android.exoplayer2.text.SubtitleInputBuffer,com.google.android.exoplayer2.text.SubtitleOutputBuffer,com.google.android.exoplayer2.text.SubtitleDecoderException> implements com.google.android.exoplayer2.text.SubtitleDecoder  {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.SimpleSubtitleDecoder>;
						public createUnexpectedDecodeException(param0: java.lang.Throwable): any;
						public decode(param0: any, param1: any, param2: boolean): any;
						public createOutputBuffer(): any;
						public decode(param0: androidNative.Array<number>, param1: number, param2: boolean): com.google.android.exoplayer2.text.Subtitle;
						public dequeueInputBuffer(): any;
						public flush(): void;
						public createInputBuffer(): com.google.android.exoplayer2.text.SubtitleInputBuffer;
						public release(): void;
						public getName(): string;
						public setPositionUs(param0: number): void;
						public createInputBuffer(): any;
						public decode(param0: com.google.android.exoplayer2.text.SubtitleInputBuffer, param1: com.google.android.exoplayer2.text.SubtitleOutputBuffer, param2: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
						public constructor(param0: androidNative.Array<any>, param1: androidNative.Array<any>);
						public createUnexpectedDecodeException(param0: java.lang.Throwable): com.google.android.exoplayer2.text.SubtitleDecoderException;
						public createOutputBuffer(): com.google.android.exoplayer2.text.SubtitleOutputBuffer;
						public dequeueOutputBuffer(): any;
						public constructor(param0: string);
						public queueInputBuffer(param0: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class SimpleSubtitleOutputBuffer extends com.google.android.exoplayer2.text.SubtitleOutputBuffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.SimpleSubtitleOutputBuffer>;
						public constructor();
						public getEventTimeCount(): number;
						public getEventTime(param0: number): number;
						public getCues(param0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
						public release(): void;
						public getNextEventTimeIndex(param0: number): number;
						public constructor(param0: com.google.android.exoplayer2.decoder.OutputBuffer.Owner<com.google.android.exoplayer2.text.SubtitleOutputBuffer>);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class Subtitle {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.Subtitle>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.text.Subtitle interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getNextEventTimeIndex(param0: number): number;
							getEventTimeCount(): number;
							getEventTime(param0: number): number;
							getCues(param0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
						});
						public constructor();
						public getEventTimeCount(): number;
						public getEventTime(param0: number): number;
						public getCues(param0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
						public getNextEventTimeIndex(param0: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class SubtitleDecoder extends com.google.android.exoplayer2.decoder.Decoder<com.google.android.exoplayer2.text.SubtitleInputBuffer,com.google.android.exoplayer2.text.SubtitleOutputBuffer,com.google.android.exoplayer2.text.SubtitleDecoderException> {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.SubtitleDecoder>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.text.SubtitleDecoder interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setPositionUs(param0: number): void;
							getName(): string;
							dequeueInputBuffer(): any;
							queueInputBuffer(param0: any): void;
							dequeueOutputBuffer(): any;
							flush(): void;
							release(): void;
						});
						public constructor();
						public setPositionUs(param0: number): void;
						public dequeueInputBuffer(): any;
						public flush(): void;
						public release(): void;
						public getName(): string;
						public dequeueOutputBuffer(): any;
						public queueInputBuffer(param0: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class SubtitleDecoderException extends com.google.android.exoplayer2.decoder.DecoderException {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.SubtitleDecoderException>;
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class SubtitleDecoderFactory {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.SubtitleDecoderFactory>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.text.SubtitleDecoderFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							supportsFormat(param0: com.google.android.exoplayer2.Format): boolean;
							createDecoder(param0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.text.SubtitleDecoder;
							<clinit>(): void;
						});
						public constructor();
						public static DEFAULT: com.google.android.exoplayer2.text.SubtitleDecoderFactory;
						public supportsFormat(param0: com.google.android.exoplayer2.Format): boolean;
						public createDecoder(param0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.text.SubtitleDecoder;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class SubtitleInputBuffer extends com.google.android.exoplayer2.decoder.DecoderInputBuffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.SubtitleInputBuffer>;
						public subsampleOffsetUs: number;
						public constructor();
						public constructor(param0: number);
						public constructor(param0: number, param1: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export abstract class SubtitleOutputBuffer extends com.google.android.exoplayer2.decoder.OutputBuffer implements com.google.android.exoplayer2.text.Subtitle {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.SubtitleOutputBuffer>;
						public constructor();
						public getEventTimeCount(): number;
						public getEventTime(param0: number): number;
						public getCues(param0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
						public clear(): void;
						public getNextEventTimeIndex(param0: number): number;
						public setContent(param0: number, param1: com.google.android.exoplayer2.text.Subtitle, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class TextOutput {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.TextOutput>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.text.TextOutput interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onCues(param0: java.util.List<com.google.android.exoplayer2.text.Cue>): void;
						});
						public constructor();
						public onCues(param0: java.util.List<com.google.android.exoplayer2.text.Cue>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export class TextRenderer extends com.google.android.exoplayer2.BaseRenderer {
						public static class: java.lang.Class<com.google.android.exoplayer2.text.TextRenderer>;
						public handleMessage(param0: globalAndroid.os.Message): boolean;
						public render(param0: number, param1: number): void;
						public getName(): string;
						public replaceStream(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: com.google.android.exoplayer2.source.SampleStream, param2: number, param3: number): void;
						public onPositionReset(param0: number, param1: boolean): void;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public static create(param0: number): number;
						public static getTunnelingSupport(param0: number): number;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public static getAdaptiveSupport(param0: number): number;
						public onStreamChanged(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: number, param2: number): void;
						public onDisabled(): void;
						public isEnded(): boolean;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public setPlaybackSpeed(param0: number, param1: number): void;
						public setCurrentStreamFinal(): void;
						public constructor(param0: com.google.android.exoplayer2.text.TextOutput, param1: globalAndroid.os.Looper, param2: com.google.android.exoplayer2.text.SubtitleDecoderFactory);
						public resetPosition(param0: number): void;
						public enable(param0: com.google.android.exoplayer2.RendererConfiguration, param1: androidNative.Array<com.google.android.exoplayer2.Format>, param2: com.google.android.exoplayer2.source.SampleStream, param3: number, param4: boolean, param5: boolean, param6: number, param7: number): void;
						public hasReadStreamToEnd(): boolean;
						public isReady(): boolean;
						public setIndex(param0: number): void;
						public disable(): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public constructor(param0: com.google.android.exoplayer2.text.TextOutput, param1: globalAndroid.os.Looper);
						public handleMessage(param0: number, param1: any): void;
						public static getFormatSupport(param0: number): number;
						public supportsFormat(param0: com.google.android.exoplayer2.Format): number;
						public start(): void;
						public static create(param0: number, param1: number, param2: number): number;
						public constructor(param0: number);
						public getState(): number;
						public maybeThrowStreamError(): void;
						public getReadingPositionUs(): number;
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module cea {
						export class Cea608Decoder extends com.google.android.exoplayer2.text.cea.CeaDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.Cea608Decoder>;
							public static MIN_DATA_CHANNEL_TIMEOUT_MS: number;
							public constructor();
							public setPositionUs(param0: number): void;
							public createSubtitle(): com.google.android.exoplayer2.text.Subtitle;
							public getName(): string;
							public constructor(param0: string, param1: number, param2: number);
							public flush(): void;
							public release(): void;
							public isNewSubtitleDataAvailable(): boolean;
							public dequeueOutputBuffer(): com.google.android.exoplayer2.text.SubtitleOutputBuffer;
							public decode(param0: com.google.android.exoplayer2.text.SubtitleInputBuffer): void;
						}
						export module Cea608Decoder {
							export class CueBuilder {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder>;
								public backspace(): void;
								public setCaptionMode(param0: number): void;
								public setStyle(param0: number, param1: boolean): void;
								public constructor(param0: number, param1: number);
								public isEmpty(): boolean;
								public build(param0: number): com.google.android.exoplayer2.text.Cue;
								public rollUp(): void;
								public append(param0: string): void;
								public setCaptionRowCount(param0: number): void;
								public reset(param0: number): void;
							}
							export module CueBuilder {
								export class CueStyle {
									public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.Cea608Decoder.CueBuilder.CueStyle>;
									public style: number;
									public underline: boolean;
									public start: number;
									public constructor(param0: number, param1: boolean, param2: number);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module cea {
						export class Cea708Decoder extends com.google.android.exoplayer2.text.cea.CeaDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.Cea708Decoder>;
							public constructor();
							public setPositionUs(param0: number): void;
							public createSubtitle(): com.google.android.exoplayer2.text.Subtitle;
							public getName(): string;
							public flush(): void;
							public constructor(param0: number, param1: java.util.List<native.Array<number>>);
							public isNewSubtitleDataAvailable(): boolean;
							public decode(param0: com.google.android.exoplayer2.text.SubtitleInputBuffer): void;
						}
						export module Cea708Decoder {
							export class Cea708CueInfo {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.Cea708Decoder.Cea708CueInfo>;
								public cue: com.google.android.exoplayer2.text.Cue;
								public priority: number;
								public constructor(param0: string, param1: globalAndroid.text.Layout.Alignment, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: boolean, param9: number, param10: number);
							}
							export class CueInfoBuilder {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.Cea708Decoder.CueInfoBuilder>;
								public static COLOR_SOLID_WHITE: number;
								public static COLOR_SOLID_BLACK: number;
								public static COLOR_TRANSPARENT: number;
								public setWindowAttributes(param0: number, param1: number, param2: boolean, param3: number, param4: number, param5: number, param6: number): void;
								public setPenLocation(param0: number, param1: number): void;
								public constructor();
								public isDefined(): boolean;
								public setPenColor(param0: number, param1: number, param2: number): void;
								public setPenAttributes(param0: number, param1: number, param2: number, param3: boolean, param4: boolean, param5: number, param6: number): void;
								public backspace(): void;
								public static getArgbColorFromCeaColor(param0: number, param1: number, param2: number, param3: number): number;
								public clear(): void;
								public defineWindow(param0: boolean, param1: boolean, param2: boolean, param3: number, param4: boolean, param5: number, param6: number, param7: number, param8: number, param9: number, param10: number, param11: number): void;
								public setVisibility(param0: boolean): void;
								public buildSpannableString(): globalAndroid.text.SpannableString;
								public isEmpty(): boolean;
								public reset(): void;
								public static getArgbColorFromCeaColor(param0: number, param1: number, param2: number): number;
								public build(): com.google.android.exoplayer2.text.cea.Cea708Decoder.Cea708CueInfo;
								public append(param0: string): void;
								public isVisible(): boolean;
							}
							export class DtvCcPacket {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.Cea708Decoder.DtvCcPacket>;
								public sequenceNumber: number;
								public packetSize: number;
								public packetData: androidNative.Array<number>;
								public constructor(param0: number, param1: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module cea {
						export abstract class CeaDecoder extends com.google.android.exoplayer2.text.SubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.CeaDecoder>;
							public constructor();
							public getPositionUs(): number;
							public dequeueInputBuffer(): any;
							public createSubtitle(): com.google.android.exoplayer2.text.Subtitle;
							public queueInputBuffer(param0: com.google.android.exoplayer2.text.SubtitleInputBuffer): void;
							public releaseOutputBuffer(param0: com.google.android.exoplayer2.text.SubtitleOutputBuffer): void;
							public dequeueInputBuffer(): com.google.android.exoplayer2.text.SubtitleInputBuffer;
							public queueInputBuffer(param0: any): void;
							public release(): void;
							public decode(param0: com.google.android.exoplayer2.text.SubtitleInputBuffer): void;
							public getAvailableOutputBuffer(): com.google.android.exoplayer2.text.SubtitleOutputBuffer;
							public setPositionUs(param0: number): void;
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public flush(): void;
							public isNewSubtitleDataAvailable(): boolean;
							public dequeueOutputBuffer(): com.google.android.exoplayer2.text.SubtitleOutputBuffer;
						}
						export module CeaDecoder {
							export class CeaInputBuffer extends com.google.android.exoplayer2.text.SubtitleInputBuffer implements java.lang.Comparable<com.google.android.exoplayer2.text.cea.CeaDecoder.CeaInputBuffer>  {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.CeaDecoder.CeaInputBuffer>;
								public compareTo(param0: com.google.android.exoplayer2.text.cea.CeaDecoder.CeaInputBuffer): number;
							}
							export class CeaOutputBuffer extends com.google.android.exoplayer2.text.SubtitleOutputBuffer {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.CeaDecoder.CeaOutputBuffer>;
								public getCues(param0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
								public getNextEventTimeIndex(param0: number): number;
								public getEventTimeCount(): number;
								public constructor();
								public constructor(param0: com.google.android.exoplayer2.decoder.OutputBuffer.Owner<com.google.android.exoplayer2.text.cea.CeaDecoder.CeaOutputBuffer>);
								public release(): void;
								public getEventTime(param0: number): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module cea {
						export class CeaSubtitle extends com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.cea.CeaSubtitle>;
							public getCues(param0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getEventTime(param0: number): number;
							public getNextEventTimeIndex(param0: number): number;
							public constructor(param0: java.util.List<com.google.android.exoplayer2.text.Cue>);
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module dvb {
						export class DvbDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbDecoder>;
							public decode(param0: com.google.android.exoplayer2.text.SubtitleInputBuffer, param1: com.google.android.exoplayer2.text.SubtitleOutputBuffer, param2: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public queueInputBuffer(param0: any): void;
							public release(): void;
							public decode(param0: any, param1: any, param2: boolean): any;
							public constructor(param0: androidNative.Array<any>, param1: androidNative.Array<any>);
							public decode(param0: androidNative.Array<number>, param1: number, param2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public setPositionUs(param0: number): void;
							public constructor(param0: java.util.List<native.Array<number>>);
							public constructor(param0: string);
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public flush(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module dvb {
						export class DvbParser {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser>;
							public constructor(param0: number, param1: number);
							public decode(param0: androidNative.Array<number>, param1: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public reset(): void;
						}
						export module DvbParser {
							export class ClutDefinition {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.ClutDefinition>;
								public id: number;
								public clutEntries2Bit: androidNative.Array<number>;
								public clutEntries4Bit: androidNative.Array<number>;
								public clutEntries8Bit: androidNative.Array<number>;
								public constructor(param0: number, param1: androidNative.Array<number>, param2: androidNative.Array<number>, param3: androidNative.Array<number>);
							}
							export class DisplayDefinition {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition>;
								public width: number;
								public height: number;
								public horizontalPositionMinimum: number;
								public horizontalPositionMaximum: number;
								public verticalPositionMinimum: number;
								public verticalPositionMaximum: number;
								public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number);
							}
							export class ObjectData {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.ObjectData>;
								public id: number;
								public nonModifyingColorFlag: boolean;
								public topFieldData: androidNative.Array<number>;
								public bottomFieldData: androidNative.Array<number>;
								public constructor(param0: number, param1: boolean, param2: androidNative.Array<number>, param3: androidNative.Array<number>);
							}
							export class PageComposition {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.PageComposition>;
								public timeOutSecs: number;
								public version: number;
								public state: number;
								public regions: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.PageRegion>;
								public constructor(param0: number, param1: number, param2: number, param3: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.PageRegion>);
							}
							export class PageRegion {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.PageRegion>;
								public horizontalAddress: number;
								public verticalAddress: number;
								public constructor(param0: number, param1: number);
							}
							export class RegionComposition {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition>;
								public id: number;
								public fillFlag: boolean;
								public width: number;
								public height: number;
								public levelOfCompatibility: number;
								public depth: number;
								public clutId: number;
								public pixelCode8Bit: number;
								public pixelCode4Bit: number;
								public pixelCode2Bit: number;
								public regionObjects: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.RegionObject>;
								public mergeFrom(param0: com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition): void;
								public constructor(param0: number, param1: boolean, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number, param9: number, param10: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.RegionObject>);
							}
							export class RegionObject {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.RegionObject>;
								public type: number;
								public provider: number;
								public horizontalPosition: number;
								public verticalPosition: number;
								public foregroundPixelCode: number;
								public backgroundPixelCode: number;
								public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number);
							}
							export class SubtitleService {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbParser.SubtitleService>;
								public subtitlePageId: number;
								public ancillaryPageId: number;
								public regions: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.RegionComposition>;
								public cluts: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.ClutDefinition>;
								public objects: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.ObjectData>;
								public ancillaryCluts: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.ClutDefinition>;
								public ancillaryObjects: globalAndroid.util.SparseArray<com.google.android.exoplayer2.text.dvb.DvbParser.ObjectData>;
								public displayDefinition: com.google.android.exoplayer2.text.dvb.DvbParser.DisplayDefinition;
								public pageComposition: com.google.android.exoplayer2.text.dvb.DvbParser.PageComposition;
								public constructor(param0: number, param1: number);
								public reset(): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module dvb {
						export class DvbSubtitle extends com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.dvb.DvbSubtitle>;
							public getCues(param0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getEventTime(param0: number): number;
							public getNextEventTimeIndex(param0: number): number;
							public constructor(param0: java.util.List<com.google.android.exoplayer2.text.Cue>);
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}



declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module pgs {
						export class PgsDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.pgs.PgsDecoder>;
							public constructor();
							public decode(param0: com.google.android.exoplayer2.text.SubtitleInputBuffer, param1: com.google.android.exoplayer2.text.SubtitleOutputBuffer, param2: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public queueInputBuffer(param0: any): void;
							public release(): void;
							public decode(param0: any, param1: any, param2: boolean): any;
							public constructor(param0: androidNative.Array<any>, param1: androidNative.Array<any>);
							public decode(param0: androidNative.Array<number>, param1: number, param2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public setPositionUs(param0: number): void;
							public constructor(param0: string);
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public flush(): void;
						}
						export module PgsDecoder {
							export class CueBuilder {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.pgs.PgsDecoder.CueBuilder>;
								public build(): com.google.android.exoplayer2.text.Cue;
								public reset(): void;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module pgs {
						export class PgsSubtitle extends com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.pgs.PgsSubtitle>;
							public getCues(param0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getEventTime(param0: number): number;
							public getNextEventTimeIndex(param0: number): number;
							public constructor(param0: java.util.List<com.google.android.exoplayer2.text.Cue>);
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module span {
						export class HorizontalTextInVerticalContextSpan {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.span.HorizontalTextInVerticalContextSpan>;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module span {
						export class RubySpan {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.span.RubySpan>;
							public static POSITION_UNKNOWN: number;
							public static POSITION_OVER: number;
							public static POSITION_UNDER: number;
							public rubyText: string;
							public position: number;
							public constructor(param0: string, param1: number);
						}
						export module RubySpan {
							export class Position {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.span.RubySpan.Position>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.text.span.RubySpan$Position interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module span {
						export class SpanUtil {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.span.SpanUtil>;
							public static addOrReplaceSpan(param0: globalAndroid.text.Spannable, param1: any, param2: number, param3: number, param4: number): void;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ssa {
						export class SsaDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ssa.SsaDecoder>;
							public constructor();
							public decode(param0: com.google.android.exoplayer2.text.SubtitleInputBuffer, param1: com.google.android.exoplayer2.text.SubtitleOutputBuffer, param2: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public queueInputBuffer(param0: any): void;
							public release(): void;
							public decode(param0: any, param1: any, param2: boolean): any;
							public constructor(param0: androidNative.Array<any>, param1: androidNative.Array<any>);
							public decode(param0: androidNative.Array<number>, param1: number, param2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public setPositionUs(param0: number): void;
							public constructor(param0: java.util.List<native.Array<number>>);
							public constructor(param0: string);
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public flush(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ssa {
						export class SsaDialogueFormat {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ssa.SsaDialogueFormat>;
							public startTimeIndex: number;
							public endTimeIndex: number;
							public styleIndex: number;
							public textIndex: number;
							public length: number;
							public static fromFormatLine(param0: string): com.google.android.exoplayer2.text.ssa.SsaDialogueFormat;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ssa {
						export class SsaStyle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ssa.SsaStyle>;
							public static SSA_ALIGNMENT_UNKNOWN: number;
							public static SSA_ALIGNMENT_BOTTOM_LEFT: number;
							public static SSA_ALIGNMENT_BOTTOM_CENTER: number;
							public static SSA_ALIGNMENT_BOTTOM_RIGHT: number;
							public static SSA_ALIGNMENT_MIDDLE_LEFT: number;
							public static SSA_ALIGNMENT_MIDDLE_CENTER: number;
							public static SSA_ALIGNMENT_MIDDLE_RIGHT: number;
							public static SSA_ALIGNMENT_TOP_LEFT: number;
							public static SSA_ALIGNMENT_TOP_CENTER: number;
							public static SSA_ALIGNMENT_TOP_RIGHT: number;
							public name: string;
							public alignment: number;
							public primaryColor: java.lang.Integer;
							public fontSize: number;
							public static parseColor(param0: string): java.lang.Integer;
							public static fromStyleLine(param0: string, param1: com.google.android.exoplayer2.text.ssa.SsaStyle.Format): com.google.android.exoplayer2.text.ssa.SsaStyle;
						}
						export module SsaStyle {
							export class Format {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ssa.SsaStyle.Format>;
								public nameIndex: number;
								public alignmentIndex: number;
								public primaryColorIndex: number;
								public fontSizeIndex: number;
								public length: number;
								public static fromFormatLine(param0: string): com.google.android.exoplayer2.text.ssa.SsaStyle.Format;
							}
							export class Overrides {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ssa.SsaStyle.Overrides>;
								public alignment: number;
								public position: globalAndroid.graphics.PointF;
								public static parseFromDialogue(param0: string): com.google.android.exoplayer2.text.ssa.SsaStyle.Overrides;
								public static stripStyleOverrides(param0: string): string;
							}
							export class SsaAlignment {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ssa.SsaStyle.SsaAlignment>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.text.ssa.SsaStyle$SsaAlignment interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ssa {
						export class SsaSubtitle extends com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ssa.SsaSubtitle>;
							public getCues(param0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getEventTime(param0: number): number;
							public getNextEventTimeIndex(param0: number): number;
							public constructor(param0: java.util.List<java.util.List<com.google.android.exoplayer2.text.Cue>>, param1: java.util.List<java.lang.Long>);
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module subrip {
						export class SubripDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.subrip.SubripDecoder>;
							public constructor();
							public decode(param0: com.google.android.exoplayer2.text.SubtitleInputBuffer, param1: com.google.android.exoplayer2.text.SubtitleOutputBuffer, param2: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public queueInputBuffer(param0: any): void;
							public release(): void;
							public decode(param0: any, param1: any, param2: boolean): any;
							public constructor(param0: androidNative.Array<any>, param1: androidNative.Array<any>);
							public decode(param0: androidNative.Array<number>, param1: number, param2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public setPositionUs(param0: number): void;
							public constructor(param0: string);
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public flush(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module subrip {
						export class SubripSubtitle extends com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.subrip.SubripSubtitle>;
							public getCues(param0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getEventTime(param0: number): number;
							public getNextEventTimeIndex(param0: number): number;
							public constructor(param0: androidNative.Array<com.google.android.exoplayer2.text.Cue>, param1: androidNative.Array<number>);
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ttml {
						export class DeleteTextSpan {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.DeleteTextSpan>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ttml {
						export class TtmlDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlDecoder>;
							public constructor();
							public decode(param0: com.google.android.exoplayer2.text.SubtitleInputBuffer, param1: com.google.android.exoplayer2.text.SubtitleOutputBuffer, param2: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public queueInputBuffer(param0: any): void;
							public release(): void;
							public decode(param0: any, param1: any, param2: boolean): any;
							public constructor(param0: androidNative.Array<any>, param1: androidNative.Array<any>);
							public decode(param0: androidNative.Array<number>, param1: number, param2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public setPositionUs(param0: number): void;
							public constructor(param0: string);
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public flush(): void;
						}
						export module TtmlDecoder {
							export class CellResolution {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlDecoder.CellResolution>;
							}
							export class FrameAndTickRate {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlDecoder.FrameAndTickRate>;
							}
							export class TtsExtent {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlDecoder.TtsExtent>;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ttml {
						export class TtmlNode {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlNode>;
							public static TAG_TT: string;
							public static TAG_HEAD: string;
							public static TAG_BODY: string;
							public static TAG_DIV: string;
							public static TAG_P: string;
							public static TAG_SPAN: string;
							public static TAG_BR: string;
							public static TAG_STYLE: string;
							public static TAG_STYLING: string;
							public static TAG_LAYOUT: string;
							public static TAG_REGION: string;
							public static TAG_METADATA: string;
							public static TAG_IMAGE: string;
							public static TAG_DATA: string;
							public static TAG_INFORMATION: string;
							public static ANONYMOUS_REGION_ID: string;
							public static ATTR_ID: string;
							public static ATTR_TTS_ORIGIN: string;
							public static ATTR_TTS_EXTENT: string;
							public static ATTR_TTS_DISPLAY_ALIGN: string;
							public static ATTR_TTS_BACKGROUND_COLOR: string;
							public static ATTR_TTS_FONT_STYLE: string;
							public static ATTR_TTS_FONT_SIZE: string;
							public static ATTR_TTS_FONT_FAMILY: string;
							public static ATTR_TTS_FONT_WEIGHT: string;
							public static ATTR_TTS_COLOR: string;
							public static ATTR_TTS_RUBY: string;
							public static ATTR_TTS_RUBY_POSITION: string;
							public static ATTR_TTS_TEXT_DECORATION: string;
							public static ATTR_TTS_TEXT_ALIGN: string;
							public static ATTR_TTS_TEXT_COMBINE: string;
							public static ATTR_TTS_WRITING_MODE: string;
							public static RUBY_CONTAINER: string;
							public static RUBY_BASE: string;
							public static RUBY_BASE_CONTAINER: string;
							public static RUBY_TEXT: string;
							public static RUBY_TEXT_CONTAINER: string;
							public static RUBY_DELIMITER: string;
							public static RUBY_BEFORE: string;
							public static RUBY_AFTER: string;
							public static LINETHROUGH: string;
							public static NO_LINETHROUGH: string;
							public static UNDERLINE: string;
							public static NO_UNDERLINE: string;
							public static ITALIC: string;
							public static BOLD: string;
							public static LEFT: string;
							public static CENTER: string;
							public static RIGHT: string;
							public static START: string;
							public static END: string;
							public static COMBINE_NONE: string;
							public static COMBINE_ALL: string;
							public static VERTICAL: string;
							public static VERTICAL_LR: string;
							public static VERTICAL_RL: string;
							public tag: string;
							public text: string;
							public isTextNode: boolean;
							public startTimeUs: number;
							public endTimeUs: number;
							public style: com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public regionId: string;
							public imageId: string;
							public parent: com.google.android.exoplayer2.text.ttml.TtmlNode;
							public isActive(param0: number): boolean;
							public getChild(param0: number): com.google.android.exoplayer2.text.ttml.TtmlNode;
							public getChildCount(): number;
							public getStyleIds(): androidNative.Array<string>;
							public addChild(param0: com.google.android.exoplayer2.text.ttml.TtmlNode): void;
							public static buildNode(param0: string, param1: number, param2: number, param3: com.google.android.exoplayer2.text.ttml.TtmlStyle, param4: androidNative.Array<string>, param5: string, param6: string, param7: com.google.android.exoplayer2.text.ttml.TtmlNode): com.google.android.exoplayer2.text.ttml.TtmlNode;
							public static buildTextNode(param0: string): com.google.android.exoplayer2.text.ttml.TtmlNode;
							public getEventTimesUs(): androidNative.Array<number>;
							public getCues(param0: number, param1: java.util.Map<string,com.google.android.exoplayer2.text.ttml.TtmlStyle>, param2: java.util.Map<string,com.google.android.exoplayer2.text.ttml.TtmlRegion>, param3: java.util.Map<string,string>): java.util.List<com.google.android.exoplayer2.text.Cue>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ttml {
						export class TtmlRegion {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlRegion>;
							public id: string;
							public position: number;
							public line: number;
							public lineType: number;
							public lineAnchor: number;
							public width: number;
							public height: number;
							public textSizeType: number;
							public textSize: number;
							public verticalType: number;
							public constructor(param0: string);
							public constructor(param0: string, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number, param9: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ttml {
						export class TtmlRenderUtil {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlRenderUtil>;
							public static applyStylesToSpan(param0: globalAndroid.text.Spannable, param1: number, param2: number, param3: com.google.android.exoplayer2.text.ttml.TtmlStyle, param4: com.google.android.exoplayer2.text.ttml.TtmlNode, param5: java.util.Map<string,com.google.android.exoplayer2.text.ttml.TtmlStyle>): void;
							public static resolveStyle(param0: com.google.android.exoplayer2.text.ttml.TtmlStyle, param1: androidNative.Array<string>, param2: java.util.Map<string,com.google.android.exoplayer2.text.ttml.TtmlStyle>): com.google.android.exoplayer2.text.ttml.TtmlStyle;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ttml {
						export class TtmlStyle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlStyle>;
							public static UNSPECIFIED: number;
							public static STYLE_NORMAL: number;
							public static STYLE_BOLD: number;
							public static STYLE_ITALIC: number;
							public static STYLE_BOLD_ITALIC: number;
							public static FONT_SIZE_UNIT_PIXEL: number;
							public static FONT_SIZE_UNIT_EM: number;
							public static FONT_SIZE_UNIT_PERCENT: number;
							public static RUBY_TYPE_CONTAINER: number;
							public static RUBY_TYPE_BASE: number;
							public static RUBY_TYPE_TEXT: number;
							public static RUBY_TYPE_DELIMITER: number;
							public setId(param0: string): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public getTextCombine(): boolean;
							public getId(): string;
							public hasFontColor(): boolean;
							public getRubyType(): number;
							public chain(param0: com.google.android.exoplayer2.text.ttml.TtmlStyle): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public setUnderline(param0: boolean): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public getTextAlign(): globalAndroid.text.Layout.Alignment;
							public setBold(param0: boolean): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public inherit(param0: com.google.android.exoplayer2.text.ttml.TtmlStyle): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public setBackgroundColor(param0: number): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public setTextAlign(param0: globalAndroid.text.Layout.Alignment): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public setFontColor(param0: number): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public setFontSize(param0: number): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public getBackgroundColor(): number;
							public setItalic(param0: boolean): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public constructor();
							public setLinethrough(param0: boolean): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public setFontSizeUnit(param0: number): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public isUnderline(): boolean;
							public setFontFamily(param0: string): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public getFontSizeUnit(): number;
							public hasBackgroundColor(): boolean;
							public isLinethrough(): boolean;
							public getRubyPosition(): number;
							public setRubyType(param0: number): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public getFontSize(): number;
							public getStyle(): number;
							public setRubyPosition(param0: number): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public setTextCombine(param0: boolean): com.google.android.exoplayer2.text.ttml.TtmlStyle;
							public getFontFamily(): string;
							public getFontColor(): number;
						}
						export module TtmlStyle {
							export class FontSizeUnit {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlStyle.FontSizeUnit>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.text.ttml.TtmlStyle$FontSizeUnit interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
							export class RubyType {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlStyle.RubyType>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.text.ttml.TtmlStyle$RubyType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
							export class StyleFlags {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlStyle.StyleFlags>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.text.ttml.TtmlStyle$StyleFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module ttml {
						export class TtmlSubtitle extends com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.ttml.TtmlSubtitle>;
							public getCues(param0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getEventTime(param0: number): number;
							public getNextEventTimeIndex(param0: number): number;
							public constructor(param0: com.google.android.exoplayer2.text.ttml.TtmlNode, param1: java.util.Map<string,com.google.android.exoplayer2.text.ttml.TtmlStyle>, param2: java.util.Map<string,com.google.android.exoplayer2.text.ttml.TtmlRegion>, param3: java.util.Map<string,string>);
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module tx3g {
						export class Tx3gDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.tx3g.Tx3gDecoder>;
							public decode(param0: com.google.android.exoplayer2.text.SubtitleInputBuffer, param1: com.google.android.exoplayer2.text.SubtitleOutputBuffer, param2: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public queueInputBuffer(param0: any): void;
							public release(): void;
							public decode(param0: any, param1: any, param2: boolean): any;
							public constructor(param0: androidNative.Array<any>, param1: androidNative.Array<any>);
							public decode(param0: androidNative.Array<number>, param1: number, param2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public setPositionUs(param0: number): void;
							public constructor(param0: java.util.List<native.Array<number>>);
							public constructor(param0: string);
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public flush(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module tx3g {
						export class Tx3gSubtitle extends com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle>;
							public static EMPTY: com.google.android.exoplayer2.text.tx3g.Tx3gSubtitle;
							public getCues(param0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getEventTime(param0: number): number;
							public constructor(param0: com.google.android.exoplayer2.text.Cue);
							public getNextEventTimeIndex(param0: number): number;
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class CssParser {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.CssParser>;
							public constructor();
							public parseBlock(param0: com.google.android.exoplayer2.util.ParsableByteArray): java.util.List<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class Mp4WebvttDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.Mp4WebvttDecoder>;
							public constructor();
							public decode(param0: com.google.android.exoplayer2.text.SubtitleInputBuffer, param1: com.google.android.exoplayer2.text.SubtitleOutputBuffer, param2: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public queueInputBuffer(param0: any): void;
							public release(): void;
							public decode(param0: any, param1: any, param2: boolean): any;
							public constructor(param0: androidNative.Array<any>, param1: androidNative.Array<any>);
							public decode(param0: androidNative.Array<number>, param1: number, param2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public setPositionUs(param0: number): void;
							public constructor(param0: string);
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public flush(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class Mp4WebvttSubtitle extends com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.Mp4WebvttSubtitle>;
							public getCues(param0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getEventTime(param0: number): number;
							public getNextEventTimeIndex(param0: number): number;
							public constructor(param0: java.util.List<com.google.android.exoplayer2.text.Cue>);
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class WebvttCssStyle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle>;
							public static UNSPECIFIED: number;
							public static STYLE_NORMAL: number;
							public static STYLE_BOLD: number;
							public static STYLE_ITALIC: number;
							public static STYLE_BOLD_ITALIC: number;
							public static FONT_SIZE_UNIT_PIXEL: number;
							public static FONT_SIZE_UNIT_EM: number;
							public static FONT_SIZE_UNIT_PERCENT: number;
							public setFontColor(param0: number): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public setBackgroundColor(param0: number): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public getSpecificityScore(param0: string, param1: string, param2: java.util.Set<string>, param3: string): number;
							public hasFontColor(): boolean;
							public setTargetTagName(param0: string): void;
							public setRubyPosition(param0: number): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public setFontSizeUnit(param0: number): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public getBackgroundColor(): number;
							public constructor();
							public setFontFamily(param0: string): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public setUnderline(param0: boolean): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public setTargetClasses(param0: androidNative.Array<string>): void;
							public isUnderline(): boolean;
							public setFontSize(param0: number): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public getFontSizeUnit(): number;
							public setTargetVoice(param0: string): void;
							public hasBackgroundColor(): boolean;
							public getCombineUpright(): boolean;
							public isLinethrough(): boolean;
							public getRubyPosition(): number;
							public setItalic(param0: boolean): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public getFontSize(): number;
							public setTargetId(param0: string): void;
							public getStyle(): number;
							public setLinethrough(param0: boolean): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public setBold(param0: boolean): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public setCombineUpright(param0: boolean): com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
							public getFontFamily(): string;
							public getFontColor(): number;
						}
						export module WebvttCssStyle {
							export class FontSizeUnit {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.FontSizeUnit>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.text.webvtt.WebvttCssStyle$FontSizeUnit interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
							export class StyleFlags {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle.StyleFlags>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.text.webvtt.WebvttCssStyle$StyleFlags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class WebvttCueInfo {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCueInfo>;
							public cue: com.google.android.exoplayer2.text.Cue;
							public startTimeUs: number;
							public endTimeUs: number;
							public constructor(param0: com.google.android.exoplayer2.text.Cue, param1: number, param2: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class WebvttCueParser {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCueParser>;
							public static CUE_HEADER_PATTERN: java.util.regex.Pattern;
							public constructor();
							public static parseCue(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: java.util.List<com.google.android.exoplayer2.text.webvtt.WebvttCssStyle>): com.google.android.exoplayer2.text.webvtt.WebvttCueInfo;
						}
						export module WebvttCueParser {
							export class Element {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCueParser.Element>;
							}
							export class StartTag {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCueParser.StartTag>;
								public name: string;
								public position: number;
								public voice: string;
								public classes: java.util.Set<string>;
								public static buildStartTag(param0: string, param1: number): com.google.android.exoplayer2.text.webvtt.WebvttCueParser.StartTag;
								public static buildWholeCueVirtualTag(): com.google.android.exoplayer2.text.webvtt.WebvttCueParser.StartTag;
							}
							export class StyleMatch extends java.lang.Comparable<com.google.android.exoplayer2.text.webvtt.WebvttCueParser.StyleMatch> {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCueParser.StyleMatch>;
								public score: number;
								public style: com.google.android.exoplayer2.text.webvtt.WebvttCssStyle;
								public compareTo(param0: com.google.android.exoplayer2.text.webvtt.WebvttCueParser.StyleMatch): number;
								public constructor(param0: number, param1: com.google.android.exoplayer2.text.webvtt.WebvttCssStyle);
							}
							export class WebvttCueInfoBuilder {
								public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttCueParser.WebvttCueInfoBuilder>;
								public startTimeUs: number;
								public endTimeUs: number;
								public text: string;
								public textAlignment: number;
								public line: number;
								public lineType: number;
								public lineAnchor: number;
								public position: number;
								public positionAnchor: number;
								public size: number;
								public verticalType: number;
								public build(): com.google.android.exoplayer2.text.webvtt.WebvttCueInfo;
								public toCueBuilder(): com.google.android.exoplayer2.text.Cue.Builder;
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class WebvttDecoder extends com.google.android.exoplayer2.text.SimpleSubtitleDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttDecoder>;
							public constructor();
							public decode(param0: com.google.android.exoplayer2.text.SubtitleInputBuffer, param1: com.google.android.exoplayer2.text.SubtitleOutputBuffer, param2: boolean): com.google.android.exoplayer2.text.SubtitleDecoderException;
							public dequeueInputBuffer(): any;
							public queueInputBuffer(param0: any): void;
							public release(): void;
							public decode(param0: any, param1: any, param2: boolean): any;
							public constructor(param0: androidNative.Array<any>, param1: androidNative.Array<any>);
							public decode(param0: androidNative.Array<number>, param1: number, param2: boolean): com.google.android.exoplayer2.text.Subtitle;
							public setPositionUs(param0: number): void;
							public constructor(param0: string);
							public getName(): string;
							public dequeueOutputBuffer(): any;
							public flush(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class WebvttParserUtil {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttParserUtil>;
							public static isWebvttHeaderLine(param0: com.google.android.exoplayer2.util.ParsableByteArray): boolean;
							public static findNextCueHeader(param0: com.google.android.exoplayer2.util.ParsableByteArray): java.util.regex.Matcher;
							public static validateWebvttHeaderLine(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
							public static parseTimestampUs(param0: string): number;
							public static parsePercentage(param0: string): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module text {
					export module webvtt {
						export class WebvttSubtitle extends com.google.android.exoplayer2.text.Subtitle {
							public static class: java.lang.Class<com.google.android.exoplayer2.text.webvtt.WebvttSubtitle>;
							public getCues(param0: number): java.util.List<com.google.android.exoplayer2.text.Cue>;
							public getEventTime(param0: number): number;
							public getNextEventTimeIndex(param0: number): number;
							public constructor(param0: java.util.List<com.google.android.exoplayer2.text.webvtt.WebvttCueInfo>);
							public getEventTimeCount(): number;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class AdaptiveTrackSelection extends com.google.android.exoplayer2.trackselection.BaseTrackSelection {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection>;
						public static DEFAULT_MIN_DURATION_FOR_QUALITY_INCREASE_MS: number;
						public static DEFAULT_MAX_DURATION_FOR_QUALITY_DECREASE_MS: number;
						public static DEFAULT_MIN_DURATION_TO_RETAIN_AFTER_DISCARD_MS: number;
						public static DEFAULT_BANDWIDTH_FRACTION: number;
						public static DEFAULT_BUFFERED_FRACTION_TO_LIVE_EDGE_FOR_QUALITY_INCREASE: number;
						public shouldEvaluateQueueSize(param0: number, param1: java.util.List<any>): boolean;
						public constructor(param0: com.google.android.exoplayer2.source.TrackGroup, param1: androidNative.Array<number>);
						public getMinDurationToRetainAfterDiscardUs(): number;
						public onPlayWhenReadyChanged(param0: boolean): void;
						public getSelectionData(): any;
						public getSelectedFormat(): com.google.android.exoplayer2.Format;
						public getSelectedIndexInTrackGroup(): number;
						public onPlaybackSpeed(param0: number): void;
						public getSelectionReason(): number;
						public disable(): void;
						public constructor(param0: com.google.android.exoplayer2.source.TrackGroup, param1: androidNative.Array<number>, param2: com.google.android.exoplayer2.upstream.BandwidthMeter, param3: number, param4: number, param5: number, param6: number, param7: number, param8: java.util.List<com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection.AdaptationCheckpoint>, param9: com.google.android.exoplayer2.util.Clock);
						public enable(): void;
						public blacklist(param0: number, param1: number): boolean;
						public constructor(param0: com.google.android.exoplayer2.source.TrackGroup, param1: androidNative.Array<number>, param2: com.google.android.exoplayer2.upstream.BandwidthMeter);
						public evaluateQueueSize(param0: number, param1: java.util.List<any>): number;
						public onRebuffer(): void;
						public shouldCancelChunkLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
						public updateSelectedTrack(param0: number, param1: number, param2: number, param3: java.util.List<any>, param4: androidNative.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>): void;
						public getSelectedIndex(): number;
						public canSelectFormat(param0: com.google.android.exoplayer2.Format, param1: number, param2: number, param3: number): boolean;
						public onDiscontinuity(): void;
					}
					export module AdaptiveTrackSelection {
						export class AdaptationCheckpoint {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection.AdaptationCheckpoint>;
							public totalBandwidth: number;
							public allocatedBandwidth: number;
							public constructor(param0: number, param1: number);
							public hashCode(): number;
							public equals(param0: any): boolean;
						}
						export class Factory extends com.google.android.exoplayer2.trackselection.ExoTrackSelection.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection.Factory>;
							public constructor();
							public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: com.google.android.exoplayer2.util.Clock);
							public createTrackSelections(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection.Definition>, param1: com.google.android.exoplayer2.upstream.BandwidthMeter, param2: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param3: com.google.android.exoplayer2.Timeline): androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>;
							public constructor(param0: number, param1: number, param2: number, param3: number);
							public createAdaptiveTrackSelection(param0: com.google.android.exoplayer2.source.TrackGroup, param1: com.google.android.exoplayer2.upstream.BandwidthMeter, param2: androidNative.Array<number>, param3: com.google.common.collect.ImmutableList<com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection.AdaptationCheckpoint>): com.google.android.exoplayer2.trackselection.AdaptiveTrackSelection;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export abstract class BaseTrackSelection extends com.google.android.exoplayer2.trackselection.ExoTrackSelection {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.BaseTrackSelection>;
						public group: com.google.android.exoplayer2.source.TrackGroup;
						public tracks: androidNative.Array<number>;
						public constructor(param0: com.google.android.exoplayer2.source.TrackGroup, param1: androidNative.Array<number>);
						public onPlayWhenReadyChanged(param0: boolean): void;
						public getSelectedIndexInTrackGroup(): number;
						public onPlaybackSpeed(param0: number): void;
						public hashCode(): number;
						public equals(param0: any): boolean;
						public getSelectionReason(): number;
						public blacklist(param0: number, param1: number): boolean;
						public shouldCancelChunkLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
						public indexOf(param0: com.google.android.exoplayer2.Format): number;
						public onDiscontinuity(): void;
						public getIndexInTrackGroup(param0: number): number;
						public getSelectionData(): any;
						public length(): number;
						public getSelectedFormat(): com.google.android.exoplayer2.Format;
						public getTrackGroup(): com.google.android.exoplayer2.source.TrackGroup;
						public disable(): void;
						public enable(): void;
						public evaluateQueueSize(param0: number, param1: java.util.List<any>): number;
						public onRebuffer(): void;
						public getFormat(param0: number): com.google.android.exoplayer2.Format;
						public getSelectedIndex(): number;
						public updateSelectedTrack(param0: number, param1: number, param2: number, param3: java.util.List<any>, param4: androidNative.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>): void;
						public indexOf(param0: number): number;
						public isBlacklisted(param0: number, param1: number): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class DefaultTrackSelector extends com.google.android.exoplayer2.trackselection.MappingTrackSelector {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector>;
						public constructor();
						/** @deprecated */
						public constructor(param0: com.google.android.exoplayer2.trackselection.ExoTrackSelection.Factory);
						public constructor(param0: globalAndroid.content.Context);
						public selectTracks(param0: com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo, param1: androidNative.Array<native.Array<native.Array<number>>>, param2: androidNative.Array<number>, param3: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param4: com.google.android.exoplayer2.Timeline): globalAndroid.util.Pair<native.Array<com.google.android.exoplayer2.RendererConfiguration>,native.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>>;
						public static normalizeUndeterminedLanguageToNull(param0: string): string;
						public setParameters(param0: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder): void;
						public selectAudioTrack(param0: com.google.android.exoplayer2.source.TrackGroupArray, param1: androidNative.Array<native.Array<number>>, param2: number, param3: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, param4: boolean): globalAndroid.util.Pair<com.google.android.exoplayer2.trackselection.ExoTrackSelection.Definition,com.google.android.exoplayer2.trackselection.DefaultTrackSelector.AudioTrackScore>;
						public constructor(param0: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, param1: com.google.android.exoplayer2.trackselection.ExoTrackSelection.Factory);
						public setParameters(param0: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): void;
						public selectOtherTrack(param0: number, param1: com.google.android.exoplayer2.source.TrackGroupArray, param2: androidNative.Array<native.Array<number>>, param3: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): com.google.android.exoplayer2.trackselection.ExoTrackSelection.Definition;
						public static getFormatLanguageScore(param0: com.google.android.exoplayer2.Format, param1: string, param2: boolean): number;
						/** @deprecated */
						public constructor();
						public selectTextTrack(param0: com.google.android.exoplayer2.source.TrackGroupArray, param1: androidNative.Array<native.Array<number>>, param2: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, param3: string): globalAndroid.util.Pair<com.google.android.exoplayer2.trackselection.ExoTrackSelection.Definition,com.google.android.exoplayer2.trackselection.DefaultTrackSelector.TextTrackScore>;
						public getParameters(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
						public static isSupported(param0: number, param1: boolean): boolean;
						public selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.RendererCapabilities>, param1: com.google.android.exoplayer2.source.TrackGroupArray, param2: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param3: com.google.android.exoplayer2.Timeline): com.google.android.exoplayer2.trackselection.TrackSelectorResult;
						public selectAllTracks(param0: com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo, param1: androidNative.Array<native.Array<native.Array<number>>>, param2: androidNative.Array<number>, param3: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters): androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection.Definition>;
						public buildUponParameters(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.trackselection.ExoTrackSelection.Factory);
						public selectVideoTrack(param0: com.google.android.exoplayer2.source.TrackGroupArray, param1: androidNative.Array<native.Array<number>>, param2: number, param3: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, param4: boolean): com.google.android.exoplayer2.trackselection.ExoTrackSelection.Definition;
					}
					export module DefaultTrackSelector {
						export class AudioTrackScore extends java.lang.Comparable<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.AudioTrackScore> {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.AudioTrackScore>;
							public isWithinConstraints: boolean;
							public constructor(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, param2: number);
							public compareTo(param0: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.AudioTrackScore): number;
						}
						export class OtherTrackScore extends java.lang.Comparable<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.OtherTrackScore> {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.OtherTrackScore>;
							public compareTo(param0: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.OtherTrackScore): number;
							public constructor(param0: com.google.android.exoplayer2.Format, param1: number);
						}
						export class Parameters extends com.google.android.exoplayer2.trackselection.TrackSelectionParameters {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters>;
							public static DEFAULT_WITHOUT_CONTEXT: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
							public maxVideoWidth: number;
							public maxVideoHeight: number;
							public maxVideoFrameRate: number;
							public maxVideoBitrate: number;
							public minVideoWidth: number;
							public minVideoHeight: number;
							public minVideoFrameRate: number;
							public minVideoBitrate: number;
							public exceedVideoConstraintsIfNecessary: boolean;
							public allowVideoMixedMimeTypeAdaptiveness: boolean;
							public allowVideoNonSeamlessAdaptiveness: boolean;
							public viewportWidth: number;
							public viewportHeight: number;
							public viewportOrientationMayChange: boolean;
							public preferredVideoMimeTypes: com.google.common.collect.ImmutableList<string>;
							public maxAudioChannelCount: number;
							public maxAudioBitrate: number;
							public exceedAudioConstraintsIfNecessary: boolean;
							public allowAudioMixedMimeTypeAdaptiveness: boolean;
							public allowAudioMixedSampleRateAdaptiveness: boolean;
							public allowAudioMixedChannelCountAdaptiveness: boolean;
							public preferredAudioMimeTypes: com.google.common.collect.ImmutableList<string>;
							public forceLowestBitrate: boolean;
							public forceHighestSupportedBitrate: boolean;
							public exceedRendererCapabilitiesIfNecessary: boolean;
							public tunnelingEnabled: boolean;
							public allowMultipleAdaptiveSelections: boolean;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters>;
							public getRendererDisabled(param0: number): boolean;
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public static getDefaults(param0: globalAndroid.content.Context): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
							public hashCode(): number;
							public describeContents(): number;
							public static getDefaults(param0: globalAndroid.content.Context): com.google.android.exoplayer2.trackselection.TrackSelectionParameters;
							public buildUpon(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public equals(param0: any): boolean;
							public getSelectionOverride(param0: number, param1: com.google.android.exoplayer2.source.TrackGroupArray): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride;
							public buildUpon(): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public hasSelectionOverride(param0: number, param1: com.google.android.exoplayer2.source.TrackGroupArray): boolean;
						}
						export class ParametersBuilder extends com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder>;
							public setTunnelingEnabled(param0: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredAudioLanguages(param0: androidNative.Array<string>): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setSelectionOverride(param0: number, param1: com.google.android.exoplayer2.source.TrackGroupArray, param2: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public clearSelectionOverride(param0: number, param1: com.google.android.exoplayer2.source.TrackGroupArray): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setSelectUndeterminedTextLanguage(param0: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public clearSelectionOverrides(param0: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public clearVideoSizeConstraints(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredAudioLanguages(param0: androidNative.Array<string>): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setDisabledTextTrackSelectionFlags(param0: number): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(param0: globalAndroid.content.Context): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setPreferredTextLanguage(param0: string): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(param0: globalAndroid.content.Context): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public clearViewportSizeConstraints(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMaxAudioChannelCount(param0: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredAudioLanguage(param0: string): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMaxAudioBitrate(param0: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredAudioMimeTypes(param0: androidNative.Array<string>): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredTextLanguages(param0: androidNative.Array<string>): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public build(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
							public setSelectUndeterminedTextLanguage(param0: boolean): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setPreferredAudioRoleFlags(param0: number): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setViewportSizeToPhysicalDisplaySize(param0: globalAndroid.content.Context, param1: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setExceedAudioConstraintsIfNecessary(param0: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setDisabledTextTrackSelectionFlags(param0: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setForceHighestSupportedBitrate(param0: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredTextLanguages(param0: androidNative.Array<string>): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setAllowAudioMixedMimeTypeAdaptiveness(param0: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredVideoMimeTypes(param0: androidNative.Array<string>): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMaxVideoSize(param0: number, param1: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMaxVideoFrameRate(param0: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMaxVideoSizeSd(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMaxVideoBitrate(param0: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredAudioLanguage(param0: string): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setExceedRendererCapabilitiesIfNecessary(param0: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setViewportSize(param0: number, param1: number, param2: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setAllowVideoNonSeamlessAdaptiveness(param0: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMinVideoFrameRate(param0: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setForceLowestBitrate(param0: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setAllowAudioMixedSampleRateAdaptiveness(param0: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public build(): com.google.android.exoplayer2.trackselection.TrackSelectionParameters;
							public setPreferredTextRoleFlags(param0: number): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setAllowMultipleAdaptiveSelections(param0: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMinVideoBitrate(param0: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setAllowAudioMixedChannelCountAdaptiveness(param0: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setAllowVideoMixedMimeTypeAdaptiveness(param0: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setRendererDisabled(param0: number, param1: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredTextLanguage(param0: string): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setExceedVideoConstraintsIfNecessary(param0: boolean): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredAudioMimeType(param0: string): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setMinVideoSize(param0: number, param1: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							/** @deprecated */
							public constructor();
							public setPreferredVideoMimeType(param0: string): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public clearSelectionOverrides(): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredTextRoleFlags(param0: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public setPreferredAudioRoleFlags(param0: number): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.ParametersBuilder;
							public constructor(param0: globalAndroid.content.Context);
						}
						export class SelectionOverride {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride>;
							public groupIndex: number;
							public tracks: androidNative.Array<number>;
							public length: number;
							public reason: number;
							public data: number;
							public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride>;
							public constructor(param0: number, param1: androidNative.Array<number>);
							public constructor(param0: number, param1: androidNative.Array<number>, param2: number, param3: number);
							public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
							public hashCode(): number;
							public describeContents(): number;
							public equals(param0: any): boolean;
							public containsTrack(param0: number): boolean;
						}
						export class TextTrackScore extends java.lang.Comparable<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.TextTrackScore> {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.TextTrackScore>;
							public isWithinConstraints: boolean;
							public compareTo(param0: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.TextTrackScore): number;
							public constructor(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, param2: number, param3: string);
						}
						export class VideoTrackScore extends java.lang.Comparable<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.VideoTrackScore> {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.VideoTrackScore>;
							public isWithinMaxConstraints: boolean;
							public compareTo(param0: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.VideoTrackScore): number;
							public constructor(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, param2: number, param3: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class ExoTrackSelection extends com.google.android.exoplayer2.trackselection.TrackSelection {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.ExoTrackSelection>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.trackselection.ExoTrackSelection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							enable(): void;
							disable(): void;
							getSelectedFormat(): com.google.android.exoplayer2.Format;
							getSelectedIndexInTrackGroup(): number;
							getSelectedIndex(): number;
							getSelectionReason(): number;
							getSelectionData(): any;
							onPlaybackSpeed(param0: number): void;
							onDiscontinuity(): void;
							onRebuffer(): void;
							onPlayWhenReadyChanged(param0: boolean): void;
							updateSelectedTrack(param0: number, param1: number, param2: number, param3: java.util.List<any>, param4: androidNative.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>): void;
							evaluateQueueSize(param0: number, param1: java.util.List<any>): number;
							shouldCancelChunkLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
							blacklist(param0: number, param1: number): boolean;
							getTrackGroup(): com.google.android.exoplayer2.source.TrackGroup;
							length(): number;
							getFormat(param0: number): com.google.android.exoplayer2.Format;
							getIndexInTrackGroup(param0: number): number;
							indexOf(param0: com.google.android.exoplayer2.Format): number;
							indexOf(param0: number): number;
						});
						public constructor();
						public getIndexInTrackGroup(param0: number): number;
						public onPlayWhenReadyChanged(param0: boolean): void;
						public getSelectionData(): any;
						public getSelectedFormat(): com.google.android.exoplayer2.Format;
						public getSelectedIndexInTrackGroup(): number;
						public length(): number;
						public onPlaybackSpeed(param0: number): void;
						public getSelectionReason(): number;
						public getTrackGroup(): com.google.android.exoplayer2.source.TrackGroup;
						public disable(): void;
						public enable(): void;
						public blacklist(param0: number, param1: number): boolean;
						public evaluateQueueSize(param0: number, param1: java.util.List<any>): number;
						public onRebuffer(): void;
						public shouldCancelChunkLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
						public getSelectedIndex(): number;
						public updateSelectedTrack(param0: number, param1: number, param2: number, param3: java.util.List<any>, param4: androidNative.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>): void;
						public getFormat(param0: number): com.google.android.exoplayer2.Format;
						public indexOf(param0: com.google.android.exoplayer2.Format): number;
						public indexOf(param0: number): number;
						public onDiscontinuity(): void;
					}
					export module ExoTrackSelection {
						export class Definition {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.ExoTrackSelection.Definition>;
							public group: com.google.android.exoplayer2.source.TrackGroup;
							public tracks: androidNative.Array<number>;
							public reason: number;
							public data: any;
							public constructor(param0: com.google.android.exoplayer2.source.TrackGroup, param1: androidNative.Array<number>, param2: number, param3: any);
							public constructor(param0: com.google.android.exoplayer2.source.TrackGroup, param1: androidNative.Array<number>);
						}
						export class Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.ExoTrackSelection.Factory>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.trackselection.ExoTrackSelection$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createTrackSelections(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection.Definition>, param1: com.google.android.exoplayer2.upstream.BandwidthMeter, param2: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param3: com.google.android.exoplayer2.Timeline): androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>;
							});
							public constructor();
							public createTrackSelections(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection.Definition>, param1: com.google.android.exoplayer2.upstream.BandwidthMeter, param2: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param3: com.google.android.exoplayer2.Timeline): androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class FixedTrackSelection extends com.google.android.exoplayer2.trackselection.BaseTrackSelection {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.FixedTrackSelection>;
						public constructor(param0: com.google.android.exoplayer2.source.TrackGroup, param1: androidNative.Array<number>);
						public onPlayWhenReadyChanged(param0: boolean): void;
						public getSelectionData(): any;
						public getSelectedFormat(): com.google.android.exoplayer2.Format;
						public getSelectedIndexInTrackGroup(): number;
						public onPlaybackSpeed(param0: number): void;
						public getSelectionReason(): number;
						public disable(): void;
						public constructor(param0: com.google.android.exoplayer2.source.TrackGroup, param1: number, param2: number, param3: any);
						public enable(): void;
						public constructor(param0: com.google.android.exoplayer2.source.TrackGroup, param1: number);
						public blacklist(param0: number, param1: number): boolean;
						public evaluateQueueSize(param0: number, param1: java.util.List<any>): number;
						public onRebuffer(): void;
						public shouldCancelChunkLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
						public updateSelectedTrack(param0: number, param1: number, param2: number, param3: java.util.List<any>, param4: androidNative.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>): void;
						public getSelectedIndex(): number;
						public onDiscontinuity(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export abstract class MappingTrackSelector extends com.google.android.exoplayer2.trackselection.TrackSelector {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.MappingTrackSelector>;
						public constructor();
						public selectTracks(param0: com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo, param1: androidNative.Array<native.Array<native.Array<number>>>, param2: androidNative.Array<number>, param3: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param4: com.google.android.exoplayer2.Timeline): globalAndroid.util.Pair<native.Array<com.google.android.exoplayer2.RendererConfiguration>,native.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>>;
						public onSelectionActivated(param0: any): void;
						public selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.RendererCapabilities>, param1: com.google.android.exoplayer2.source.TrackGroupArray, param2: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param3: com.google.android.exoplayer2.Timeline): com.google.android.exoplayer2.trackselection.TrackSelectorResult;
						public getCurrentMappedTrackInfo(): com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo;
					}
					export module MappingTrackSelector {
						export class MappedTrackInfo {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo>;
							public static RENDERER_SUPPORT_NO_TRACKS: number;
							public static RENDERER_SUPPORT_UNSUPPORTED_TRACKS: number;
							public static RENDERER_SUPPORT_EXCEEDS_CAPABILITIES_TRACKS: number;
							public static RENDERER_SUPPORT_PLAYABLE_TRACKS: number;
							public getTrackGroups(param0: number): com.google.android.exoplayer2.source.TrackGroupArray;
							public getRendererType(param0: number): number;
							public getRendererCount(): number;
							public getRendererSupport(param0: number): number;
							public getAdaptiveSupport(param0: number, param1: number, param2: androidNative.Array<number>): number;
							public getTypeSupport(param0: number): number;
							public getUnmappedTrackGroups(): com.google.android.exoplayer2.source.TrackGroupArray;
							public getRendererName(param0: number): string;
							public getTrackSupport(param0: number, param1: number, param2: number): number;
							public getAdaptiveSupport(param0: number, param1: number, param2: boolean): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class RandomTrackSelection extends com.google.android.exoplayer2.trackselection.BaseTrackSelection {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.RandomTrackSelection>;
						public constructor(param0: com.google.android.exoplayer2.source.TrackGroup, param1: androidNative.Array<number>, param2: java.util.Random);
						public constructor(param0: com.google.android.exoplayer2.source.TrackGroup, param1: androidNative.Array<number>);
						public onPlayWhenReadyChanged(param0: boolean): void;
						public getSelectionData(): any;
						public getSelectedFormat(): com.google.android.exoplayer2.Format;
						public getSelectedIndexInTrackGroup(): number;
						public onPlaybackSpeed(param0: number): void;
						public getSelectionReason(): number;
						public disable(): void;
						public enable(): void;
						public blacklist(param0: number, param1: number): boolean;
						public evaluateQueueSize(param0: number, param1: java.util.List<any>): number;
						public onRebuffer(): void;
						public shouldCancelChunkLoad(param0: number, param1: com.google.android.exoplayer2.source.chunk.Chunk, param2: java.util.List<any>): boolean;
						public updateSelectedTrack(param0: number, param1: number, param2: number, param3: java.util.List<any>, param4: androidNative.Array<com.google.android.exoplayer2.source.chunk.MediaChunkIterator>): void;
						public getSelectedIndex(): number;
						public constructor(param0: com.google.android.exoplayer2.source.TrackGroup, param1: androidNative.Array<number>, param2: number);
						public onDiscontinuity(): void;
					}
					export module RandomTrackSelection {
						export class Factory extends com.google.android.exoplayer2.trackselection.ExoTrackSelection.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.RandomTrackSelection.Factory>;
							public constructor();
							public createTrackSelections(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection.Definition>, param1: com.google.android.exoplayer2.upstream.BandwidthMeter, param2: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param3: com.google.android.exoplayer2.Timeline): androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>;
							public constructor(param0: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class TrackSelection {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelection>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.trackselection.TrackSelection interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getTrackGroup(): com.google.android.exoplayer2.source.TrackGroup;
							length(): number;
							getFormat(param0: number): com.google.android.exoplayer2.Format;
							getIndexInTrackGroup(param0: number): number;
							indexOf(param0: com.google.android.exoplayer2.Format): number;
							indexOf(param0: number): number;
						});
						public constructor();
						public getIndexInTrackGroup(param0: number): number;
						public length(): number;
						public getFormat(param0: number): com.google.android.exoplayer2.Format;
						public getTrackGroup(): com.google.android.exoplayer2.source.TrackGroup;
						public indexOf(param0: com.google.android.exoplayer2.Format): number;
						public indexOf(param0: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class TrackSelectionArray {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelectionArray>;
						public length: number;
						public constructor(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.TrackSelection>);
						public get(param0: number): com.google.android.exoplayer2.trackselection.TrackSelection;
						public getAll(): androidNative.Array<com.google.android.exoplayer2.trackselection.TrackSelection>;
						public hashCode(): number;
						public equals(param0: any): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class TrackSelectionParameters {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelectionParameters>;
						public static DEFAULT_WITHOUT_CONTEXT: com.google.android.exoplayer2.trackselection.TrackSelectionParameters;
						public static DEFAULT: com.google.android.exoplayer2.trackselection.TrackSelectionParameters;
						public preferredAudioLanguages: com.google.common.collect.ImmutableList<string>;
						public preferredAudioRoleFlags: number;
						public preferredTextLanguages: com.google.common.collect.ImmutableList<string>;
						public preferredTextRoleFlags: number;
						public selectUndeterminedTextLanguage: boolean;
						public disabledTextTrackSelectionFlags: number;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.trackselection.TrackSelectionParameters>;
						public describeContents(): number;
						public buildUpon(): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public static getDefaults(param0: globalAndroid.content.Context): com.google.android.exoplayer2.trackselection.TrackSelectionParameters;
					}
					export module TrackSelectionParameters {
						export class Builder {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder>;
							/** @deprecated */
							public constructor();
							public build(): com.google.android.exoplayer2.trackselection.TrackSelectionParameters;
							public setPreferredAudioLanguages(param0: androidNative.Array<string>): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setSelectUndeterminedTextLanguage(param0: boolean): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setDisabledTextTrackSelectionFlags(param0: number): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setPreferredAudioRoleFlags(param0: number): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setPreferredTextLanguageAndRoleFlagsToCaptioningManagerSettings(param0: globalAndroid.content.Context): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setPreferredTextLanguage(param0: string): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setPreferredTextRoleFlags(param0: number): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setPreferredAudioLanguage(param0: string): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public setPreferredTextLanguages(param0: androidNative.Array<string>): com.google.android.exoplayer2.trackselection.TrackSelectionParameters.Builder;
							public constructor(param0: globalAndroid.content.Context);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class TrackSelectionUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelectionUtil>;
						public static createTrackSelectionsForDefinitions(param0: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection.Definition>, param1: com.google.android.exoplayer2.trackselection.TrackSelectionUtil.AdaptiveTrackSelectionFactory): androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>;
						public static updateParametersWithOverride(param0: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters, param1: number, param2: com.google.android.exoplayer2.source.TrackGroupArray, param3: boolean, param4: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride): com.google.android.exoplayer2.trackselection.DefaultTrackSelector.Parameters;
					}
					export module TrackSelectionUtil {
						export class AdaptiveTrackSelectionFactory {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelectionUtil.AdaptiveTrackSelectionFactory>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.trackselection.TrackSelectionUtil$AdaptiveTrackSelectionFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createAdaptiveTrackSelection(param0: com.google.android.exoplayer2.trackselection.ExoTrackSelection.Definition): com.google.android.exoplayer2.trackselection.ExoTrackSelection;
							});
							public constructor();
							public createAdaptiveTrackSelection(param0: com.google.android.exoplayer2.trackselection.ExoTrackSelection.Definition): com.google.android.exoplayer2.trackselection.ExoTrackSelection;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export abstract class TrackSelector {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelector>;
						public constructor();
						public invalidate(): void;
						public getBandwidthMeter(): com.google.android.exoplayer2.upstream.BandwidthMeter;
						public onSelectionActivated(param0: any): void;
						public selectTracks(param0: androidNative.Array<com.google.android.exoplayer2.RendererCapabilities>, param1: com.google.android.exoplayer2.source.TrackGroupArray, param2: com.google.android.exoplayer2.source.MediaSource.MediaPeriodId, param3: com.google.android.exoplayer2.Timeline): com.google.android.exoplayer2.trackselection.TrackSelectorResult;
						public init(param0: com.google.android.exoplayer2.trackselection.TrackSelector.InvalidationListener, param1: com.google.android.exoplayer2.upstream.BandwidthMeter): void;
					}
					export module TrackSelector {
						export class InvalidationListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelector.InvalidationListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.trackselection.TrackSelector$InvalidationListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onTrackSelectionsInvalidated(): void;
							});
							public constructor();
							public onTrackSelectionsInvalidated(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module trackselection {
					export class TrackSelectorResult {
						public static class: java.lang.Class<com.google.android.exoplayer2.trackselection.TrackSelectorResult>;
						public length: number;
						public rendererConfigurations: androidNative.Array<com.google.android.exoplayer2.RendererConfiguration>;
						public selections: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>;
						public info: any;
						public constructor(param0: androidNative.Array<com.google.android.exoplayer2.RendererConfiguration>, param1: androidNative.Array<com.google.android.exoplayer2.trackselection.ExoTrackSelection>, param2: any);
						public isRendererEnabled(param0: number): boolean;
						public isEquivalent(param0: com.google.android.exoplayer2.trackselection.TrackSelectorResult): boolean;
						public isEquivalent(param0: com.google.android.exoplayer2.trackselection.TrackSelectorResult, param1: number): boolean;
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export class BuildConfig {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.BuildConfig>;
						public static DEBUG: boolean;
						public static LIBRARY_PACKAGE_NAME: string;
						public static APPLICATION_ID: string;
						public static BUILD_TYPE: string;
						public static FLAVOR: string;
						public static VERSION_CODE: number;
						public static VERSION_NAME: string;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export class FrameworkMuxer extends com.google.android.exoplayer2.transformer.Muxer {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.FrameworkMuxer>;
						public writeSampleData(param0: number, param1: java.nio.ByteBuffer, param2: boolean, param3: number): void;
						public addTrack(param0: com.google.android.exoplayer2.Format): number;
						public release(param0: boolean): void;
						public supportsSampleMimeType(param0: string): boolean;
					}
					export module FrameworkMuxer {
						export class Factory extends com.google.android.exoplayer2.transformer.Muxer.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.transformer.FrameworkMuxer.Factory>;
							public constructor();
							public create(param0: string, param1: string): com.google.android.exoplayer2.transformer.Muxer;
							public create(param0: string, param1: string): com.google.android.exoplayer2.transformer.FrameworkMuxer;
							public supportsOutputMimeType(param0: string): boolean;
							public create(param0: globalAndroid.os.ParcelFileDescriptor, param1: string): com.google.android.exoplayer2.transformer.Muxer;
							public create(param0: globalAndroid.os.ParcelFileDescriptor, param1: string): com.google.android.exoplayer2.transformer.FrameworkMuxer;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export class MediaCodecAdapterWrapper {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.MediaCodecAdapterWrapper>;
						public getOutputBuffer(): java.nio.ByteBuffer;
						public static createForAudioDecoding(param0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.transformer.MediaCodecAdapterWrapper;
						public static createForAudioEncoding(param0: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.transformer.MediaCodecAdapterWrapper;
						public getOutputFormat(): com.google.android.exoplayer2.Format;
						public releaseOutputBuffer(): void;
						public isEnded(): boolean;
						public release(): void;
						public queueInputBuffer(param0: com.google.android.exoplayer2.decoder.DecoderInputBuffer): void;
						public maybeDequeueInputBuffer(param0: com.google.android.exoplayer2.decoder.DecoderInputBuffer): boolean;
						public getOutputBufferInfo(): globalAndroid.media.MediaCodec.BufferInfo;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export class Muxer {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.Muxer>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.transformer.Muxer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							supportsSampleMimeType(param0: string): boolean;
							addTrack(param0: com.google.android.exoplayer2.Format): number;
							writeSampleData(param0: number, param1: java.nio.ByteBuffer, param2: boolean, param3: number): void;
							release(param0: boolean): void;
						});
						public constructor();
						public writeSampleData(param0: number, param1: java.nio.ByteBuffer, param2: boolean, param3: number): void;
						public addTrack(param0: com.google.android.exoplayer2.Format): number;
						public release(param0: boolean): void;
						public supportsSampleMimeType(param0: string): boolean;
					}
					export module Muxer {
						export class Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.transformer.Muxer.Factory>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.transformer.Muxer$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								create(param0: string, param1: string): com.google.android.exoplayer2.transformer.Muxer;
								create(param0: globalAndroid.os.ParcelFileDescriptor, param1: string): com.google.android.exoplayer2.transformer.Muxer;
								supportsOutputMimeType(param0: string): boolean;
							});
							public constructor();
							public create(param0: string, param1: string): com.google.android.exoplayer2.transformer.Muxer;
							public supportsOutputMimeType(param0: string): boolean;
							public create(param0: globalAndroid.os.ParcelFileDescriptor, param1: string): com.google.android.exoplayer2.transformer.Muxer;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export class MuxerWrapper {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.MuxerWrapper>;
						public endTrack(param0: number): void;
						public release(param0: boolean): void;
						public registerTrack(): void;
						public writeSample(param0: number, param1: java.nio.ByteBuffer, param2: boolean, param3: number): boolean;
						public supportsSampleMimeType(param0: string): boolean;
						public addTrackFormat(param0: com.google.android.exoplayer2.Format): void;
						public constructor(param0: com.google.android.exoplayer2.transformer.Muxer);
						public getTrackCount(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export class ProgressHolder {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.ProgressHolder>;
						public progress: number;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export class SampleTransformer {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.SampleTransformer>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.transformer.SampleTransformer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							transformSample(param0: com.google.android.exoplayer2.decoder.DecoderInputBuffer): void;
						});
						public constructor();
						public transformSample(param0: com.google.android.exoplayer2.decoder.DecoderInputBuffer): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export class SefSlowMotionVideoSampleTransformer extends com.google.android.exoplayer2.transformer.SampleTransformer {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.SefSlowMotionVideoSampleTransformer>;
						public constructor(param0: com.google.android.exoplayer2.Format);
						public transformSample(param0: com.google.android.exoplayer2.decoder.DecoderInputBuffer): void;
					}
					export module SefSlowMotionVideoSampleTransformer {
						export class MetadataInfo {
							public static class: java.lang.Class<com.google.android.exoplayer2.transformer.SefSlowMotionVideoSampleTransformer.MetadataInfo>;
							public captureFrameRate: number;
							public inputMaxLayer: number;
							public normalSpeedMaxLayer: number;
							public slowMotionData: com.google.android.exoplayer2.metadata.mp4.SlowMotionData;
							public constructor();
						}
						export class SegmentInfo {
							public static class: java.lang.Class<com.google.android.exoplayer2.transformer.SefSlowMotionVideoSampleTransformer.SegmentInfo>;
							public startTimeUs: number;
							public endTimeUs: number;
							public speedDivisor: number;
							public maxLayer: number;
							public constructor(param0: com.google.android.exoplayer2.metadata.mp4.SlowMotionData.Segment, param1: number, param2: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export class SegmentSpeedProvider extends com.google.android.exoplayer2.transformer.SpeedProvider {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.SegmentSpeedProvider>;
						public getSpeed(param0: number): number;
						public constructor(param0: com.google.android.exoplayer2.Format);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export class SpeedProvider {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.SpeedProvider>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.transformer.SpeedProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getSpeed(param0: number): number;
						});
						public constructor();
						public getSpeed(param0: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export class Transformation {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.Transformation>;
						public removeAudio: boolean;
						public removeVideo: boolean;
						public flattenForSlowMotion: boolean;
						public outputMimeType: string;
						public constructor(param0: boolean, param1: boolean, param2: boolean, param3: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export class Transformer {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.Transformer>;
						public static PROGRESS_STATE_WAITING_FOR_AVAILABILITY: number;
						public static PROGRESS_STATE_AVAILABLE: number;
						public static PROGRESS_STATE_UNAVAILABLE: number;
						public static PROGRESS_STATE_NO_TRANSFORMATION: number;
						public setListener(param0: com.google.android.exoplayer2.transformer.Transformer.Listener): void;
						public startTransformation(param0: com.google.android.exoplayer2.MediaItem, param1: globalAndroid.os.ParcelFileDescriptor): void;
						public getProgress(param0: com.google.android.exoplayer2.transformer.ProgressHolder): number;
						public cancel(): void;
						public startTransformation(param0: com.google.android.exoplayer2.MediaItem, param1: string): void;
						public getApplicationLooper(): globalAndroid.os.Looper;
						public buildUpon(): com.google.android.exoplayer2.transformer.Transformer.Builder;
					}
					export module Transformer {
						export class Builder {
							public static class: java.lang.Class<com.google.android.exoplayer2.transformer.Transformer.Builder>;
							public constructor();
							public setContext(param0: globalAndroid.content.Context): com.google.android.exoplayer2.transformer.Transformer.Builder;
							public setRemoveAudio(param0: boolean): com.google.android.exoplayer2.transformer.Transformer.Builder;
							public setOutputMimeType(param0: string): com.google.android.exoplayer2.transformer.Transformer.Builder;
							public setListener(param0: com.google.android.exoplayer2.transformer.Transformer.Listener): com.google.android.exoplayer2.transformer.Transformer.Builder;
							public setLooper(param0: globalAndroid.os.Looper): com.google.android.exoplayer2.transformer.Transformer.Builder;
							public setRemoveVideo(param0: boolean): com.google.android.exoplayer2.transformer.Transformer.Builder;
							public setFlattenForSlowMotion(param0: boolean): com.google.android.exoplayer2.transformer.Transformer.Builder;
							public setMediaSourceFactory(param0: com.google.android.exoplayer2.source.MediaSourceFactory): com.google.android.exoplayer2.transformer.Transformer.Builder;
							public build(): com.google.android.exoplayer2.transformer.Transformer;
						}
						export class Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.transformer.Transformer.Listener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.transformer.Transformer$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onTransformationCompleted(param0: com.google.android.exoplayer2.MediaItem): void;
								onTransformationError(param0: com.google.android.exoplayer2.MediaItem, param1: java.lang.Exception): void;
							});
							public constructor();
							public onTransformationError(param0: com.google.android.exoplayer2.MediaItem, param1: java.lang.Exception): void;
							public onTransformationCompleted(param0: com.google.android.exoplayer2.MediaItem): void;
						}
						export class ProgressState {
							public static class: java.lang.Class<com.google.android.exoplayer2.transformer.Transformer.ProgressState>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.transformer.Transformer$ProgressState interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
						export class TransformerAnalyticsListener extends com.google.android.exoplayer2.analytics.AnalyticsListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.transformer.Transformer.TransformerAnalyticsListener>;
							public onTimelineChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							public onAudioDecoderInitialized(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: number): void;
							/** @deprecated */
							public onLoadingChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
							public onVideoEnabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							public onPlaybackSuppressionReasonChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							public onLoadStarted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onAudioInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
							public onPositionDiscontinuity(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							public onAudioAttributesChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.audio.AudioAttributes): void;
							public onIsPlayingChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
							public onDrmKeysLoaded(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							public onStaticMetadataChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
							public onLoadCompleted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onAudioPositionAdvancing(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							public onPlayerError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.ExoPlaybackException): void;
							public onUpstreamDiscarded(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onDroppedVideoFrames(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number): void;
							public onRenderedFirstFrame(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: globalAndroid.view.Surface): void;
							public onDrmSessionManagerError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.lang.Exception): void;
							/** @deprecated */
							public onVideoInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format): void;
							public onDrmSessionAcquired(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							public onMediaItemTransition(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.MediaItem, param2: number): void;
							public onAudioSinkError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.lang.Exception): void;
							public onVideoDisabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							/** @deprecated */
							public onDecoderEnabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							public onDrmKeysRestored(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							public onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.analytics.AnalyticsListener.Events): void;
							public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.PlaybackParameters): void;
							public onAudioDecoderReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
							public constructor(param0: com.google.android.exoplayer2.transformer.Transformer, param1: com.google.android.exoplayer2.MediaItem, param2: com.google.android.exoplayer2.transformer.MuxerWrapper);
							public onSeekStarted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							public onVideoInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
							public onIsLoadingChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
							public onAudioSessionIdChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							public onTracksChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.TrackGroupArray, param2: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
							/** @deprecated */
							public onSeekProcessed(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							public onShuffleModeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
							public onRepeatModeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							public onVideoDecoderInitialized(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: number): void;
							public onVideoSizeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number, param3: number, param4: number): void;
							public onMetadata(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.metadata.Metadata): void;
							public onAudioDisabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							public onDrmSessionReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							public onBandwidthEstimate(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number, param3: number): void;
							public onPlayerReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							/** @deprecated */
							public onPlayerStateChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean, param2: number): void;
							public onSkipSilenceEnabledChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
							public onDrmKeysRemoved(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
							public onVolumeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							public onVideoFrameProcessingOffset(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number): void;
							public onLoadCanceled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
							public onAudioUnderrun(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number, param3: number): void;
							public onLoadError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData, param3: java.io.IOException, param4: boolean): void;
							/** @deprecated */
							public onAudioInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format): void;
							public onSurfaceSizeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number): void;
							public onPlayWhenReadyChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean, param2: number): void;
							public onVideoDecoderReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
							public onPlaybackStateChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
							/** @deprecated */
							public onDecoderDisabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							public onAudioEnabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							/** @deprecated */
							public onDecoderInitialized(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: string, param3: number): void;
							public onDownstreamFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.MediaLoadData): void;
							/** @deprecated */
							public onDecoderInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.Format): void;
						}
						export class TransformerRenderersFactory extends com.google.android.exoplayer2.RenderersFactory {
							public static class: java.lang.Class<com.google.android.exoplayer2.transformer.Transformer.TransformerRenderersFactory>;
							public constructor(param0: com.google.android.exoplayer2.transformer.MuxerWrapper, param1: com.google.android.exoplayer2.transformer.Transformation);
							public createRenderers(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.video.VideoRendererEventListener, param2: com.google.android.exoplayer2.audio.AudioRendererEventListener, param3: com.google.android.exoplayer2.text.TextOutput, param4: com.google.android.exoplayer2.metadata.MetadataOutput): androidNative.Array<com.google.android.exoplayer2.Renderer>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export class TransformerAudioRenderer extends com.google.android.exoplayer2.transformer.TransformerBaseRenderer {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.TransformerAudioRenderer>;
						public constructor(param0: com.google.android.exoplayer2.transformer.MuxerWrapper, param1: com.google.android.exoplayer2.transformer.TransformerMediaClock, param2: com.google.android.exoplayer2.transformer.Transformation);
						public constructor(param0: number, param1: com.google.android.exoplayer2.transformer.MuxerWrapper, param2: com.google.android.exoplayer2.transformer.TransformerMediaClock, param3: com.google.android.exoplayer2.transformer.Transformation);
						public render(param0: number, param1: number): void;
						public getName(): string;
						public replaceStream(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: com.google.android.exoplayer2.source.SampleStream, param2: number, param3: number): void;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public static create(param0: number): number;
						public static getTunnelingSupport(param0: number): number;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public static getAdaptiveSupport(param0: number): number;
						public isEnded(): boolean;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public setPlaybackSpeed(param0: number, param1: number): void;
						public setCurrentStreamFinal(): void;
						public resetPosition(param0: number): void;
						public enable(param0: com.google.android.exoplayer2.RendererConfiguration, param1: androidNative.Array<com.google.android.exoplayer2.Format>, param2: com.google.android.exoplayer2.source.SampleStream, param3: number, param4: boolean, param5: boolean, param6: number, param7: number): void;
						public hasReadStreamToEnd(): boolean;
						public setIndex(param0: number): void;
						public isReady(): boolean;
						public disable(): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public static getFormatSupport(param0: number): number;
						public supportsFormat(param0: com.google.android.exoplayer2.Format): number;
						public start(): void;
						public static create(param0: number, param1: number, param2: number): number;
						public constructor(param0: number);
						public getState(): number;
						public maybeThrowStreamError(): void;
						public onReset(): void;
						public getReadingPositionUs(): number;
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export abstract class TransformerBaseRenderer extends com.google.android.exoplayer2.BaseRenderer {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.TransformerBaseRenderer>;
						public muxerWrapper: com.google.android.exoplayer2.transformer.MuxerWrapper;
						public mediaClock: com.google.android.exoplayer2.transformer.TransformerMediaClock;
						public transformation: com.google.android.exoplayer2.transformer.Transformation;
						public isRendererStarted: boolean;
						public constructor(param0: number, param1: com.google.android.exoplayer2.transformer.MuxerWrapper, param2: com.google.android.exoplayer2.transformer.TransformerMediaClock, param3: com.google.android.exoplayer2.transformer.Transformation);
						public onStarted(): void;
						public render(param0: number, param1: number): void;
						public getName(): string;
						public replaceStream(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: com.google.android.exoplayer2.source.SampleStream, param2: number, param3: number): void;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public static create(param0: number): number;
						public static getTunnelingSupport(param0: number): number;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public static getAdaptiveSupport(param0: number): number;
						public isEnded(): boolean;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public setPlaybackSpeed(param0: number, param1: number): void;
						public setCurrentStreamFinal(): void;
						public resetPosition(param0: number): void;
						public enable(param0: com.google.android.exoplayer2.RendererConfiguration, param1: androidNative.Array<com.google.android.exoplayer2.Format>, param2: com.google.android.exoplayer2.source.SampleStream, param3: number, param4: boolean, param5: boolean, param6: number, param7: number): void;
						public hasReadStreamToEnd(): boolean;
						public isReady(): boolean;
						public setIndex(param0: number): void;
						public disable(): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public onEnabled(param0: boolean, param1: boolean): void;
						public static getFormatSupport(param0: number): number;
						public supportsFormat(param0: com.google.android.exoplayer2.Format): number;
						public start(): void;
						public static create(param0: number, param1: number, param2: number): number;
						public constructor(param0: number);
						public getState(): number;
						public maybeThrowStreamError(): void;
						public onStopped(): void;
						public getReadingPositionUs(): number;
						public reset(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export class TransformerMediaClock extends com.google.android.exoplayer2.util.MediaClock {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.TransformerMediaClock>;
						public updateTimeForTrackType(param0: number, param1: number): void;
						public getPositionUs(): number;
						public constructor();
						public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						public setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module transformer {
					export class TransformerVideoRenderer extends com.google.android.exoplayer2.transformer.TransformerBaseRenderer {
						public static class: java.lang.Class<com.google.android.exoplayer2.transformer.TransformerVideoRenderer>;
						public constructor(param0: com.google.android.exoplayer2.transformer.MuxerWrapper, param1: com.google.android.exoplayer2.transformer.TransformerMediaClock, param2: com.google.android.exoplayer2.transformer.Transformation);
						public constructor(param0: number, param1: com.google.android.exoplayer2.transformer.MuxerWrapper, param2: com.google.android.exoplayer2.transformer.TransformerMediaClock, param3: com.google.android.exoplayer2.transformer.Transformation);
						public render(param0: number, param1: number): void;
						public getName(): string;
						public replaceStream(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: com.google.android.exoplayer2.source.SampleStream, param2: number, param3: number): void;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public static create(param0: number): number;
						public static getTunnelingSupport(param0: number): number;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public static getAdaptiveSupport(param0: number): number;
						public isEnded(): boolean;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public setPlaybackSpeed(param0: number, param1: number): void;
						public setCurrentStreamFinal(): void;
						public resetPosition(param0: number): void;
						public enable(param0: com.google.android.exoplayer2.RendererConfiguration, param1: androidNative.Array<com.google.android.exoplayer2.Format>, param2: com.google.android.exoplayer2.source.SampleStream, param3: number, param4: boolean, param5: boolean, param6: number, param7: number): void;
						public hasReadStreamToEnd(): boolean;
						public setIndex(param0: number): void;
						public isReady(): boolean;
						public disable(): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public static getFormatSupport(param0: number): number;
						public supportsFormat(param0: com.google.android.exoplayer2.Format): number;
						public start(): void;
						public static create(param0: number, param1: number, param2: number): number;
						public constructor(param0: number);
						public getState(): number;
						public maybeThrowStreamError(): void;
						public getReadingPositionUs(): number;
						public reset(): void;
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class AspectRatioFrameLayout {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.AspectRatioFrameLayout>;
						public static RESIZE_MODE_FIT: number;
						public static RESIZE_MODE_FIXED_WIDTH: number;
						public static RESIZE_MODE_FIXED_HEIGHT: number;
						public static RESIZE_MODE_FILL: number;
						public static RESIZE_MODE_ZOOM: number;
						public setAspectRatio(param0: number): void;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setAspectRatioListener(param0: com.google.android.exoplayer2.ui.AspectRatioFrameLayout.AspectRatioListener): void;
						public setResizeMode(param0: number): void;
						public getResizeMode(): number;
						public onMeasure(param0: number, param1: number): void;
					}
					export module AspectRatioFrameLayout {
						export class AspectRatioListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.AspectRatioFrameLayout.AspectRatioListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.AspectRatioFrameLayout$AspectRatioListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onAspectRatioUpdated(param0: number, param1: number, param2: boolean): void;
							});
							public constructor();
							public onAspectRatioUpdated(param0: number, param1: number, param2: boolean): void;
						}
						export class AspectRatioUpdateDispatcher {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.AspectRatioFrameLayout.AspectRatioUpdateDispatcher>;
							public scheduleUpdate(param0: number, param1: number, param2: boolean): void;
							public run(): void;
						}
						export class ResizeMode {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.AspectRatioFrameLayout.ResizeMode>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.AspectRatioFrameLayout$ResizeMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class BuildConfig {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.BuildConfig>;
						public static DEBUG: boolean;
						public static LIBRARY_PACKAGE_NAME: string;
						public static APPLICATION_ID: string;
						public static BUILD_TYPE: string;
						public static FLAVOR: string;
						public static VERSION_CODE: number;
						public static VERSION_NAME: string;
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class CanvasSubtitleOutput implements com.google.android.exoplayer2.ui.SubtitleView.Output {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.CanvasSubtitleOutput>;
						public update(param0: java.util.List<com.google.android.exoplayer2.text.Cue>, param1: com.google.android.exoplayer2.text.CaptionStyleCompat, param2: number, param3: number, param4: number): void;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public dispatchDraw(param0: globalAndroid.graphics.Canvas): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class DebugTextViewHelper extends com.google.android.exoplayer2.Player.EventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.DebugTextViewHelper>;
						public onPlayerError(param0: com.google.android.exoplayer2.ExoPlaybackException): void;
						public constructor(param0: com.google.android.exoplayer2.SimpleExoPlayer, param1: globalAndroid.widget.TextView);
						public onPlayWhenReadyChanged(param0: boolean, param1: number): void;
						/** @deprecated */
						public onLoadingChanged(param0: boolean): void;
						public getAudioString(): string;
						public onPlaybackSuppressionReasonChanged(param0: number): void;
						public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.PlaybackParameters): void;
						public onStaticMetadataChanged(param0: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
						public getVideoString(): string;
						/** @deprecated */
						public onPlayerStateChanged(param0: boolean, param1: number): void;
						public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: number): void;
						public onIsPlayingChanged(param0: boolean): void;
						public onTracksChanged(param0: com.google.android.exoplayer2.source.TrackGroupArray, param1: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onPlaybackStateChanged(param0: number): void;
						public onExperimentalSleepingForOffloadChanged(param0: boolean): void;
						public onShuffleModeEnabledChanged(param0: boolean): void;
						public updateAndPost(): void;
						/** @deprecated */
						public onSeekProcessed(): void;
						public stop(): void;
						public onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.Player.Events): void;
						public onIsLoadingChanged(param0: boolean): void;
						public start(): void;
						public run(): void;
						public getDebugString(): string;
						public getPlayerStateString(): string;
						/** @deprecated */
						public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: any, param2: number): void;
						public onMediaItemTransition(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
						public onExperimentalOffloadSchedulingEnabledChanged(param0: boolean): void;
						public onPositionDiscontinuity(param0: number): void;
						public onRepeatModeChanged(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class DefaultTimeBar implements com.google.android.exoplayer2.ui.TimeBar {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.DefaultTimeBar>;
						public static DEFAULT_BAR_HEIGHT_DP: number;
						public static DEFAULT_TOUCH_TARGET_HEIGHT_DP: number;
						public static DEFAULT_AD_MARKER_WIDTH_DP: number;
						public static DEFAULT_SCRUBBER_ENABLED_SIZE_DP: number;
						public static DEFAULT_SCRUBBER_DISABLED_SIZE_DP: number;
						public static DEFAULT_SCRUBBER_DRAGGED_SIZE_DP: number;
						public static DEFAULT_PLAYED_COLOR: number;
						public static DEFAULT_UNPLAYED_COLOR: number;
						public static DEFAULT_BUFFERED_COLOR: number;
						public static DEFAULT_SCRUBBER_COLOR: number;
						public static DEFAULT_AD_MARKER_COLOR: number;
						public static DEFAULT_PLAYED_AD_MARKER_COLOR: number;
						public static BAR_GRAVITY_CENTER: number;
						public static BAR_GRAVITY_BOTTOM: number;
						public constructor(param0: globalAndroid.content.Context);
						public setKeyCountIncrement(param0: number): void;
						public onInitializeAccessibilityNodeInfo(param0: globalAndroid.view.accessibility.AccessibilityNodeInfo): void;
						public setKeyTimeIncrement(param0: number): void;
						public setPlayedColor(param0: number): void;
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
						public drawableStateChanged(): void;
						public onInitializeAccessibilityEvent(param0: globalAndroid.view.accessibility.AccessibilityEvent): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: globalAndroid.util.AttributeSet, param4: number);
						public hideScrubber(param0: boolean): void;
						public setBufferedColor(param0: number): void;
						public removeListener(param0: com.google.android.exoplayer2.ui.TimeBar.OnScrubListener): void;
						public showScrubber(): void;
						public setBufferedPosition(param0: number): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setScrubberColor(param0: number): void;
						public setUnplayedColor(param0: number): void;
						public onMeasure(param0: number, param1: number): void;
						public showScrubber(param0: number): void;
						public hideScrubber(param0: number): void;
						public setPlayedAdMarkerColor(param0: number): void;
						public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public onRtlPropertiesChanged(param0: number): void;
						public onFocusChanged(param0: boolean, param1: number, param2: globalAndroid.graphics.Rect): void;
						public setAdGroupTimesMs(param0: androidNative.Array<number>, param1: androidNative.Array<boolean>, param2: number): void;
						public performAccessibilityAction(param0: number, param1: globalAndroid.os.Bundle): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: globalAndroid.util.AttributeSet);
						public setEnabled(param0: boolean): void;
						public jumpDrawablesToCurrentState(): void;
						public getPreferredUpdateDelay(): number;
						public onDraw(param0: globalAndroid.graphics.Canvas): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public onKeyDown(param0: number, param1: globalAndroid.view.KeyEvent): boolean;
						public setAdMarkerColor(param0: number): void;
						public setPosition(param0: number): void;
						public setDuration(param0: number): void;
						public addListener(param0: com.google.android.exoplayer2.ui.TimeBar.OnScrubListener): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class DefaultTrackNameProvider extends com.google.android.exoplayer2.ui.TrackNameProvider {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.DefaultTrackNameProvider>;
						public getTrackName(param0: com.google.android.exoplayer2.Format): string;
						public constructor(param0: globalAndroid.content.res.Resources);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class DownloadNotificationHelper {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.DownloadNotificationHelper>;
						public buildDownloadFailedNotification(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.app.PendingIntent, param3: string): globalAndroid.app.Notification;
						public buildProgressNotification(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.app.PendingIntent, param3: string, param4: java.util.List<com.google.android.exoplayer2.offline.Download>): globalAndroid.app.Notification;
						public constructor(param0: globalAndroid.content.Context, param1: string);
						public buildDownloadCompletedNotification(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.app.PendingIntent, param3: string): globalAndroid.app.Notification;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class DownloadNotificationUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.DownloadNotificationUtil>;
						public static buildDownloadFailedNotification(param0: globalAndroid.content.Context, param1: number, param2: string, param3: globalAndroid.app.PendingIntent, param4: string): globalAndroid.app.Notification;
						public static buildProgressNotification(param0: globalAndroid.content.Context, param1: number, param2: string, param3: globalAndroid.app.PendingIntent, param4: string, param5: java.util.List<com.google.android.exoplayer2.offline.Download>): globalAndroid.app.Notification;
						public static buildDownloadCompletedNotification(param0: globalAndroid.content.Context, param1: number, param2: string, param3: globalAndroid.app.PendingIntent, param4: string): globalAndroid.app.Notification;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class HtmlUtils {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.HtmlUtils>;
						public static cssAllClassDescendantsSelector(param0: string): string;
						public static toCssRgba(param0: number): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class PlayerControlView {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerControlView>;
						public static DEFAULT_SHOW_TIMEOUT_MS: number;
						public static DEFAULT_REPEAT_TOGGLE_MODES: number;
						public static DEFAULT_TIME_BAR_MIN_UPDATE_INTERVAL_MS: number;
						public static MAX_WINDOWS_FOR_MULTI_WINDOW_TIME_BAR: number;
						public getPlayer(): com.google.android.exoplayer2.Player;
						/** @deprecated */
						public setRewindIncrementMs(param0: number): void;
						public constructor(param0: globalAndroid.content.Context);
						public setRepeatToggleModes(param0: number): void;
						public getShowShuffleButton(): boolean;
						public removeVisibilityListener(param0: com.google.android.exoplayer2.ui.PlayerControlView.VisibilityListener): void;
						public onAttachedToWindow(): void;
						public setShowTimeoutMs(param0: number): void;
						public setProgressUpdateListener(param0: com.google.android.exoplayer2.ui.PlayerControlView.ProgressUpdateListener): void;
						public setShowFastForwardButton(param0: boolean): void;
						public setTimeBarMinUpdateInterval(param0: number): void;
						public addVisibilityListener(param0: com.google.android.exoplayer2.ui.PlayerControlView.VisibilityListener): void;
						public setControlDispatcher(param0: com.google.android.exoplayer2.ControlDispatcher): void;
						public isVisible(): boolean;
						public dispatchMediaKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
						public getRepeatToggleModes(): number;
						public getShowVrButton(): boolean;
						public dispatchTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						/** @deprecated */
						public setPlaybackPreparer(param0: com.google.android.exoplayer2.PlaybackPreparer): void;
						public setVrButtonListener(param0: globalAndroid.view.View.OnClickListener): void;
						public setShowVrButton(param0: boolean): void;
						public setExtraAdGroupMarkers(param0: androidNative.Array<number>, param1: androidNative.Array<boolean>): void;
						public setShowPreviousButton(param0: boolean): void;
						public setShowNextButton(param0: boolean): void;
						public onDetachedFromWindow(): void;
						public setShowRewindButton(param0: boolean): void;
						/** @deprecated */
						public setFastForwardIncrementMs(param0: number): void;
						public hide(): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: globalAndroid.util.AttributeSet);
						public setShowMultiWindowTimeBar(param0: boolean): void;
						public setPlayer(param0: com.google.android.exoplayer2.Player): void;
						public setShowShuffleButton(param0: boolean): void;
						public show(): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public getShowTimeoutMs(): number;
					}
					export module PlayerControlView {
						export class ComponentListener implements com.google.android.exoplayer2.Player.EventListener, com.google.android.exoplayer2.ui.TimeBar.OnScrubListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerControlView.ComponentListener>;
							public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.PlaybackParameters): void;
							public onIsLoadingChanged(param0: boolean): void;
							public onPlaybackStateChanged(param0: number): void;
							public onTracksChanged(param0: com.google.android.exoplayer2.source.TrackGroupArray, param1: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
							public onScrubStop(param0: com.google.android.exoplayer2.ui.TimeBar, param1: number, param2: boolean): void;
							public onClick(param0: globalAndroid.view.View): void;
							/** @deprecated */
							public onLoadingChanged(param0: boolean): void;
							public onExperimentalOffloadSchedulingEnabledChanged(param0: boolean): void;
							public onScrubMove(param0: com.google.android.exoplayer2.ui.TimeBar, param1: number): void;
							public onPlaybackSuppressionReasonChanged(param0: number): void;
							public onIsPlayingChanged(param0: boolean): void;
							public onPlayerError(param0: com.google.android.exoplayer2.ExoPlaybackException): void;
							public onPositionDiscontinuity(param0: number): void;
							public onMediaItemTransition(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
							/** @deprecated */
							public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: any, param2: number): void;
							/** @deprecated */
							public onSeekProcessed(): void;
							public onStaticMetadataChanged(param0: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
							public onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.Player.Events): void;
							/** @deprecated */
							public onPlayerStateChanged(param0: boolean, param1: number): void;
							public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: number): void;
							public onRepeatModeChanged(param0: number): void;
							public onShuffleModeEnabledChanged(param0: boolean): void;
							public onExperimentalSleepingForOffloadChanged(param0: boolean): void;
							public onPlayWhenReadyChanged(param0: boolean, param1: number): void;
							public onScrubStart(param0: com.google.android.exoplayer2.ui.TimeBar, param1: number): void;
						}
						export class ProgressUpdateListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerControlView.ProgressUpdateListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.PlayerControlView$ProgressUpdateListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onProgressUpdate(param0: number, param1: number): void;
							});
							public constructor();
							public onProgressUpdate(param0: number, param1: number): void;
						}
						export class VisibilityListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerControlView.VisibilityListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.PlayerControlView$VisibilityListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onVisibilityChange(param0: number): void;
							});
							public constructor();
							public onVisibilityChange(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class PlayerNotificationManager {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerNotificationManager>;
						public static ACTION_PLAY: string;
						public static ACTION_PAUSE: string;
						public static ACTION_PREVIOUS: string;
						public static ACTION_NEXT: string;
						public static ACTION_FAST_FORWARD: string;
						public static ACTION_REWIND: string;
						public static ACTION_STOP: string;
						public static EXTRA_INSTANCE_ID: string;
						/** @deprecated */
						public static createWithNotificationChannel(param0: globalAndroid.content.Context, param1: string, param2: number, param3: number, param4: com.google.android.exoplayer2.ui.PlayerNotificationManager.MediaDescriptionAdapter): com.google.android.exoplayer2.ui.PlayerNotificationManager;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: number, param3: com.google.android.exoplayer2.ui.PlayerNotificationManager.MediaDescriptionAdapter, param4: com.google.android.exoplayer2.ui.PlayerNotificationManager.CustomActionReceiver);
						/** @deprecated */
						public setRewindIncrementMs(param0: number): void;
						public setVisibility(param0: number): void;
						public setUseChronometer(param0: boolean): void;
						public setPriority(param0: number): void;
						public setSmallIcon(param0: number): void;
						public setUsePlayPauseActions(param0: boolean): void;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: number, param3: com.google.android.exoplayer2.ui.PlayerNotificationManager.MediaDescriptionAdapter, param4: com.google.android.exoplayer2.ui.PlayerNotificationManager.NotificationListener);
						public getActionIndicesForCompactView(param0: java.util.List<string>, param1: com.google.android.exoplayer2.Player): androidNative.Array<number>;
						public setControlDispatcher(param0: com.google.android.exoplayer2.ControlDispatcher): void;
						/** @deprecated */
						public setUseNavigationActionsInCompactView(param0: boolean): void;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: number, param3: com.google.android.exoplayer2.ui.PlayerNotificationManager.MediaDescriptionAdapter, param4: com.google.android.exoplayer2.ui.PlayerNotificationManager.NotificationListener, param5: com.google.android.exoplayer2.ui.PlayerNotificationManager.CustomActionReceiver);
						public getOngoing(param0: com.google.android.exoplayer2.Player): boolean;
						public setColorized(param0: boolean): void;
						/** @deprecated */
						public setPlaybackPreparer(param0: com.google.android.exoplayer2.PlaybackPreparer): void;
						/** @deprecated */
						public setFastForwardIncrementMs(param0: number): void;
						public setDefaults(param0: number): void;
						public setColor(param0: number): void;
						public getActions(param0: com.google.android.exoplayer2.Player): java.util.List<string>;
						public setUsePreviousAction(param0: boolean): void;
						/** @deprecated */
						public setNotificationListener(param0: com.google.android.exoplayer2.ui.PlayerNotificationManager.NotificationListener): void;
						public setUsePreviousActionInCompactView(param0: boolean): void;
						public static createWithNotificationChannel(param0: globalAndroid.content.Context, param1: string, param2: number, param3: number, param4: number, param5: com.google.android.exoplayer2.ui.PlayerNotificationManager.MediaDescriptionAdapter): com.google.android.exoplayer2.ui.PlayerNotificationManager;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: number, param3: com.google.android.exoplayer2.ui.PlayerNotificationManager.MediaDescriptionAdapter);
						public setPlayer(param0: com.google.android.exoplayer2.Player): void;
						public setUseNextAction(param0: boolean): void;
						/** @deprecated */
						public setUseNavigationActions(param0: boolean): void;
						public setUseNextActionInCompactView(param0: boolean): void;
						public invalidate(): void;
						public static createWithNotificationChannel(param0: globalAndroid.content.Context, param1: string, param2: number, param3: number, param4: number, param5: com.google.android.exoplayer2.ui.PlayerNotificationManager.MediaDescriptionAdapter, param6: com.google.android.exoplayer2.ui.PlayerNotificationManager.NotificationListener): com.google.android.exoplayer2.ui.PlayerNotificationManager;
						public setUseStopAction(param0: boolean): void;
						public createNotification(param0: com.google.android.exoplayer2.Player, param1: androidx.core.app.NotificationCompat.Builder, param2: boolean, param3: globalAndroid.graphics.Bitmap): androidx.core.app.NotificationCompat.Builder;
						/** @deprecated */
						public static createWithNotificationChannel(param0: globalAndroid.content.Context, param1: string, param2: number, param3: number, param4: com.google.android.exoplayer2.ui.PlayerNotificationManager.MediaDescriptionAdapter, param5: com.google.android.exoplayer2.ui.PlayerNotificationManager.NotificationListener): com.google.android.exoplayer2.ui.PlayerNotificationManager;
						public setBadgeIconType(param0: number): void;
						public setMediaSessionToken(param0: globalAndroid.support.v4.media.session.MediaSessionCompat.Token): void;
					}
					export module PlayerNotificationManager {
						export class BitmapCallback {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerNotificationManager.BitmapCallback>;
							public onBitmap(param0: globalAndroid.graphics.Bitmap): void;
						}
						export class CustomActionReceiver {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerNotificationManager.CustomActionReceiver>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.PlayerNotificationManager$CustomActionReceiver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createCustomActions(param0: globalAndroid.content.Context, param1: number): java.util.Map<string,androidx.core.app.NotificationCompat.Action>;
								getCustomActions(param0: com.google.android.exoplayer2.Player): java.util.List<string>;
								onCustomAction(param0: com.google.android.exoplayer2.Player, param1: string, param2: globalAndroid.content.Intent): void;
							});
							public constructor();
							public getCustomActions(param0: com.google.android.exoplayer2.Player): java.util.List<string>;
							public onCustomAction(param0: com.google.android.exoplayer2.Player, param1: string, param2: globalAndroid.content.Intent): void;
							public createCustomActions(param0: globalAndroid.content.Context, param1: number): java.util.Map<string,androidx.core.app.NotificationCompat.Action>;
						}
						export class MediaDescriptionAdapter {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerNotificationManager.MediaDescriptionAdapter>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.PlayerNotificationManager$MediaDescriptionAdapter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getCurrentContentTitle(param0: com.google.android.exoplayer2.Player): string;
								createCurrentContentIntent(param0: com.google.android.exoplayer2.Player): globalAndroid.app.PendingIntent;
								getCurrentContentText(param0: com.google.android.exoplayer2.Player): string;
								getCurrentSubText(param0: com.google.android.exoplayer2.Player): string;
								getCurrentLargeIcon(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.ui.PlayerNotificationManager.BitmapCallback): globalAndroid.graphics.Bitmap;
							});
							public constructor();
							public getCurrentContentText(param0: com.google.android.exoplayer2.Player): string;
							public getCurrentLargeIcon(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.ui.PlayerNotificationManager.BitmapCallback): globalAndroid.graphics.Bitmap;
							public getCurrentContentTitle(param0: com.google.android.exoplayer2.Player): string;
							public getCurrentSubText(param0: com.google.android.exoplayer2.Player): string;
							public createCurrentContentIntent(param0: com.google.android.exoplayer2.Player): globalAndroid.app.PendingIntent;
						}
						export class NotificationBroadcastReceiver {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerNotificationManager.NotificationBroadcastReceiver>;
							public onReceive(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): void;
						}
						export class NotificationListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerNotificationManager.NotificationListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.PlayerNotificationManager$NotificationListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onNotificationStarted(param0: number, param1: globalAndroid.app.Notification): void;
								onNotificationCancelled(param0: number): void;
								onNotificationCancelled(param0: number, param1: boolean): void;
								onNotificationPosted(param0: number, param1: globalAndroid.app.Notification, param2: boolean): void;
							});
							public constructor();
							/** @deprecated */
							public onNotificationStarted(param0: number, param1: globalAndroid.app.Notification): void;
							public onNotificationPosted(param0: number, param1: globalAndroid.app.Notification, param2: boolean): void;
							public onNotificationCancelled(param0: number, param1: boolean): void;
							/** @deprecated */
							public onNotificationCancelled(param0: number): void;
						}
						export class PlayerListener extends com.google.android.exoplayer2.Player.EventListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerNotificationManager.PlayerListener>;
							public onPositionDiscontinuity(param0: number): void;
							public onMediaItemTransition(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
							public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.PlaybackParameters): void;
							/** @deprecated */
							public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: any, param2: number): void;
							public onIsLoadingChanged(param0: boolean): void;
							/** @deprecated */
							public onSeekProcessed(): void;
							public onPlaybackStateChanged(param0: number): void;
							public onStaticMetadataChanged(param0: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
							public onTracksChanged(param0: com.google.android.exoplayer2.source.TrackGroupArray, param1: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
							public onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.Player.Events): void;
							/** @deprecated */
							public onPlayerStateChanged(param0: boolean, param1: number): void;
							public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: number): void;
							/** @deprecated */
							public onLoadingChanged(param0: boolean): void;
							public onRepeatModeChanged(param0: number): void;
							public onShuffleModeEnabledChanged(param0: boolean): void;
							public onExperimentalOffloadSchedulingEnabledChanged(param0: boolean): void;
							public onExperimentalSleepingForOffloadChanged(param0: boolean): void;
							public onPlayWhenReadyChanged(param0: boolean, param1: number): void;
							public onPlaybackSuppressionReasonChanged(param0: number): void;
							public onIsPlayingChanged(param0: boolean): void;
							public onPlayerError(param0: com.google.android.exoplayer2.ExoPlaybackException): void;
						}
						export class Priority {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerNotificationManager.Priority>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.PlayerNotificationManager$Priority interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
						export class Visibility {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerNotificationManager.Visibility>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.PlayerNotificationManager$Visibility interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class PlayerView implements com.google.android.exoplayer2.source.ads.AdsLoader.AdViewProvider {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerView>;
						public static SHOW_BUFFERING_NEVER: number;
						public static SHOW_BUFFERING_WHEN_PLAYING: number;
						public static SHOW_BUFFERING_ALWAYS: number;
						public isControllerVisible(): boolean;
						public getPlayer(): com.google.android.exoplayer2.Player;
						public constructor(param0: globalAndroid.content.Context);
						public static switchTargetView(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.ui.PlayerView, param2: com.google.android.exoplayer2.ui.PlayerView): void;
						public setControllerHideOnTouch(param0: boolean): void;
						public getControllerHideOnTouch(): boolean;
						public performClick(): boolean;
						public onPause(): void;
						public setControllerAutoShow(param0: boolean): void;
						public getDefaultArtwork(): globalAndroid.graphics.drawable.Drawable;
						public getOverlayFrameLayout(): globalAndroid.widget.FrameLayout;
						public setResizeMode(param0: number): void;
						public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
						public setShowBuffering(param0: number): void;
						public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public getControllerShowTimeoutMs(): number;
						public onResume(): void;
						public setShowPreviousButton(param0: boolean): void;
						public setExtraAdGroupMarkers(param0: androidNative.Array<number>, param1: androidNative.Array<boolean>): void;
						public setShowRewindButton(param0: boolean): void;
						/** @deprecated */
						public setFastForwardIncrementMs(param0: number): void;
						public getSubtitleView(): com.google.android.exoplayer2.ui.SubtitleView;
						public setCustomErrorMessage(param0: string): void;
						public setShowMultiWindowTimeBar(param0: boolean): void;
						public setControllerVisibilityListener(param0: com.google.android.exoplayer2.ui.PlayerControlView.VisibilityListener): void;
						public getAdOverlayInfos(): java.util.List<com.google.android.exoplayer2.source.ads.AdsLoader.OverlayInfo>;
						/** @deprecated */
						public getAdOverlayViews(): androidNative.Array<globalAndroid.view.View>;
						/** @deprecated */
						public setRewindIncrementMs(param0: number): void;
						public setRepeatToggleModes(param0: number): void;
						public setVisibility(param0: number): void;
						public setUseSensorRotation(param0: boolean): void;
						public setControllerShowTimeoutMs(param0: number): void;
						public setUseArtwork(param0: boolean): void;
						public setShowFastForwardButton(param0: boolean): void;
						public getVideoSurfaceView(): globalAndroid.view.View;
						public getUseController(): boolean;
						public setControlDispatcher(param0: com.google.android.exoplayer2.ControlDispatcher): void;
						public dispatchMediaKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setAspectRatioListener(param0: com.google.android.exoplayer2.ui.AspectRatioFrameLayout.AspectRatioListener): void;
						/** @deprecated */
						public setPlaybackPreparer(param0: com.google.android.exoplayer2.PlaybackPreparer): void;
						public setShutterBackgroundColor(param0: number): void;
						public setUseController(param0: boolean): void;
						public setShowNextButton(param0: boolean): void;
						public setErrorMessageProvider(param0: com.google.android.exoplayer2.util.ErrorMessageProvider<any>): void;
						public getResizeMode(): number;
						public setKeepContentOnPlayerReset(param0: boolean): void;
						public getUseArtwork(): boolean;
						public setPlayer(param0: com.google.android.exoplayer2.Player): void;
						public setShowShuffleButton(param0: boolean): void;
						public setControllerHideDuringAds(param0: boolean): void;
						public getAdViewGroup(): globalAndroid.view.ViewGroup;
						public hideController(): void;
						public getControllerAutoShow(): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public setDefaultArtwork(param0: globalAndroid.graphics.drawable.Drawable): void;
						public onTrackballEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public onContentAspectRatioChanged(param0: number, param1: com.google.android.exoplayer2.ui.AspectRatioFrameLayout, param2: globalAndroid.view.View): void;
						public showController(): void;
					}
					export module PlayerView {
						export class ComponentListener implements com.google.android.exoplayer2.Player.EventListener, com.google.android.exoplayer2.text.TextOutput, com.google.android.exoplayer2.video.VideoListener, com.google.android.exoplayer2.ui.spherical.SingleTapListener, com.google.android.exoplayer2.ui.PlayerControlView.VisibilityListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerView.ComponentListener>;
							public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.PlaybackParameters): void;
							public onCues(param0: java.util.List<com.google.android.exoplayer2.text.Cue>): void;
							public onIsLoadingChanged(param0: boolean): void;
							public onPlaybackStateChanged(param0: number): void;
							public constructor(param0: com.google.android.exoplayer2.ui.PlayerView);
							public onVideoSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
							public onRenderedFirstFrame(): void;
							public onSurfaceSizeChanged(param0: number, param1: number): void;
							public onTracksChanged(param0: com.google.android.exoplayer2.source.TrackGroupArray, param1: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
							/** @deprecated */
							public onLoadingChanged(param0: boolean): void;
							public onExperimentalOffloadSchedulingEnabledChanged(param0: boolean): void;
							public onPlaybackSuppressionReasonChanged(param0: number): void;
							public onIsPlayingChanged(param0: boolean): void;
							public onPlayerError(param0: com.google.android.exoplayer2.ExoPlaybackException): void;
							public onPositionDiscontinuity(param0: number): void;
							public onMediaItemTransition(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
							public onVisibilityChange(param0: number): void;
							/** @deprecated */
							public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: any, param2: number): void;
							/** @deprecated */
							public onSeekProcessed(): void;
							public onStaticMetadataChanged(param0: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
							public onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.Player.Events): void;
							/** @deprecated */
							public onPlayerStateChanged(param0: boolean, param1: number): void;
							public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: number): void;
							public onSingleTapUp(param0: globalAndroid.view.MotionEvent): boolean;
							public onRepeatModeChanged(param0: number): void;
							public onShuffleModeEnabledChanged(param0: boolean): void;
							public onExperimentalSleepingForOffloadChanged(param0: boolean): void;
							public onPlayWhenReadyChanged(param0: boolean, param1: number): void;
							public onLayoutChange(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number): void;
						}
						export class ShowBuffering {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.PlayerView.ShowBuffering>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.PlayerView$ShowBuffering interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class SpannedToHtmlConverter {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.SpannedToHtmlConverter>;
						public static convert(param0: string, param1: number): com.google.android.exoplayer2.ui.SpannedToHtmlConverter.HtmlAndCss;
					}
					export module SpannedToHtmlConverter {
						export class HtmlAndCss {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.SpannedToHtmlConverter.HtmlAndCss>;
							public html: string;
							public cssRuleSets: java.util.Map<string,string>;
						}
						export class SpanInfo {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.SpannedToHtmlConverter.SpanInfo>;
							public start: number;
							public end: number;
							public openingTag: string;
							public closingTag: string;
						}
						export class Transition {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.SpannedToHtmlConverter.Transition>;
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class StyledPlayerControlView {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerControlView>;
						public static DEFAULT_SHOW_TIMEOUT_MS: number;
						public static DEFAULT_REPEAT_TOGGLE_MODES: number;
						public static DEFAULT_TIME_BAR_MIN_UPDATE_INTERVAL_MS: number;
						public static MAX_WINDOWS_FOR_MULTI_WINDOW_TIME_BAR: number;
						public setAnimationEnabled(param0: boolean): void;
						public getPlayer(): com.google.android.exoplayer2.Player;
						public constructor(param0: globalAndroid.content.Context);
						public setRepeatToggleModes(param0: number): void;
						public getShowShuffleButton(): boolean;
						public onAttachedToWindow(): void;
						public addVisibilityListener(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView.VisibilityListener): void;
						public setShowTimeoutMs(param0: number): void;
						public setShowFastForwardButton(param0: boolean): void;
						public setTimeBarMinUpdateInterval(param0: number): void;
						public setShowSubtitleButton(param0: boolean): void;
						public setControlDispatcher(param0: com.google.android.exoplayer2.ControlDispatcher): void;
						public isVisible(): boolean;
						public dispatchMediaKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setOnFullScreenModeChangedListener(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView.OnFullScreenModeChangedListener): void;
						public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
						public getRepeatToggleModes(): number;
						public getShowVrButton(): boolean;
						public setProgressUpdateListener(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView.ProgressUpdateListener): void;
						public isAnimationEnabled(): boolean;
						/** @deprecated */
						public setPlaybackPreparer(param0: com.google.android.exoplayer2.PlaybackPreparer): void;
						public setVrButtonListener(param0: globalAndroid.view.View.OnClickListener): void;
						public setShowVrButton(param0: boolean): void;
						public setExtraAdGroupMarkers(param0: androidNative.Array<number>, param1: androidNative.Array<boolean>): void;
						public setShowPreviousButton(param0: boolean): void;
						public setShowNextButton(param0: boolean): void;
						public onDetachedFromWindow(): void;
						public setShowRewindButton(param0: boolean): void;
						public hide(): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number, param3: globalAndroid.util.AttributeSet);
						public isFullyVisible(): boolean;
						public getShowSubtitleButton(): boolean;
						public setShowMultiWindowTimeBar(param0: boolean): void;
						public setPlayer(param0: com.google.android.exoplayer2.Player): void;
						public setShowShuffleButton(param0: boolean): void;
						public show(): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public removeVisibilityListener(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView.VisibilityListener): void;
						public hideImmediately(): void;
						public getShowTimeoutMs(): number;
					}
					export module StyledPlayerControlView {
						export class AudioTrackSelectionAdapter extends com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackSelectionAdapter {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerControlView.AudioTrackSelectionAdapter>;
							public onBindViewHolderAtZeroPosition(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackSelectionViewHolder): void;
							public onTrackSelection(param0: string): void;
							public init(param0: java.util.List<java.lang.Integer>, param1: java.util.List<com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackInfo>, param2: com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo): void;
						}
						export class ComponentListener implements com.google.android.exoplayer2.Player.EventListener, com.google.android.exoplayer2.ui.TimeBar.OnScrubListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerControlView.ComponentListener>;
							public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.PlaybackParameters): void;
							public onIsLoadingChanged(param0: boolean): void;
							public onPlaybackStateChanged(param0: number): void;
							public onTracksChanged(param0: com.google.android.exoplayer2.source.TrackGroupArray, param1: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
							public onDismiss(): void;
							public onScrubStop(param0: com.google.android.exoplayer2.ui.TimeBar, param1: number, param2: boolean): void;
							public onClick(param0: globalAndroid.view.View): void;
							/** @deprecated */
							public onLoadingChanged(param0: boolean): void;
							public onExperimentalOffloadSchedulingEnabledChanged(param0: boolean): void;
							public onScrubMove(param0: com.google.android.exoplayer2.ui.TimeBar, param1: number): void;
							public onPlaybackSuppressionReasonChanged(param0: number): void;
							public onIsPlayingChanged(param0: boolean): void;
							public onPlayerError(param0: com.google.android.exoplayer2.ExoPlaybackException): void;
							public onPositionDiscontinuity(param0: number): void;
							public onMediaItemTransition(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
							/** @deprecated */
							public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: any, param2: number): void;
							/** @deprecated */
							public onSeekProcessed(): void;
							public onStaticMetadataChanged(param0: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
							public onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.Player.Events): void;
							/** @deprecated */
							public onPlayerStateChanged(param0: boolean, param1: number): void;
							public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: number): void;
							public onRepeatModeChanged(param0: number): void;
							public onShuffleModeEnabledChanged(param0: boolean): void;
							public onExperimentalSleepingForOffloadChanged(param0: boolean): void;
							public onPlayWhenReadyChanged(param0: boolean, param1: number): void;
							public onScrubStart(param0: com.google.android.exoplayer2.ui.TimeBar, param1: number): void;
						}
						export class OnFullScreenModeChangedListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerControlView.OnFullScreenModeChangedListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.StyledPlayerControlView$OnFullScreenModeChangedListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onFullScreenModeChanged(param0: boolean): void;
							});
							public constructor();
							public onFullScreenModeChanged(param0: boolean): void;
						}
						export class ProgressUpdateListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerControlView.ProgressUpdateListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.StyledPlayerControlView$ProgressUpdateListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onProgressUpdate(param0: number, param1: number): void;
							});
							public constructor();
							public onProgressUpdate(param0: number, param1: number): void;
						}
						export class SettingViewHolder {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerControlView.SettingViewHolder>;
							public constructor(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView, param1: globalAndroid.view.View);
						}
						export class SettingsAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<com.google.android.exoplayer2.ui.StyledPlayerControlView.SettingViewHolder> {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerControlView.SettingsAdapter>;
							public getItemId(param0: number): number;
							public constructor(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView, param1: androidNative.Array<string>, param2: androidNative.Array<globalAndroid.graphics.drawable.Drawable>);
							public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): com.google.android.exoplayer2.ui.StyledPlayerControlView.SettingViewHolder;
							public setSubTextAtPosition(param0: number, param1: string): void;
							public getItemCount(): number;
							public onBindViewHolder(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView.SettingViewHolder, param1: number): void;
						}
						export class SubSettingViewHolder {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerControlView.SubSettingViewHolder>;
							public constructor(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView, param1: globalAndroid.view.View);
						}
						export class SubSettingsAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<com.google.android.exoplayer2.ui.StyledPlayerControlView.SubSettingViewHolder> {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerControlView.SubSettingsAdapter>;
							public constructor(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView);
							public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): com.google.android.exoplayer2.ui.StyledPlayerControlView.SubSettingViewHolder;
							public init(param0: androidNative.Array<string>, param1: number): void;
							public getItemCount(): number;
							public onBindViewHolder(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView.SubSettingViewHolder, param1: number): void;
						}
						export class TextTrackSelectionAdapter extends com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackSelectionAdapter {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerControlView.TextTrackSelectionAdapter>;
							public onBindViewHolderAtZeroPosition(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackSelectionViewHolder): void;
							public onBindViewHolder(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackSelectionViewHolder, param1: number): void;
							public onTrackSelection(param0: string): void;
							public init(param0: java.util.List<java.lang.Integer>, param1: java.util.List<com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackInfo>, param2: com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo): void;
						}
						export class TrackInfo {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackInfo>;
							public rendererIndex: number;
							public groupIndex: number;
							public trackIndex: number;
							public trackName: string;
							public selected: boolean;
							public constructor(param0: number, param1: number, param2: number, param3: string, param4: boolean);
						}
						export abstract class TrackSelectionAdapter extends androidx.recyclerview.widget.RecyclerView.Adapter<com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackSelectionViewHolder> {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackSelectionAdapter>;
							public rendererIndices: java.util.List<java.lang.Integer>;
							public tracks: java.util.List<com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackInfo>;
							public mappedTrackInfo: com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo;
							public onCreateViewHolder(param0: globalAndroid.view.ViewGroup, param1: number): com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackSelectionViewHolder;
							public onBindViewHolderAtZeroPosition(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackSelectionViewHolder): void;
							public constructor(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView);
							public onBindViewHolder(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackSelectionViewHolder, param1: number): void;
							public getItemCount(): number;
							public clear(): void;
							public onTrackSelection(param0: string): void;
							public init(param0: java.util.List<java.lang.Integer>, param1: java.util.List<com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackInfo>, param2: com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo): void;
						}
						export class TrackSelectionViewHolder {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerControlView.TrackSelectionViewHolder>;
							public textView: globalAndroid.widget.TextView;
							public checkView: globalAndroid.view.View;
							public constructor(param0: globalAndroid.view.View);
						}
						export class VisibilityListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerControlView.VisibilityListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.StyledPlayerControlView$VisibilityListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onVisibilityChange(param0: number): void;
							});
							public constructor();
							public onVisibilityChange(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class StyledPlayerControlViewLayoutManager {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerControlViewLayoutManager>;
						public setAnimationEnabled(param0: boolean): void;
						public isAnimationEnabled(): boolean;
						public getShowButton(param0: globalAndroid.view.View): boolean;
						public onAttachedToWindow(): void;
						public onDetachedFromWindow(): void;
						public hide(): void;
						public isFullyVisible(): boolean;
						public resetHideCallbacks(): void;
						public constructor(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView);
						public show(): void;
						public removeHideCallbacks(): void;
						public setShowButton(param0: globalAndroid.view.View, param1: boolean): void;
						public hideImmediately(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class StyledPlayerView implements com.google.android.exoplayer2.source.ads.AdsLoader.AdViewProvider {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerView>;
						public static SHOW_BUFFERING_NEVER: number;
						public static SHOW_BUFFERING_WHEN_PLAYING: number;
						public static SHOW_BUFFERING_ALWAYS: number;
						public isControllerFullyVisible(): boolean;
						public getPlayer(): com.google.android.exoplayer2.Player;
						public constructor(param0: globalAndroid.content.Context);
						public setControllerHideOnTouch(param0: boolean): void;
						public getControllerHideOnTouch(): boolean;
						public performClick(): boolean;
						public onPause(): void;
						public setShowSubtitleButton(param0: boolean): void;
						public setControllerAutoShow(param0: boolean): void;
						public getDefaultArtwork(): globalAndroid.graphics.drawable.Drawable;
						public getOverlayFrameLayout(): globalAndroid.widget.FrameLayout;
						public setResizeMode(param0: number): void;
						public setControllerVisibilityListener(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView.VisibilityListener): void;
						public dispatchKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
						public setShowBuffering(param0: number): void;
						public onTouchEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public getControllerShowTimeoutMs(): number;
						public onResume(): void;
						public setShowPreviousButton(param0: boolean): void;
						public setExtraAdGroupMarkers(param0: androidNative.Array<number>, param1: androidNative.Array<boolean>): void;
						public setShowRewindButton(param0: boolean): void;
						public getSubtitleView(): com.google.android.exoplayer2.ui.SubtitleView;
						public setCustomErrorMessage(param0: string): void;
						public setShowMultiWindowTimeBar(param0: boolean): void;
						public getAdOverlayInfos(): java.util.List<com.google.android.exoplayer2.source.ads.AdsLoader.OverlayInfo>;
						/** @deprecated */
						public getAdOverlayViews(): androidNative.Array<globalAndroid.view.View>;
						public static switchTargetView(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.ui.StyledPlayerView, param2: com.google.android.exoplayer2.ui.StyledPlayerView): void;
						public setRepeatToggleModes(param0: number): void;
						public setVisibility(param0: number): void;
						public setUseSensorRotation(param0: boolean): void;
						public setControllerShowTimeoutMs(param0: number): void;
						public setUseArtwork(param0: boolean): void;
						public setShowFastForwardButton(param0: boolean): void;
						public getVideoSurfaceView(): globalAndroid.view.View;
						public getUseController(): boolean;
						public setControlDispatcher(param0: com.google.android.exoplayer2.ControlDispatcher): void;
						public dispatchMediaKeyEvent(param0: globalAndroid.view.KeyEvent): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setAspectRatioListener(param0: com.google.android.exoplayer2.ui.AspectRatioFrameLayout.AspectRatioListener): void;
						/** @deprecated */
						public setPlaybackPreparer(param0: com.google.android.exoplayer2.PlaybackPreparer): void;
						public setShowVrButton(param0: boolean): void;
						public setShutterBackgroundColor(param0: number): void;
						public setUseController(param0: boolean): void;
						public setShowNextButton(param0: boolean): void;
						public setErrorMessageProvider(param0: com.google.android.exoplayer2.util.ErrorMessageProvider<any>): void;
						public getResizeMode(): number;
						public setKeepContentOnPlayerReset(param0: boolean): void;
						public getUseArtwork(): boolean;
						public setPlayer(param0: com.google.android.exoplayer2.Player): void;
						public setShowShuffleButton(param0: boolean): void;
						public setControllerHideDuringAds(param0: boolean): void;
						public getAdViewGroup(): globalAndroid.view.ViewGroup;
						public hideController(): void;
						public getControllerAutoShow(): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public setDefaultArtwork(param0: globalAndroid.graphics.drawable.Drawable): void;
						public setControllerOnFullScreenModeChangedListener(param0: com.google.android.exoplayer2.ui.StyledPlayerControlView.OnFullScreenModeChangedListener): void;
						public onTrackballEvent(param0: globalAndroid.view.MotionEvent): boolean;
						public onContentAspectRatioChanged(param0: number, param1: com.google.android.exoplayer2.ui.AspectRatioFrameLayout, param2: globalAndroid.view.View): void;
						public showController(): void;
					}
					export module StyledPlayerView {
						export class ComponentListener implements com.google.android.exoplayer2.Player.EventListener, com.google.android.exoplayer2.text.TextOutput, com.google.android.exoplayer2.video.VideoListener, com.google.android.exoplayer2.ui.spherical.SingleTapListener, com.google.android.exoplayer2.ui.StyledPlayerControlView.VisibilityListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerView.ComponentListener>;
							public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.PlaybackParameters): void;
							public onCues(param0: java.util.List<com.google.android.exoplayer2.text.Cue>): void;
							public onIsLoadingChanged(param0: boolean): void;
							public onPlaybackStateChanged(param0: number): void;
							public onVideoSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
							public onRenderedFirstFrame(): void;
							public onSurfaceSizeChanged(param0: number, param1: number): void;
							public onTracksChanged(param0: com.google.android.exoplayer2.source.TrackGroupArray, param1: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
							/** @deprecated */
							public onLoadingChanged(param0: boolean): void;
							public onExperimentalOffloadSchedulingEnabledChanged(param0: boolean): void;
							public onPlaybackSuppressionReasonChanged(param0: number): void;
							public onIsPlayingChanged(param0: boolean): void;
							public onPlayerError(param0: com.google.android.exoplayer2.ExoPlaybackException): void;
							public onPositionDiscontinuity(param0: number): void;
							public onMediaItemTransition(param0: com.google.android.exoplayer2.MediaItem, param1: number): void;
							public onVisibilityChange(param0: number): void;
							/** @deprecated */
							public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: any, param2: number): void;
							/** @deprecated */
							public onSeekProcessed(): void;
							public onStaticMetadataChanged(param0: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
							public constructor(param0: com.google.android.exoplayer2.ui.StyledPlayerView);
							public onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.Player.Events): void;
							/** @deprecated */
							public onPlayerStateChanged(param0: boolean, param1: number): void;
							public onTimelineChanged(param0: com.google.android.exoplayer2.Timeline, param1: number): void;
							public onSingleTapUp(param0: globalAndroid.view.MotionEvent): boolean;
							public onRepeatModeChanged(param0: number): void;
							public onShuffleModeEnabledChanged(param0: boolean): void;
							public onExperimentalSleepingForOffloadChanged(param0: boolean): void;
							public onPlayWhenReadyChanged(param0: boolean, param1: number): void;
							public onLayoutChange(param0: globalAndroid.view.View, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: number, param8: number): void;
						}
						export class ShowBuffering {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.StyledPlayerView.ShowBuffering>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.StyledPlayerView$ShowBuffering interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class SubtitlePainter {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.SubtitlePainter>;
						public draw(param0: com.google.android.exoplayer2.text.Cue, param1: com.google.android.exoplayer2.text.CaptionStyleCompat, param2: number, param3: number, param4: number, param5: globalAndroid.graphics.Canvas, param6: number, param7: number, param8: number, param9: number): void;
						public constructor(param0: globalAndroid.content.Context);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class SubtitleView implements com.google.android.exoplayer2.text.TextOutput {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.SubtitleView>;
						public static DEFAULT_TEXT_SIZE_FRACTION: number;
						public static DEFAULT_BOTTOM_PADDING_FRACTION: number;
						public static VIEW_TYPE_CANVAS: number;
						public static VIEW_TYPE_WEB: number;
						public setApplyEmbeddedFontSizes(param0: boolean): void;
						public setFixedTextSize(param0: number, param1: number): void;
						public setStyle(param0: com.google.android.exoplayer2.text.CaptionStyleCompat): void;
						public constructor(param0: globalAndroid.content.Context);
						public setUserDefaultTextSize(): void;
						public setBottomPaddingFraction(param0: number): void;
						public setFractionalTextSize(param0: number, param1: boolean): void;
						public onCues(param0: java.util.List<com.google.android.exoplayer2.text.Cue>): void;
						public setCues(param0: java.util.List<com.google.android.exoplayer2.text.Cue>): void;
						public setApplyEmbeddedStyles(param0: boolean): void;
						public setViewType(param0: number): void;
						public setFractionalTextSize(param0: number): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setUserDefaultStyle(): void;
					}
					export module SubtitleView {
						export class Output {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.SubtitleView.Output>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.SubtitleView$Output interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								update(param0: java.util.List<com.google.android.exoplayer2.text.Cue>, param1: com.google.android.exoplayer2.text.CaptionStyleCompat, param2: number, param3: number, param4: number): void;
							});
							public constructor();
							public update(param0: java.util.List<com.google.android.exoplayer2.text.Cue>, param1: com.google.android.exoplayer2.text.CaptionStyleCompat, param2: number, param3: number, param4: number): void;
						}
						export class ViewType {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.SubtitleView.ViewType>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.SubtitleView$ViewType interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class SubtitleViewUtils {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.SubtitleViewUtils>;
						public static resolveTextSize(param0: number, param1: number, param2: number, param3: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class TimeBar {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.TimeBar>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.ui.TimeBar interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addListener(param0: com.google.android.exoplayer2.ui.TimeBar.OnScrubListener): void;
							removeListener(param0: com.google.android.exoplayer2.ui.TimeBar.OnScrubListener): void;
							setEnabled(param0: boolean): void;
							setKeyTimeIncrement(param0: number): void;
							setKeyCountIncrement(param0: number): void;
							setPosition(param0: number): void;
							setBufferedPosition(param0: number): void;
							setDuration(param0: number): void;
							getPreferredUpdateDelay(): number;
							setAdGroupTimesMs(param0: androidNative.Array<number>, param1: androidNative.Array<boolean>, param2: number): void;
						});
						public constructor();
						public getPreferredUpdateDelay(): number;
						public setAdGroupTimesMs(param0: androidNative.Array<number>, param1: androidNative.Array<boolean>, param2: number): void;
						public setKeyCountIncrement(param0: number): void;
						public removeListener(param0: com.google.android.exoplayer2.ui.TimeBar.OnScrubListener): void;
						public setPosition(param0: number): void;
						public setBufferedPosition(param0: number): void;
						public setDuration(param0: number): void;
						public setEnabled(param0: boolean): void;
						public setKeyTimeIncrement(param0: number): void;
						public addListener(param0: com.google.android.exoplayer2.ui.TimeBar.OnScrubListener): void;
					}
					export module TimeBar {
						export class OnScrubListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.TimeBar.OnScrubListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.TimeBar$OnScrubListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onScrubStart(param0: com.google.android.exoplayer2.ui.TimeBar, param1: number): void;
								onScrubMove(param0: com.google.android.exoplayer2.ui.TimeBar, param1: number): void;
								onScrubStop(param0: com.google.android.exoplayer2.ui.TimeBar, param1: number, param2: boolean): void;
							});
							public constructor();
							public onScrubStop(param0: com.google.android.exoplayer2.ui.TimeBar, param1: number, param2: boolean): void;
							public onScrubMove(param0: com.google.android.exoplayer2.ui.TimeBar, param1: number): void;
							public onScrubStart(param0: com.google.android.exoplayer2.ui.TimeBar, param1: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class TrackNameProvider {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.TrackNameProvider>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.ui.TrackNameProvider interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getTrackName(param0: com.google.android.exoplayer2.Format): string;
						});
						public constructor();
						public getTrackName(param0: com.google.android.exoplayer2.Format): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class TrackSelectionDialogBuilder {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.TrackSelectionDialogBuilder>;
						public setTrackNameProvider(param0: com.google.android.exoplayer2.ui.TrackNameProvider): com.google.android.exoplayer2.ui.TrackSelectionDialogBuilder;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo, param3: number, param4: com.google.android.exoplayer2.ui.TrackSelectionDialogBuilder.DialogCallback);
						public setTrackFormatComparator(param0: java.util.Comparator<com.google.android.exoplayer2.Format>): void;
						public setOverrides(param0: java.util.List<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride>): com.google.android.exoplayer2.ui.TrackSelectionDialogBuilder;
						public setAllowAdaptiveSelections(param0: boolean): com.google.android.exoplayer2.ui.TrackSelectionDialogBuilder;
						public setAllowMultipleOverrides(param0: boolean): com.google.android.exoplayer2.ui.TrackSelectionDialogBuilder;
						public setTheme(param0: number): com.google.android.exoplayer2.ui.TrackSelectionDialogBuilder;
						public setShowDisableOption(param0: boolean): com.google.android.exoplayer2.ui.TrackSelectionDialogBuilder;
						public setIsDisabled(param0: boolean): com.google.android.exoplayer2.ui.TrackSelectionDialogBuilder;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: com.google.android.exoplayer2.trackselection.DefaultTrackSelector, param3: number);
						public setOverride(param0: com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride): com.google.android.exoplayer2.ui.TrackSelectionDialogBuilder;
						public build(): globalAndroid.app.Dialog;
					}
					export module TrackSelectionDialogBuilder {
						export class DialogCallback {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.TrackSelectionDialogBuilder.DialogCallback>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.TrackSelectionDialogBuilder$DialogCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onTracksSelected(param0: boolean, param1: java.util.List<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride>): void;
							});
							public constructor();
							public onTracksSelected(param0: boolean, param1: java.util.List<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class TrackSelectionView {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.TrackSelectionView>;
						public setShowDisableOption(param0: boolean): void;
						public setAllowMultipleOverrides(param0: boolean): void;
						public setTrackNameProvider(param0: com.google.android.exoplayer2.ui.TrackNameProvider): void;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet, param2: number);
						public init(param0: com.google.android.exoplayer2.trackselection.MappingTrackSelector.MappedTrackInfo, param1: number, param2: boolean, param3: java.util.List<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride>, param4: java.util.Comparator<com.google.android.exoplayer2.Format>, param5: com.google.android.exoplayer2.ui.TrackSelectionView.TrackSelectionListener): void;
						public getIsDisabled(): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public setAllowAdaptiveSelections(param0: boolean): void;
						public getOverrides(): java.util.List<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride>;
					}
					export module TrackSelectionView {
						export class ComponentListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.TrackSelectionView.ComponentListener>;
							public onClick(param0: globalAndroid.view.View): void;
						}
						export class TrackInfo {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.TrackSelectionView.TrackInfo>;
							public groupIndex: number;
							public trackIndex: number;
							public format: com.google.android.exoplayer2.Format;
							public constructor(param0: number, param1: number, param2: com.google.android.exoplayer2.Format);
						}
						export class TrackSelectionListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.TrackSelectionView.TrackSelectionListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.TrackSelectionView$TrackSelectionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onTrackSelectionChanged(param0: boolean, param1: java.util.List<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride>): void;
							});
							public constructor();
							public onTrackSelectionChanged(param0: boolean, param1: java.util.List<com.google.android.exoplayer2.trackselection.DefaultTrackSelector.SelectionOverride>): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export class WebViewSubtitleOutput implements com.google.android.exoplayer2.ui.SubtitleView.Output {
						public static class: java.lang.Class<com.google.android.exoplayer2.ui.WebViewSubtitleOutput>;
						public update(param0: java.util.List<com.google.android.exoplayer2.text.Cue>, param1: com.google.android.exoplayer2.text.CaptionStyleCompat, param2: number, param3: number, param4: number): void;
						public constructor(param0: globalAndroid.content.Context);
						public destroy(): void;
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public onLayout(param0: boolean, param1: number, param2: number, param3: number, param4: number): void;
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export module spherical {
						export class OrientationListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.spherical.OrientationListener>;
							public constructor(param0: globalAndroid.view.Display, param1: androidNative.Array<com.google.android.exoplayer2.ui.spherical.OrientationListener.Listener>);
							public onAccuracyChanged(param0: globalAndroid.hardware.Sensor, param1: number): void;
							public onSensorChanged(param0: globalAndroid.hardware.SensorEvent): void;
						}
						export module OrientationListener {
							export class Listener {
								public static class: java.lang.Class<com.google.android.exoplayer2.ui.spherical.OrientationListener.Listener>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.ui.spherical.OrientationListener$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onOrientationChange(param0: androidNative.Array<number>, param1: number): void;
								});
								public constructor();
								public onOrientationChange(param0: androidNative.Array<number>, param1: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export module spherical {
						export class ProjectionRenderer {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.spherical.ProjectionRenderer>;
							public static isSupported(param0: com.google.android.exoplayer2.video.spherical.Projection): boolean;
							public setProjection(param0: com.google.android.exoplayer2.video.spherical.Projection): void;
						}
						export module ProjectionRenderer {
							export class MeshData {
								public static class: java.lang.Class<com.google.android.exoplayer2.ui.spherical.ProjectionRenderer.MeshData>;
								public constructor(param0: com.google.android.exoplayer2.video.spherical.Projection.SubMesh);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export module spherical {
						export class SceneRenderer implements com.google.android.exoplayer2.video.VideoFrameMetadataListener, com.google.android.exoplayer2.video.spherical.CameraMotionListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.spherical.SceneRenderer>;
							public constructor();
							public init(): globalAndroid.graphics.SurfaceTexture;
							public drawFrame(param0: androidNative.Array<number>, param1: boolean): void;
							public onCameraMotion(param0: number, param1: androidNative.Array<number>): void;
							public shutdown(): void;
							public onVideoFrameAboutToBeRendered(param0: number, param1: number, param2: com.google.android.exoplayer2.Format, param3: globalAndroid.media.MediaFormat): void;
							public setDefaultStereoMode(param0: number): void;
							public onCameraMotionReset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export module spherical {
						export class SingleTapListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.spherical.SingleTapListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.ui.spherical.SingleTapListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onSingleTapUp(param0: globalAndroid.view.MotionEvent): boolean;
							});
							public constructor();
							public onSingleTapUp(param0: globalAndroid.view.MotionEvent): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export module spherical {
						export class SphericalGLSurfaceView {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.spherical.SphericalGLSurfaceView>;
							public setUseSensorRotation(param0: boolean): void;
							public setSingleTapListener(param0: com.google.android.exoplayer2.ui.spherical.SingleTapListener): void;
							public onDetachedFromWindow(): void;
							public onPause(): void;
							public setVideoComponent(param0: com.google.android.exoplayer2.Player.VideoComponent): void;
							public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
							public setDefaultStereoMode(param0: number): void;
							public constructor(param0: globalAndroid.content.Context);
							public onResume(): void;
						}
						export module SphericalGLSurfaceView {
							export class Renderer implements com.google.android.exoplayer2.ui.spherical.TouchTracker.Listener, com.google.android.exoplayer2.ui.spherical.OrientationListener.Listener {
								public static class: java.lang.Class<com.google.android.exoplayer2.ui.spherical.SphericalGLSurfaceView.Renderer>;
								public constructor(param0: com.google.android.exoplayer2.ui.spherical.SphericalGLSurfaceView, param1: com.google.android.exoplayer2.ui.spherical.SceneRenderer);
								public onSurfaceChanged(param0: javax.microedition.khronos.opengles.GL10, param1: number, param2: number): void;
								public onScrollChange(param0: globalAndroid.graphics.PointF): void;
								public onDrawFrame(param0: javax.microedition.khronos.opengles.GL10): void;
								public onSurfaceCreated(param0: javax.microedition.khronos.opengles.GL10, param1: javax.microedition.khronos.egl.EGLConfig): void;
								public onOrientationChange(param0: androidNative.Array<number>, param1: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module ui {
					export module spherical {
						export class TouchTracker implements com.google.android.exoplayer2.ui.spherical.OrientationListener.Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.ui.spherical.TouchTracker>;
							public onDown(param0: globalAndroid.view.MotionEvent): boolean;
							public setSingleTapListener(param0: com.google.android.exoplayer2.ui.spherical.SingleTapListener): void;
							public onOrientationChange(param0: androidNative.Array<number>, param1: number): void;
							public onSingleTapUp(param0: globalAndroid.view.MotionEvent): boolean;
							public onTouch(param0: globalAndroid.view.View, param1: globalAndroid.view.MotionEvent): boolean;
							public onScroll(param0: globalAndroid.view.MotionEvent, param1: globalAndroid.view.MotionEvent, param2: number, param3: number): boolean;
							public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.ui.spherical.TouchTracker.Listener, param2: number);
						}
						export module TouchTracker {
							export class Listener {
								public static class: java.lang.Class<com.google.android.exoplayer2.ui.spherical.TouchTracker.Listener>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.ui.spherical.TouchTracker$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onScrollChange(param0: globalAndroid.graphics.PointF): void;
								});
								public constructor();
								public onScrollChange(param0: globalAndroid.graphics.PointF): void;
							}
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class Allocation {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Allocation>;
						public data: androidNative.Array<number>;
						public offset: number;
						public constructor(param0: androidNative.Array<number>, param1: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class Allocator {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Allocator>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.upstream.Allocator interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							allocate(): com.google.android.exoplayer2.upstream.Allocation;
							release(param0: com.google.android.exoplayer2.upstream.Allocation): void;
							release(param0: androidNative.Array<com.google.android.exoplayer2.upstream.Allocation>): void;
							trim(): void;
							getTotalBytesAllocated(): number;
							getIndividualAllocationLength(): number;
						});
						public constructor();
						public release(param0: androidNative.Array<com.google.android.exoplayer2.upstream.Allocation>): void;
						public getTotalBytesAllocated(): number;
						public trim(): void;
						public release(param0: com.google.android.exoplayer2.upstream.Allocation): void;
						public allocate(): com.google.android.exoplayer2.upstream.Allocation;
						public getIndividualAllocationLength(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class AssetDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.AssetDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public constructor(param0: globalAndroid.content.Context);
						public close(): void;
						public constructor(param0: boolean);
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
					export module AssetDataSource {
						export class AssetDataSourceException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.AssetDataSource.AssetDataSourceException>;
							public constructor(param0: java.io.IOException);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class BandwidthMeter {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.BandwidthMeter>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.upstream.BandwidthMeter interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getBitrateEstimate(): number;
							getTransferListener(): com.google.android.exoplayer2.upstream.TransferListener;
							addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
							removeEventListener(param0: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
						});
						public constructor();
						public getBitrateEstimate(): number;
						public removeEventListener(param0: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
						public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
						public getTransferListener(): com.google.android.exoplayer2.upstream.TransferListener;
					}
					export module BandwidthMeter {
						export class EventListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.BandwidthMeter$EventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onBandwidthSample(param0: number, param1: number, param2: number): void;
							});
							public constructor();
							public onBandwidthSample(param0: number, param1: number, param2: number): void;
						}
						export module EventListener {
							export class EventDispatcher {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener.EventDispatcher>;
								public removeListener(param0: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
								public addListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
								public constructor();
								public bandwidthSample(param0: number, param1: number, param2: number): void;
							}
							export module EventDispatcher {
								export class HandlerAndListener {
									public static class: java.lang.Class<com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener.EventDispatcher.HandlerAndListener>;
									public release(): void;
									public constructor(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener);
								}
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export abstract class BaseDataSource extends com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.BaseDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public transferEnded(): void;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public close(): void;
						public transferStarted(param0: com.google.android.exoplayer2.upstream.DataSpec): void;
						public bytesTransferred(param0: number): void;
						public constructor(param0: boolean);
						public transferInitializing(param0: com.google.android.exoplayer2.upstream.DataSpec): void;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class ByteArrayDataSink extends com.google.android.exoplayer2.upstream.DataSink {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ByteArrayDataSink>;
						public constructor();
						public close(): void;
						public getData(): androidNative.Array<number>;
						public write(param0: androidNative.Array<number>, param1: number, param2: number): void;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class ByteArrayDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ByteArrayDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public constructor(param0: androidNative.Array<number>);
						public close(): void;
						public constructor(param0: boolean);
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class ContentDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ContentDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public constructor(param0: globalAndroid.content.Context);
						public close(): void;
						public constructor(param0: boolean);
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
					export module ContentDataSource {
						export class ContentDataSourceException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ContentDataSource.ContentDataSourceException>;
							public constructor(param0: java.io.IOException);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DataReader {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataReader>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.upstream.DataReader interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							read(param0: androidNative.Array<number>, param1: number, param2: number): number;
						});
						public constructor();
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DataSchemeDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataSchemeDataSource>;
						public static SCHEME_DATA: string;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public constructor();
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public close(): void;
						public constructor(param0: boolean);
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DataSink {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataSink>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.upstream.DataSink interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							open(param0: com.google.android.exoplayer2.upstream.DataSpec): void;
							write(param0: androidNative.Array<number>, param1: number, param2: number): void;
							close(): void;
						});
						public constructor();
						public close(): void;
						public write(param0: androidNative.Array<number>, param1: number, param2: number): void;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): void;
					}
					export module DataSink {
						export class Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataSink.Factory>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.DataSink$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createDataSink(): com.google.android.exoplayer2.upstream.DataSink;
							});
							public constructor();
							public createDataSink(): com.google.android.exoplayer2.upstream.DataSink;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DataSource extends com.google.android.exoplayer2.upstream.DataReader {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataSource>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.upstream.DataSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
							open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
							getUri(): globalAndroid.net.Uri;
							getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
							close(): void;
							read(param0: androidNative.Array<number>, param1: number, param2: number): number;
						});
						public constructor();
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public close(): void;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
					export module DataSource {
						export class Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataSource.Factory>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.DataSource$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
							});
							public constructor();
							public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DataSourceException {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataSourceException>;
						public static POSITION_OUT_OF_RANGE: number;
						public reason: number;
						public constructor(param0: number);
						public static isCausedByPositionOutOfRange(param0: java.io.IOException): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DataSourceInputStream {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataSourceInputStream>;
						public read(): number;
						public read(param0: androidNative.Array<number>): number;
						public close(): void;
						public open(): void;
						public bytesRead(): number;
						public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec);
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DataSpec {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataSpec>;
						public static FLAG_ALLOW_GZIP: number;
						public static FLAG_DONT_CACHE_IF_LENGTH_UNKNOWN: number;
						public static FLAG_ALLOW_CACHE_FRAGMENTATION: number;
						public static FLAG_MIGHT_NOT_USE_FULL_NETWORK_SPEED: number;
						public static HTTP_METHOD_GET: number;
						public static HTTP_METHOD_POST: number;
						public static HTTP_METHOD_HEAD: number;
						public uri: globalAndroid.net.Uri;
						public uriPositionOffset: number;
						public httpMethod: number;
						public httpBody: androidNative.Array<number>;
						public httpRequestHeaders: java.util.Map<string,string>;
						public absoluteStreamPosition: number;
						public position: number;
						public length: number;
						public key: string;
						public flags: number;
						public customData: any;
						public getHttpMethodString(): string;
						public withRequestHeaders(param0: java.util.Map<string,string>): com.google.android.exoplayer2.upstream.DataSpec;
						/** @deprecated */
						public constructor(param0: globalAndroid.net.Uri, param1: number, param2: androidNative.Array<number>, param3: number, param4: number, param5: number, param6: string, param7: number, param8: java.util.Map<string,string>);
						public buildUpon(): com.google.android.exoplayer2.upstream.DataSpec.Builder;
						public subrange(param0: number): com.google.android.exoplayer2.upstream.DataSpec;
						public withUri(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.upstream.DataSpec;
						/** @deprecated */
						public constructor(param0: globalAndroid.net.Uri, param1: number, param2: number, param3: string);
						/** @deprecated */
						public constructor(param0: globalAndroid.net.Uri, param1: number, param2: androidNative.Array<number>, param3: number, param4: number, param5: number, param6: string, param7: number);
						public withAdditionalHeaders(param0: java.util.Map<string,string>): com.google.android.exoplayer2.upstream.DataSpec;
						/** @deprecated */
						public constructor(param0: globalAndroid.net.Uri, param1: number);
						/** @deprecated */
						public constructor(param0: globalAndroid.net.Uri, param1: number, param2: number, param3: number, param4: string, param5: number);
						public static getStringForHttpMethod(param0: number): string;
						/** @deprecated */
						public constructor(param0: globalAndroid.net.Uri, param1: number, param2: number, param3: string, param4: number);
						public toString(): string;
						public constructor(param0: globalAndroid.net.Uri);
						public subrange(param0: number, param1: number): com.google.android.exoplayer2.upstream.DataSpec;
						/** @deprecated */
						public constructor(param0: globalAndroid.net.Uri, param1: number, param2: number, param3: string, param4: number, param5: java.util.Map<string,string>);
						public constructor(param0: globalAndroid.net.Uri, param1: number, param2: number);
						/** @deprecated */
						public constructor(param0: globalAndroid.net.Uri, param1: androidNative.Array<number>, param2: number, param3: number, param4: number, param5: string, param6: number);
						public isFlagSet(param0: number): boolean;
					}
					export module DataSpec {
						export class Builder {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataSpec.Builder>;
							public constructor();
							public setKey(param0: string): com.google.android.exoplayer2.upstream.DataSpec.Builder;
							public setFlags(param0: number): com.google.android.exoplayer2.upstream.DataSpec.Builder;
							public build(): com.google.android.exoplayer2.upstream.DataSpec;
							public setLength(param0: number): com.google.android.exoplayer2.upstream.DataSpec.Builder;
							public setUriPositionOffset(param0: number): com.google.android.exoplayer2.upstream.DataSpec.Builder;
							public setCustomData(param0: any): com.google.android.exoplayer2.upstream.DataSpec.Builder;
							public setUri(param0: string): com.google.android.exoplayer2.upstream.DataSpec.Builder;
							public setHttpBody(param0: androidNative.Array<number>): com.google.android.exoplayer2.upstream.DataSpec.Builder;
							public setHttpRequestHeaders(param0: java.util.Map<string,string>): com.google.android.exoplayer2.upstream.DataSpec.Builder;
							public setUri(param0: globalAndroid.net.Uri): com.google.android.exoplayer2.upstream.DataSpec.Builder;
							public setPosition(param0: number): com.google.android.exoplayer2.upstream.DataSpec.Builder;
							public setHttpMethod(param0: number): com.google.android.exoplayer2.upstream.DataSpec.Builder;
						}
						export class Flags {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataSpec.Flags>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.DataSpec$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
						export class HttpMethod {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DataSpec.HttpMethod>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.DataSpec$HttpMethod interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DefaultAllocator extends com.google.android.exoplayer2.upstream.Allocator {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultAllocator>;
						public release(param0: androidNative.Array<com.google.android.exoplayer2.upstream.Allocation>): void;
						public getTotalBytesAllocated(): number;
						public trim(): void;
						public constructor(param0: boolean, param1: number, param2: number);
						public setTargetBufferSize(param0: number): void;
						public release(param0: com.google.android.exoplayer2.upstream.Allocation): void;
						public constructor(param0: boolean, param1: number);
						public reset(): void;
						public allocate(): com.google.android.exoplayer2.upstream.Allocation;
						public getIndividualAllocationLength(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DefaultBandwidthMeter implements com.google.android.exoplayer2.upstream.BandwidthMeter, com.google.android.exoplayer2.upstream.TransferListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultBandwidthMeter>;
						public static DEFAULT_INITIAL_BITRATE_COUNTRY_GROUPS: com.google.common.collect.ImmutableListMultimap<string,java.lang.Integer>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATES_WIFI: com.google.common.collect.ImmutableList<java.lang.Long>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATES_2G: com.google.common.collect.ImmutableList<java.lang.Long>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATES_3G: com.google.common.collect.ImmutableList<java.lang.Long>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATES_4G: com.google.common.collect.ImmutableList<java.lang.Long>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATES_5G_NSA: com.google.common.collect.ImmutableList<java.lang.Long>;
						public static DEFAULT_INITIAL_BITRATE_ESTIMATE: number;
						public static DEFAULT_SLIDING_WINDOW_MAX_WEIGHT: number;
						public onTransferInitializing(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: boolean): void;
						public onTransferEnd(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: boolean): void;
						public setNetworkTypeOverride(param0: number): void;
						public onTransferStart(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: boolean): void;
						/** @deprecated */
						public constructor();
						public getBitrateEstimate(): number;
						public removeEventListener(param0: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
						public static getSingletonInstance(param0: globalAndroid.content.Context): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter;
						public addEventListener(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.upstream.BandwidthMeter.EventListener): void;
						public getTransferListener(): com.google.android.exoplayer2.upstream.TransferListener;
						public onBytesTransferred(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: boolean, param3: number): void;
					}
					export module DefaultBandwidthMeter {
						export class Builder {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.Builder>;
							public setInitialBitrateEstimate(param0: number, param1: number): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.Builder;
							public build(): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter;
							public setInitialBitrateEstimate(param0: number): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.Builder;
							public setInitialBitrateEstimate(param0: string): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.Builder;
							public setSlidingWindowMaxWeight(param0: number): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.Builder;
							public setClock(param0: com.google.android.exoplayer2.util.Clock): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.Builder;
							public constructor(param0: globalAndroid.content.Context);
							public setResetOnNetworkTypeChange(param0: boolean): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.Builder;
						}
						export class ConnectivityActionReceiver {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.ConnectivityActionReceiver>;
							public register(param0: com.google.android.exoplayer2.upstream.DefaultBandwidthMeter): void;
							public onReceive(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): void;
							public static getInstance(param0: globalAndroid.content.Context): com.google.android.exoplayer2.upstream.DefaultBandwidthMeter.ConnectivityActionReceiver;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DefaultDataSource extends com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public constructor(param0: globalAndroid.content.Context, param1: boolean);
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.upstream.DataSource);
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: number, param3: number, param4: boolean);
						public close(): void;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: boolean);
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DefaultDataSourceFactory extends com.google.android.exoplayer2.upstream.DataSource.Factory {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultDataSourceFactory>;
						public constructor(param0: globalAndroid.content.Context, param1: string, param2: com.google.android.exoplayer2.upstream.TransferListener);
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.upstream.TransferListener, param2: com.google.android.exoplayer2.upstream.DataSource.Factory);
						public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
						public constructor(param0: globalAndroid.content.Context, param1: string);
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.upstream.DataSource.Factory);
						public createDataSource(): com.google.android.exoplayer2.upstream.DefaultDataSource;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DefaultHttpDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource implements com.google.android.exoplayer2.upstream.HttpDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultHttpDataSource>;
						public static DEFAULT_CONNECT_TIMEOUT_MILLIS: number;
						public static DEFAULT_READ_TIMEOUT_MILLIS: number;
						public clearAllRequestProperties(): void;
						public close(): void;
						/** @deprecated */
						public constructor(param0: string, param1: number, param2: number);
						public getResponseCode(): number;
						public bytesRead(): number;
						public getUri(): globalAndroid.net.Uri;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public bytesSkipped(): number;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						/** @deprecated */
						public constructor();
						/** @deprecated */
						public constructor(param0: string);
						/** @deprecated */
						public setContentTypePredicate(param0: com.google.common.base.Predicate<string>): void;
						public bytesRemaining(): number;
						public constructor(param0: boolean);
						/** @deprecated */
						public constructor(param0: string, param1: number, param2: number, param3: boolean, param4: com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties);
						public getConnection(): java.net.HttpURLConnection;
						public clearRequestProperty(param0: string): void;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public setRequestProperty(param0: string, param1: string): void;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
					export module DefaultHttpDataSource {
						export class Factory extends com.google.android.exoplayer2.upstream.HttpDataSource.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultHttpDataSource.Factory>;
							public constructor();
							public createDataSource(): com.google.android.exoplayer2.upstream.DefaultHttpDataSource;
							public setDefaultRequestProperties(param0: java.util.Map<string,string>): com.google.android.exoplayer2.upstream.DefaultHttpDataSource.Factory;
							public createDataSource(): com.google.android.exoplayer2.upstream.HttpDataSource;
							public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
							/** @deprecated */
							public getDefaultRequestProperties(): com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties;
							public setConnectTimeoutMs(param0: number): com.google.android.exoplayer2.upstream.DefaultHttpDataSource.Factory;
							public setReadTimeoutMs(param0: number): com.google.android.exoplayer2.upstream.DefaultHttpDataSource.Factory;
							public setContentTypePredicate(param0: com.google.common.base.Predicate<string>): com.google.android.exoplayer2.upstream.DefaultHttpDataSource.Factory;
							public setTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): com.google.android.exoplayer2.upstream.DefaultHttpDataSource.Factory;
							public setDefaultRequestProperties(param0: java.util.Map<string,string>): com.google.android.exoplayer2.upstream.HttpDataSource.Factory;
							public setUserAgent(param0: string): com.google.android.exoplayer2.upstream.DefaultHttpDataSource.Factory;
							public setAllowCrossProtocolRedirects(param0: boolean): com.google.android.exoplayer2.upstream.DefaultHttpDataSource.Factory;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DefaultHttpDataSourceFactory extends com.google.android.exoplayer2.upstream.HttpDataSource.BaseFactory {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultHttpDataSourceFactory>;
						public constructor();
						public createDataSourceInternal(param0: com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties): com.google.android.exoplayer2.upstream.HttpDataSource;
						public createDataSource(): com.google.android.exoplayer2.upstream.HttpDataSource;
						public constructor(param0: string, param1: number, param2: number, param3: boolean);
						public createDataSourceInternal(param0: com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties): com.google.android.exoplayer2.upstream.DefaultHttpDataSource;
						/** @deprecated */
						public getDefaultRequestProperties(): com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties;
						public constructor(param0: string, param1: com.google.android.exoplayer2.upstream.TransferListener);
						public constructor(param0: string);
						public constructor(param0: string, param1: com.google.android.exoplayer2.upstream.TransferListener, param2: number, param3: number, param4: boolean);
						public setDefaultRequestProperties(param0: java.util.Map<string,string>): com.google.android.exoplayer2.upstream.HttpDataSource.Factory;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DefaultLoadErrorHandlingPolicy extends com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DefaultLoadErrorHandlingPolicy>;
						public static DEFAULT_MIN_LOADABLE_RETRY_COUNT: number;
						public static DEFAULT_MIN_LOADABLE_RETRY_COUNT_PROGRESSIVE_LIVE: number;
						public static DEFAULT_TRACK_BLACKLIST_MS: number;
						public constructor();
						public constructor(param0: number);
						public getBlacklistDurationMsFor(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy.LoadErrorInfo): number;
						/** @deprecated */
						public getRetryDelayMsFor(param0: number, param1: number, param2: java.io.IOException, param3: number): number;
						public onLoadTaskConcluded(param0: number): void;
						/** @deprecated */
						public getBlacklistDurationMsFor(param0: number, param1: number, param2: java.io.IOException, param3: number): number;
						public getRetryDelayMsFor(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy.LoadErrorInfo): number;
						public getMinimumLoadableRetryCount(param0: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class DummyDataSource extends com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.DummyDataSource>;
						public static INSTANCE: com.google.android.exoplayer2.upstream.DummyDataSource;
						public static FACTORY: com.google.android.exoplayer2.upstream.DataSource.Factory;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public close(): void;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class FileDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.FileDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public constructor();
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public close(): void;
						public constructor(param0: boolean);
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
					export module FileDataSource {
						export class Factory extends com.google.android.exoplayer2.upstream.DataSource.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.FileDataSource.Factory>;
							public constructor();
							public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
							public createDataSource(): com.google.android.exoplayer2.upstream.FileDataSource;
							public setListener(param0: com.google.android.exoplayer2.upstream.TransferListener): com.google.android.exoplayer2.upstream.FileDataSource.Factory;
						}
						export class FileDataSourceException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.FileDataSource.FileDataSourceException>;
							public constructor(param0: string, param1: java.io.IOException);
							public constructor(param0: java.io.IOException);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class FileDataSourceFactory extends com.google.android.exoplayer2.upstream.DataSource.Factory {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.FileDataSourceFactory>;
						public constructor();
						public constructor(param0: com.google.android.exoplayer2.upstream.TransferListener);
						public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
						public createDataSource(): com.google.android.exoplayer2.upstream.FileDataSource;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class HttpDataSource extends com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.HttpDataSource>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.upstream.HttpDataSource interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
							close(): void;
							read(param0: androidNative.Array<number>, param1: number, param2: number): number;
							setRequestProperty(param0: string, param1: string): void;
							clearRequestProperty(param0: string): void;
							clearAllRequestProperties(): void;
							getResponseCode(): number;
							getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
							lambda$static$0(param0: string): boolean;
							<clinit>(): void;
							addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
							open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
							getUri(): globalAndroid.net.Uri;
							getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
							close(): void;
							read(param0: androidNative.Array<number>, param1: number, param2: number): number;
						});
						public constructor();
						public static REJECT_PAYWALL_TYPES: com.google.common.base.Predicate<string>;
						public clearAllRequestProperties(): void;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public close(): void;
						public getResponseCode(): number;
						public clearRequestProperty(param0: string): void;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
						public setRequestProperty(param0: string, param1: string): void;
					}
					export module HttpDataSource {
						export abstract class BaseFactory extends com.google.android.exoplayer2.upstream.HttpDataSource.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.HttpDataSource.BaseFactory>;
							public constructor();
							public createDataSource(): com.google.android.exoplayer2.upstream.HttpDataSource;
							public setDefaultRequestProperties(param0: java.util.Map<string,string>): com.google.android.exoplayer2.upstream.HttpDataSource.Factory;
							public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
							/** @deprecated */
							public getDefaultRequestProperties(): com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties;
							public createDataSourceInternal(param0: com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties): com.google.android.exoplayer2.upstream.HttpDataSource;
						}
						export class CleartextNotPermittedException extends com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.HttpDataSource.CleartextNotPermittedException>;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSpec, param1: number);
							public constructor(param0: java.io.IOException, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number);
							public constructor(param0: string, param1: java.io.IOException, param2: com.google.android.exoplayer2.upstream.DataSpec, param3: number);
							public constructor(param0: string, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number);
							public constructor(param0: java.io.IOException, param1: com.google.android.exoplayer2.upstream.DataSpec);
						}
						export class Factory extends com.google.android.exoplayer2.upstream.DataSource.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.HttpDataSource.Factory>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.HttpDataSource$Factory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								createDataSource(): com.google.android.exoplayer2.upstream.HttpDataSource;
								getDefaultRequestProperties(): com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties;
								setDefaultRequestProperties(param0: java.util.Map<string,string>): com.google.android.exoplayer2.upstream.HttpDataSource.Factory;
								createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
								createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
							});
							public constructor();
							public createDataSource(): com.google.android.exoplayer2.upstream.HttpDataSource;
							public setDefaultRequestProperties(param0: java.util.Map<string,string>): com.google.android.exoplayer2.upstream.HttpDataSource.Factory;
							public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
							/** @deprecated */
							public getDefaultRequestProperties(): com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties;
						}
						export class HttpDataSourceException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException>;
							public static TYPE_OPEN: number;
							public static TYPE_READ: number;
							public static TYPE_CLOSE: number;
							public type: number;
							public dataSpec: com.google.android.exoplayer2.upstream.DataSpec;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSpec, param1: number);
							public constructor(param0: java.io.IOException, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number);
							public constructor(param0: string, param1: java.io.IOException, param2: com.google.android.exoplayer2.upstream.DataSpec, param3: number);
							public constructor(param0: string, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number);
						}
						export module HttpDataSourceException {
							export class Type {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException.Type>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.upstream.HttpDataSource$HttpDataSourceException$Type interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
						export class InvalidContentTypeException extends com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.HttpDataSource.InvalidContentTypeException>;
							public contentType: string;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSpec, param1: number);
							public constructor(param0: string, param1: com.google.android.exoplayer2.upstream.DataSpec);
							public constructor(param0: java.io.IOException, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number);
							public constructor(param0: string, param1: java.io.IOException, param2: com.google.android.exoplayer2.upstream.DataSpec, param3: number);
							public constructor(param0: string, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number);
						}
						export class InvalidResponseCodeException extends com.google.android.exoplayer2.upstream.HttpDataSource.HttpDataSourceException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.HttpDataSource.InvalidResponseCodeException>;
							public responseCode: number;
							public responseMessage: string;
							public headerFields: java.util.Map<string,java.util.List<string>>;
							public responseBody: androidNative.Array<number>;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSpec, param1: number);
							public constructor(param0: number, param1: string, param2: java.util.Map<string,java.util.List<string>>, param3: com.google.android.exoplayer2.upstream.DataSpec, param4: androidNative.Array<number>);
							public constructor(param0: java.io.IOException, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number);
							/** @deprecated */
							public constructor(param0: number, param1: java.util.Map<string,java.util.List<string>>, param2: com.google.android.exoplayer2.upstream.DataSpec);
							public constructor(param0: string, param1: java.io.IOException, param2: com.google.android.exoplayer2.upstream.DataSpec, param3: number);
							public constructor(param0: string, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number);
							/** @deprecated */
							public constructor(param0: number, param1: string, param2: java.util.Map<string,java.util.List<string>>, param3: com.google.android.exoplayer2.upstream.DataSpec);
						}
						export class RequestProperties {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.HttpDataSource.RequestProperties>;
							public constructor();
							public clearAndSet(param0: java.util.Map<string,string>): void;
							public set(param0: java.util.Map<string,string>): void;
							public clear(): void;
							public set(param0: string, param1: string): void;
							public getSnapshot(): java.util.Map<string,string>;
							public remove(param0: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class LoadErrorHandlingPolicy {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getBlacklistDurationMsFor(param0: number, param1: number, param2: java.io.IOException, param3: number): number;
							getBlacklistDurationMsFor(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy.LoadErrorInfo): number;
							getRetryDelayMsFor(param0: number, param1: number, param2: java.io.IOException, param3: number): number;
							getRetryDelayMsFor(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy.LoadErrorInfo): number;
							onLoadTaskConcluded(param0: number): void;
							getMinimumLoadableRetryCount(param0: number): number;
						});
						public constructor();
						public getBlacklistDurationMsFor(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy.LoadErrorInfo): number;
						/** @deprecated */
						public getRetryDelayMsFor(param0: number, param1: number, param2: java.io.IOException, param3: number): number;
						public onLoadTaskConcluded(param0: number): void;
						/** @deprecated */
						public getBlacklistDurationMsFor(param0: number, param1: number, param2: java.io.IOException, param3: number): number;
						public getRetryDelayMsFor(param0: com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy.LoadErrorInfo): number;
						public getMinimumLoadableRetryCount(param0: number): number;
					}
					export module LoadErrorHandlingPolicy {
						export class LoadErrorInfo {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.LoadErrorHandlingPolicy.LoadErrorInfo>;
							public loadEventInfo: com.google.android.exoplayer2.source.LoadEventInfo;
							public mediaLoadData: com.google.android.exoplayer2.source.MediaLoadData;
							public exception: java.io.IOException;
							public errorCount: number;
							public constructor(param0: com.google.android.exoplayer2.source.LoadEventInfo, param1: com.google.android.exoplayer2.source.MediaLoadData, param2: java.io.IOException, param3: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class Loader extends com.google.android.exoplayer2.upstream.LoaderErrorThrower {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader>;
						public static RETRY: com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public static RETRY_RESET_ERROR_COUNT: com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public static DONT_RETRY: com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public static DONT_RETRY_FATAL: com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public static createRetryAction(param0: boolean, param1: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
						public isLoading(): boolean;
						public startLoading(param0: com.google.android.exoplayer2.upstream.Loader.Loadable, param1: com.google.android.exoplayer2.upstream.Loader.Callback<any>, param2: number): number;
						public hasFatalError(): boolean;
						public release(param0: com.google.android.exoplayer2.upstream.Loader.ReleaseCallback): void;
						public maybeThrowError(param0: number): void;
						public clearFatalError(): void;
						public release(): void;
						public maybeThrowError(): void;
						public cancelLoading(): void;
						public constructor(param0: string);
					}
					export module Loader {
						export class Callback<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader.Callback<any>>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.Loader$Callback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onLoadCompleted(param0: T, param1: number, param2: number): void;
								onLoadCanceled(param0: T, param1: number, param2: number, param3: boolean): void;
								onLoadError(param0: T, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							});
							public constructor();
							public onLoadError(param0: T, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							public onLoadCompleted(param0: T, param1: number, param2: number): void;
							public onLoadCanceled(param0: T, param1: number, param2: number, param3: boolean): void;
						}
						export class LoadErrorAction {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader.LoadErrorAction>;
							public isRetry(): boolean;
						}
						export class LoadTask<T>  extends globalAndroid.os.Handler implements java.lang.Runnable  {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader.LoadTask<any>>;
							public defaultMinRetryCount: number;
							public constructor(param0: globalAndroid.os.Looper, param1: any, param2: com.google.android.exoplayer2.upstream.Loader.Callback<any>, param3: number, param4: number);
							public maybeThrowError(param0: number): void;
							public cancel(param0: boolean): void;
							public start(param0: number): void;
							public handleMessage(param0: globalAndroid.os.Message): void;
							public run(): void;
						}
						export class Loadable {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader.Loadable>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.Loader$Loadable interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								cancelLoad(): void;
								load(): void;
							});
							public constructor();
							public cancelLoad(): void;
							public load(): void;
						}
						export class ReleaseCallback {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader.ReleaseCallback>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.Loader$ReleaseCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onLoaderReleased(): void;
							});
							public constructor();
							public onLoaderReleased(): void;
						}
						export class ReleaseTask {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader.ReleaseTask>;
							public constructor(param0: com.google.android.exoplayer2.upstream.Loader.ReleaseCallback);
							public run(): void;
						}
						export class UnexpectedLoaderException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.Loader.UnexpectedLoaderException>;
							public constructor(param0: java.lang.Throwable);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class LoaderErrorThrower {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.LoaderErrorThrower>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.upstream.LoaderErrorThrower interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							maybeThrowError(): void;
							maybeThrowError(param0: number): void;
						});
						public constructor();
						public maybeThrowError(param0: number): void;
						public maybeThrowError(): void;
					}
					export module LoaderErrorThrower {
						export class Dummy extends com.google.android.exoplayer2.upstream.LoaderErrorThrower {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.LoaderErrorThrower.Dummy>;
							public constructor();
							public maybeThrowError(param0: number): void;
							public maybeThrowError(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class ParsingLoadable<T>  extends com.google.android.exoplayer2.upstream.Loader.Loadable {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ParsingLoadable<any>>;
						public loadTaskId: number;
						public dataSpec: com.google.android.exoplayer2.upstream.DataSpec;
						public type: number;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public static load(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>, param2: com.google.android.exoplayer2.upstream.DataSpec, param3: number): any;
						public cancelLoad(): void;
						public static load(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>, param2: globalAndroid.net.Uri, param3: number): any;
						public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: number, param3: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>);
						public getResult(): any;
						public load(): void;
						public bytesLoaded(): number;
						public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: globalAndroid.net.Uri, param2: number, param3: com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>);
						public getUri(): globalAndroid.net.Uri;
					}
					export module ParsingLoadable {
						export class Parser<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ParsingLoadable.Parser<any>>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.ParsingLoadable$Parser interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								parse(param0: globalAndroid.net.Uri, param1: java.io.InputStream): T;
							});
							public constructor();
							public parse(param0: globalAndroid.net.Uri, param1: java.io.InputStream): T;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class PriorityDataSource extends com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.PriorityDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public close(): void;
						public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.util.PriorityTaskManager, param2: number);
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class PriorityDataSourceFactory extends com.google.android.exoplayer2.upstream.DataSource.Factory {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.PriorityDataSourceFactory>;
						public createDataSource(): com.google.android.exoplayer2.upstream.PriorityDataSource;
						public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
						public constructor(param0: com.google.android.exoplayer2.upstream.DataSource.Factory, param1: com.google.android.exoplayer2.util.PriorityTaskManager, param2: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class RawResourceDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.RawResourceDataSource>;
						public static RAW_RESOURCE_SCHEME: string;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public constructor(param0: globalAndroid.content.Context);
						public close(): void;
						public constructor(param0: boolean);
						public static buildRawResourceUri(param0: number): globalAndroid.net.Uri;
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
					export module RawResourceDataSource {
						export class RawResourceDataSourceException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.RawResourceDataSource.RawResourceDataSourceException>;
							public constructor(param0: string);
							public constructor(param0: java.io.IOException);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class ResolvingDataSource extends com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ResolvingDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public close(): void;
						public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.ResolvingDataSource.Resolver);
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
					export module ResolvingDataSource {
						export class Factory extends com.google.android.exoplayer2.upstream.DataSource.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ResolvingDataSource.Factory>;
							public constructor(param0: com.google.android.exoplayer2.upstream.DataSource.Factory, param1: com.google.android.exoplayer2.upstream.ResolvingDataSource.Resolver);
							public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
							public createDataSource(): com.google.android.exoplayer2.upstream.ResolvingDataSource;
						}
						export class Resolver {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.ResolvingDataSource.Resolver>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.ResolvingDataSource$Resolver interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								resolveDataSpec(param0: com.google.android.exoplayer2.upstream.DataSpec): com.google.android.exoplayer2.upstream.DataSpec;
								resolveReportedUri(param0: globalAndroid.net.Uri): globalAndroid.net.Uri;
							});
							public constructor();
							public resolveReportedUri(param0: globalAndroid.net.Uri): globalAndroid.net.Uri;
							public resolveDataSpec(param0: com.google.android.exoplayer2.upstream.DataSpec): com.google.android.exoplayer2.upstream.DataSpec;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class StatsDataSource extends com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.StatsDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public getLastOpenedUri(): globalAndroid.net.Uri;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public constructor(param0: com.google.android.exoplayer2.upstream.DataSource);
						public resetBytesRead(): void;
						public getLastResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public close(): void;
						public getBytesRead(): number;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class TeeDataSource extends com.google.android.exoplayer2.upstream.DataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.TeeDataSource>;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public constructor(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSink);
						public close(): void;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public getUri(): globalAndroid.net.Uri;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class TransferListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.TransferListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.upstream.TransferListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onTransferInitializing(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: boolean): void;
							onTransferStart(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: boolean): void;
							onBytesTransferred(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: boolean, param3: number): void;
							onTransferEnd(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: boolean): void;
						});
						public constructor();
						public onTransferInitializing(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: boolean): void;
						public onTransferEnd(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: boolean): void;
						public onTransferStart(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: boolean): void;
						public onBytesTransferred(param0: com.google.android.exoplayer2.upstream.DataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: boolean, param3: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export class UdpDataSource extends com.google.android.exoplayer2.upstream.BaseDataSource {
						public static class: java.lang.Class<com.google.android.exoplayer2.upstream.UdpDataSource>;
						public static DEFAULT_MAX_PACKET_SIZE: number;
						public static DEFAULT_SOCKET_TIMEOUT_MILLIS: number;
						public static UDP_PORT_UNSET: number;
						public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
						public constructor();
						public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
						public close(): void;
						public constructor(param0: number);
						public constructor(param0: boolean);
						public getLocalPort(): number;
						public constructor(param0: number, param1: number);
						public getUri(): globalAndroid.net.Uri;
						public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
						public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
					}
					export module UdpDataSource {
						export class UdpDataSourceException {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.UdpDataSource.UdpDataSourceException>;
							public constructor(param0: java.io.IOException);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class Cache {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.Cache>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.Cache interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								getUid(): number;
								release(): void;
								addListener(param0: string, param1: com.google.android.exoplayer2.upstream.cache.Cache.Listener): java.util.NavigableSet<com.google.android.exoplayer2.upstream.cache.CacheSpan>;
								removeListener(param0: string, param1: com.google.android.exoplayer2.upstream.cache.Cache.Listener): void;
								getCachedSpans(param0: string): java.util.NavigableSet<com.google.android.exoplayer2.upstream.cache.CacheSpan>;
								getKeys(): java.util.Set<string>;
								getCacheSpace(): number;
								startReadWrite(param0: string, param1: number, param2: number): com.google.android.exoplayer2.upstream.cache.CacheSpan;
								startReadWriteNonBlocking(param0: string, param1: number, param2: number): com.google.android.exoplayer2.upstream.cache.CacheSpan;
								startFile(param0: string, param1: number, param2: number): java.io.File;
								commitFile(param0: java.io.File, param1: number): void;
								releaseHoleSpan(param0: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
								removeResource(param0: string): void;
								removeSpan(param0: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
								isCached(param0: string, param1: number, param2: number): boolean;
								getCachedLength(param0: string, param1: number, param2: number): number;
								getCachedBytes(param0: string, param1: number, param2: number): number;
								applyContentMetadataMutations(param0: string, param1: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations): void;
								getContentMetadata(param0: string): com.google.android.exoplayer2.upstream.cache.ContentMetadata;
							});
							public constructor();
							public static UID_UNSET: number;
							public releaseHoleSpan(param0: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public addListener(param0: string, param1: com.google.android.exoplayer2.upstream.cache.Cache.Listener): java.util.NavigableSet<com.google.android.exoplayer2.upstream.cache.CacheSpan>;
							public removeListener(param0: string, param1: com.google.android.exoplayer2.upstream.cache.Cache.Listener): void;
							public startReadWrite(param0: string, param1: number, param2: number): com.google.android.exoplayer2.upstream.cache.CacheSpan;
							public removeResource(param0: string): void;
							public release(): void;
							public getCacheSpace(): number;
							public removeSpan(param0: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public getCachedSpans(param0: string): java.util.NavigableSet<com.google.android.exoplayer2.upstream.cache.CacheSpan>;
							public getContentMetadata(param0: string): com.google.android.exoplayer2.upstream.cache.ContentMetadata;
							public startReadWriteNonBlocking(param0: string, param1: number, param2: number): com.google.android.exoplayer2.upstream.cache.CacheSpan;
							public getUid(): number;
							public startFile(param0: string, param1: number, param2: number): java.io.File;
							public commitFile(param0: java.io.File, param1: number): void;
							public getCachedBytes(param0: string, param1: number, param2: number): number;
							public isCached(param0: string, param1: number, param2: number): boolean;
							public applyContentMetadataMutations(param0: string, param1: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations): void;
							public getKeys(): java.util.Set<string>;
							public getCachedLength(param0: string, param1: number, param2: number): number;
						}
						export module Cache {
							export class CacheException {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.Cache.CacheException>;
								public constructor(param0: java.lang.Throwable);
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor(param0: string);
							}
							export class Listener {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.Cache.Listener>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.Cache$Listener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onSpanAdded(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
									onSpanRemoved(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
									onSpanTouched(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan, param2: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
								});
								public constructor();
								public onSpanRemoved(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
								public onSpanTouched(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan, param2: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
								public onSpanAdded(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheDataSink extends com.google.android.exoplayer2.upstream.DataSink {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSink>;
							public static DEFAULT_FRAGMENT_SIZE: number;
							public static DEFAULT_BUFFER_SIZE: number;
							public constructor(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: number, param2: number);
							public close(): void;
							public write(param0: androidNative.Array<number>, param1: number, param2: number): void;
							public constructor(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: number);
							public open(param0: com.google.android.exoplayer2.upstream.DataSpec): void;
						}
						export module CacheDataSink {
							export class CacheDataSinkException extends com.google.android.exoplayer2.upstream.cache.Cache.CacheException {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSink.CacheDataSinkException>;
								public constructor(param0: java.lang.Throwable);
								public constructor(param0: string, param1: java.lang.Throwable);
								public constructor(param0: string);
								public constructor(param0: java.io.IOException);
							}
							export class Factory extends com.google.android.exoplayer2.upstream.DataSink.Factory {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSink.Factory>;
								public createDataSink(): com.google.android.exoplayer2.upstream.DataSink;
								public setBufferSize(param0: number): com.google.android.exoplayer2.upstream.cache.CacheDataSink.Factory;
								public constructor();
								public setCache(param0: com.google.android.exoplayer2.upstream.cache.Cache): com.google.android.exoplayer2.upstream.cache.CacheDataSink.Factory;
								public setFragmentSize(param0: number): com.google.android.exoplayer2.upstream.cache.CacheDataSink.Factory;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheDataSinkFactory extends com.google.android.exoplayer2.upstream.DataSink.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSinkFactory>;
							public constructor(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: number, param2: number);
							public createDataSink(): com.google.android.exoplayer2.upstream.DataSink;
							public constructor(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheDataSource extends com.google.android.exoplayer2.upstream.DataSource {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSource>;
							public static FLAG_BLOCK_ON_CACHE: number;
							public static FLAG_IGNORE_CACHE_ON_ERROR: number;
							public static FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS: number;
							public static CACHE_IGNORED_REASON_ERROR: number;
							public static CACHE_IGNORED_REASON_UNSET_LENGTH: number;
							public getUri(): globalAndroid.net.Uri;
							public close(): void;
							public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
							public constructor(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.DataSource, param2: com.google.android.exoplayer2.upstream.DataSource, param3: com.google.android.exoplayer2.upstream.DataSink, param4: number, param5: com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener);
							public constructor(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.DataSource, param2: com.google.android.exoplayer2.upstream.DataSource, param3: com.google.android.exoplayer2.upstream.DataSink, param4: number, param5: com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener, param6: com.google.android.exoplayer2.upstream.cache.CacheKeyFactory);
							public constructor(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.DataSource);
							public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
							public constructor(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.DataSource, param2: number);
							public getCacheKeyFactory(): com.google.android.exoplayer2.upstream.cache.CacheKeyFactory;
							public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
							public getCache(): com.google.android.exoplayer2.upstream.cache.Cache;
							public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
						}
						export module CacheDataSource {
							export class CacheIgnoredReason {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSource.CacheIgnoredReason>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.CacheDataSource$CacheIgnoredReason interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
							export class EventListener {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.CacheDataSource$EventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onCachedBytesRead(param0: number, param1: number): void;
									onCacheIgnored(param0: number): void;
								});
								public constructor();
								public onCachedBytesRead(param0: number, param1: number): void;
								public onCacheIgnored(param0: number): void;
							}
							export class Factory extends com.google.android.exoplayer2.upstream.DataSource.Factory {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory>;
								public setUpstreamPriority(param0: number): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public setUpstreamDataSourceFactory(param0: com.google.android.exoplayer2.upstream.DataSource.Factory): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public setEventListener(param0: com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public constructor();
								public getUpstreamPriorityTaskManager(): com.google.android.exoplayer2.util.PriorityTaskManager;
								public getCache(): com.google.android.exoplayer2.upstream.cache.Cache;
								public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
								public setCacheWriteDataSinkFactory(param0: com.google.android.exoplayer2.upstream.DataSink.Factory): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public setCache(param0: com.google.android.exoplayer2.upstream.cache.Cache): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public setFlags(param0: number): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public setCacheReadDataSourceFactory(param0: com.google.android.exoplayer2.upstream.DataSource.Factory): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public createDataSourceForRemovingDownload(): com.google.android.exoplayer2.upstream.cache.CacheDataSource;
								public getCacheKeyFactory(): com.google.android.exoplayer2.upstream.cache.CacheKeyFactory;
								public createDataSource(): com.google.android.exoplayer2.upstream.cache.CacheDataSource;
								public createDataSourceForDownloading(): com.google.android.exoplayer2.upstream.cache.CacheDataSource;
								public setCacheKeyFactory(param0: com.google.android.exoplayer2.upstream.cache.CacheKeyFactory): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
								public setUpstreamPriorityTaskManager(param0: com.google.android.exoplayer2.util.PriorityTaskManager): com.google.android.exoplayer2.upstream.cache.CacheDataSource.Factory;
							}
							export class Flags {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSource.Flags>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.CacheDataSource$Flags interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheDataSourceFactory extends com.google.android.exoplayer2.upstream.DataSource.Factory {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheDataSourceFactory>;
							public constructor(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.DataSource.Factory, param2: number);
							public createDataSource(): com.google.android.exoplayer2.upstream.cache.CacheDataSource;
							public createDataSource(): com.google.android.exoplayer2.upstream.DataSource;
							public constructor(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.DataSource.Factory);
							public constructor(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.DataSource.Factory, param2: com.google.android.exoplayer2.upstream.DataSource.Factory, param3: com.google.android.exoplayer2.upstream.DataSink.Factory, param4: number, param5: com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener, param6: com.google.android.exoplayer2.upstream.cache.CacheKeyFactory);
							public constructor(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.DataSource.Factory, param2: com.google.android.exoplayer2.upstream.DataSource.Factory, param3: com.google.android.exoplayer2.upstream.DataSink.Factory, param4: number, param5: com.google.android.exoplayer2.upstream.cache.CacheDataSource.EventListener);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheEvictor extends com.google.android.exoplayer2.upstream.cache.Cache.Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheEvictor>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.CacheEvictor interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								requiresCacheSpanTouches(): boolean;
								onCacheInitialized(): void;
								onStartFile(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: string, param2: number, param3: number): void;
								onSpanAdded(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
								onSpanRemoved(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
								onSpanTouched(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan, param2: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							});
							public constructor();
							public onStartFile(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: string, param2: number, param3: number): void;
							public onSpanAdded(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public onSpanTouched(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan, param2: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public requiresCacheSpanTouches(): boolean;
							public onSpanRemoved(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public onCacheInitialized(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheFileMetadata {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheFileMetadata>;
							public length: number;
							public lastTouchTimestamp: number;
							public constructor(param0: number, param1: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheFileMetadataIndex {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheFileMetadataIndex>;
							public initialize(param0: number): void;
							public getAll(): java.util.Map<string,com.google.android.exoplayer2.upstream.cache.CacheFileMetadata>;
							public constructor(param0: com.google.android.exoplayer2.database.DatabaseProvider);
							public set(param0: string, param1: number, param2: number): void;
							public static delete(param0: com.google.android.exoplayer2.database.DatabaseProvider, param1: number): void;
							public removeAll(param0: java.util.Set<string>): void;
							public remove(param0: string): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheKeyFactory {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheKeyFactory>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.CacheKeyFactory interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								buildCacheKey(param0: com.google.android.exoplayer2.upstream.DataSpec): string;
								lambda$static$0(param0: com.google.android.exoplayer2.upstream.DataSpec): string;
								<clinit>(): void;
							});
							public constructor();
							public static DEFAULT: com.google.android.exoplayer2.upstream.cache.CacheKeyFactory;
							public buildCacheKey(param0: com.google.android.exoplayer2.upstream.DataSpec): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheSpan extends java.lang.Comparable<com.google.android.exoplayer2.upstream.cache.CacheSpan> {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheSpan>;
							public key: string;
							public position: number;
							public length: number;
							public isCached: boolean;
							public file: java.io.File;
							public lastTouchTimestamp: number;
							public isOpenEnded(): boolean;
							public isHoleSpan(): boolean;
							public constructor(param0: string, param1: number, param2: number);
							public toString(): string;
							public constructor(param0: string, param1: number, param2: number, param3: number, param4: java.io.File);
							public compareTo(param0: com.google.android.exoplayer2.upstream.cache.CacheSpan): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CacheWriter {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheWriter>;
							public static DEFAULT_BUFFER_SIZE_BYTES: number;
							public cancel(): void;
							public constructor(param0: com.google.android.exoplayer2.upstream.cache.CacheDataSource, param1: com.google.android.exoplayer2.upstream.DataSpec, param2: boolean, param3: androidNative.Array<number>, param4: com.google.android.exoplayer2.upstream.cache.CacheWriter.ProgressListener);
							public cache(): void;
						}
						export module CacheWriter {
							export class ProgressListener {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CacheWriter.ProgressListener>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.CacheWriter$ProgressListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									onProgress(param0: number, param1: number, param2: number): void;
								});
								public constructor();
								public onProgress(param0: number, param1: number, param2: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CachedContent {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedContent>;
							public id: number;
							public key: string;
							public applyMetadataMutations(param0: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations): boolean;
							public hashCode(): number;
							public isFullyUnlocked(): boolean;
							public getMetadata(): com.google.android.exoplayer2.upstream.cache.DefaultContentMetadata;
							public lockRange(param0: number, param1: number): boolean;
							public getCachedBytesLength(param0: number, param1: number): number;
							public isFullyLocked(param0: number, param1: number): boolean;
							public addSpan(param0: com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan): void;
							public setLastTouchTimestamp(param0: com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan, param1: number, param2: boolean): com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan;
							public unlockRange(param0: number): void;
							public getSpan(param0: number, param1: number): com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan;
							public removeSpan(param0: com.google.android.exoplayer2.upstream.cache.CacheSpan): boolean;
							public constructor(param0: number, param1: string, param2: com.google.android.exoplayer2.upstream.cache.DefaultContentMetadata);
							public isEmpty(): boolean;
							public equals(param0: any): boolean;
							public getSpans(): java.util.TreeSet<com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan>;
							public constructor(param0: number, param1: string);
						}
						export module CachedContent {
							export class Range {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedContent.Range>;
								public position: number;
								public length: number;
								public constructor(param0: number, param1: number);
								public intersects(param0: number, param1: number): boolean;
								public contains(param0: number, param1: number): boolean;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CachedContentIndex {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedContentIndex>;
							public assignIdForKey(param0: string): number;
							public maybeRemove(param0: string): void;
							public removeEmpty(): void;
							public store(): void;
							public getAll(): java.util.Collection<com.google.android.exoplayer2.upstream.cache.CachedContent>;
							public getContentMetadata(param0: string): com.google.android.exoplayer2.upstream.cache.ContentMetadata;
							public static isIndexFile(param0: string): boolean;
							public getOrAdd(param0: string): com.google.android.exoplayer2.upstream.cache.CachedContent;
							public initialize(param0: number): void;
							public constructor(param0: com.google.android.exoplayer2.database.DatabaseProvider);
							public getKeyForId(param0: number): string;
							public static delete(param0: com.google.android.exoplayer2.database.DatabaseProvider, param1: number): void;
							public applyContentMetadataMutations(param0: string, param1: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations): void;
							public constructor(param0: com.google.android.exoplayer2.database.DatabaseProvider, param1: java.io.File, param2: androidNative.Array<number>, param3: boolean, param4: boolean);
							public get(param0: string): com.google.android.exoplayer2.upstream.cache.CachedContent;
							public getKeys(): java.util.Set<string>;
						}
						export module CachedContentIndex {
							export class DatabaseStorage extends com.google.android.exoplayer2.upstream.cache.CachedContentIndex.Storage {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedContentIndex.DatabaseStorage>;
								public storeFully(param0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
								public storeIncremental(param0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
								public delete(): void;
								public constructor(param0: com.google.android.exoplayer2.database.DatabaseProvider);
								public static delete(param0: com.google.android.exoplayer2.database.DatabaseProvider, param1: number): void;
								public onRemove(param0: com.google.android.exoplayer2.upstream.cache.CachedContent, param1: boolean): void;
								public load(param0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>, param1: globalAndroid.util.SparseArray<string>): void;
								public exists(): boolean;
								public onUpdate(param0: com.google.android.exoplayer2.upstream.cache.CachedContent): void;
								public initialize(param0: number): void;
							}
							export class LegacyStorage extends com.google.android.exoplayer2.upstream.cache.CachedContentIndex.Storage {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedContentIndex.LegacyStorage>;
								public storeFully(param0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
								public storeIncremental(param0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
								public delete(): void;
								public onRemove(param0: com.google.android.exoplayer2.upstream.cache.CachedContent, param1: boolean): void;
								public constructor(param0: java.io.File, param1: androidNative.Array<number>, param2: boolean);
								public load(param0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>, param1: globalAndroid.util.SparseArray<string>): void;
								public exists(): boolean;
								public onUpdate(param0: com.google.android.exoplayer2.upstream.cache.CachedContent): void;
								public initialize(param0: number): void;
							}
							export class Storage {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedContentIndex.Storage>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.CachedContentIndex$Storage interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
									initialize(param0: number): void;
									exists(): boolean;
									delete(): void;
									load(param0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>, param1: globalAndroid.util.SparseArray<string>): void;
									storeFully(param0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
									storeIncremental(param0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
									onUpdate(param0: com.google.android.exoplayer2.upstream.cache.CachedContent): void;
									onRemove(param0: com.google.android.exoplayer2.upstream.cache.CachedContent, param1: boolean): void;
								});
								public constructor();
								public storeFully(param0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
								public storeIncremental(param0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>): void;
								public delete(): void;
								public onRemove(param0: com.google.android.exoplayer2.upstream.cache.CachedContent, param1: boolean): void;
								public load(param0: java.util.HashMap<string,com.google.android.exoplayer2.upstream.cache.CachedContent>, param1: globalAndroid.util.SparseArray<string>): void;
								public exists(): boolean;
								public onUpdate(param0: com.google.android.exoplayer2.upstream.cache.CachedContent): void;
								public initialize(param0: number): void;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class CachedRegionTracker extends com.google.android.exoplayer2.upstream.cache.Cache.Listener {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker>;
							public static NOT_CACHED: number;
							public static CACHED_TO_END: number;
							public onSpanAdded(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public onSpanTouched(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan, param2: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public constructor(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: string, param2: com.google.android.exoplayer2.extractor.ChunkIndex);
							public release(): void;
							public getRegionEndTimeMs(param0: number): number;
							public onSpanRemoved(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
						}
						export module CachedRegionTracker {
							export class Region extends java.lang.Comparable<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region> {
								public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region>;
								public startOffset: number;
								public endOffset: number;
								public endOffsetIndex: number;
								public constructor(param0: number, param1: number);
								public compareTo(param0: com.google.android.exoplayer2.upstream.cache.CachedRegionTracker.Region): number;
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class ContentMetadata {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.ContentMetadata>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.upstream.cache.ContentMetadata interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								get(param0: string, param1: androidNative.Array<number>): androidNative.Array<number>;
								get(param0: string, param1: string): string;
								get(param0: string, param1: number): number;
								contains(param0: string): boolean;
								getContentLength(param0: com.google.android.exoplayer2.upstream.cache.ContentMetadata): number;
								getRedirectedUri(param0: com.google.android.exoplayer2.upstream.cache.ContentMetadata): globalAndroid.net.Uri;
							});
							public constructor();
							public static KEY_CUSTOM_PREFIX: string;
							public static KEY_CONTENT_LENGTH: string;
							public static KEY_REDIRECTED_URI: string;
							public get(param0: string, param1: number): number;
							public static getRedirectedUri(param0: com.google.android.exoplayer2.upstream.cache.ContentMetadata): globalAndroid.net.Uri;
							public static getContentLength(param0: com.google.android.exoplayer2.upstream.cache.ContentMetadata): number;
							public contains(param0: string): boolean;
							public get(param0: string, param1: androidNative.Array<number>): androidNative.Array<number>;
							public get(param0: string, param1: string): string;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class ContentMetadataMutations {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations>;
							public constructor();
							public static setContentLength(param0: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations, param1: number): com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations;
							public remove(param0: string): com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations;
							public static setRedirectedUri(param0: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations, param1: globalAndroid.net.Uri): com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations;
							public getEditedValues(): java.util.Map<string,any>;
							public set(param0: string, param1: string): com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations;
							public set(param0: string, param1: number): com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations;
							public set(param0: string, param1: androidNative.Array<number>): com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations;
							public getRemovedValues(): java.util.List<string>;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class DefaultContentMetadata extends com.google.android.exoplayer2.upstream.cache.ContentMetadata {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.DefaultContentMetadata>;
							public static EMPTY: com.google.android.exoplayer2.upstream.cache.DefaultContentMetadata;
							public constructor();
							public entrySet(): java.util.Set<java.util.Map.Entry<string,native.Array<number>>>;
							public hashCode(): number;
							public get(param0: string, param1: number): number;
							public static getRedirectedUri(param0: com.google.android.exoplayer2.upstream.cache.ContentMetadata): globalAndroid.net.Uri;
							public static getContentLength(param0: com.google.android.exoplayer2.upstream.cache.ContentMetadata): number;
							public copyWithMutationsApplied(param0: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations): com.google.android.exoplayer2.upstream.cache.DefaultContentMetadata;
							public contains(param0: string): boolean;
							public equals(param0: any): boolean;
							public get(param0: string, param1: androidNative.Array<number>): androidNative.Array<number>;
							public get(param0: string, param1: string): string;
							public constructor(param0: java.util.Map<string,native.Array<number>>);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class LeastRecentlyUsedCacheEvictor extends com.google.android.exoplayer2.upstream.cache.CacheEvictor {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.LeastRecentlyUsedCacheEvictor>;
							public onStartFile(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: string, param2: number, param3: number): void;
							public onSpanAdded(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public onSpanTouched(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan, param2: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public requiresCacheSpanTouches(): boolean;
							public onSpanRemoved(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public onCacheInitialized(): void;
							public constructor(param0: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class NoOpCacheEvictor extends com.google.android.exoplayer2.upstream.cache.CacheEvictor {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.NoOpCacheEvictor>;
							public constructor();
							public onStartFile(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: string, param2: number, param3: number): void;
							public onSpanAdded(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public onSpanTouched(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan, param2: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public requiresCacheSpanTouches(): boolean;
							public onSpanRemoved(param0: com.google.android.exoplayer2.upstream.cache.Cache, param1: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public onCacheInitialized(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class SimpleCache extends com.google.android.exoplayer2.upstream.cache.Cache {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.SimpleCache>;
							public addListener(param0: string, param1: com.google.android.exoplayer2.upstream.cache.Cache.Listener): java.util.NavigableSet<com.google.android.exoplayer2.upstream.cache.CacheSpan>;
							public removeListener(param0: string, param1: com.google.android.exoplayer2.upstream.cache.Cache.Listener): void;
							public getCacheSpace(): number;
							public getCachedSpans(param0: string): java.util.NavigableSet<com.google.android.exoplayer2.upstream.cache.CacheSpan>;
							public getContentMetadata(param0: string): com.google.android.exoplayer2.upstream.cache.ContentMetadata;
							public startReadWriteNonBlocking(param0: string, param1: number, param2: number): com.google.android.exoplayer2.upstream.cache.CacheSpan;
							public getUid(): number;
							public getCachedBytes(param0: string, param1: number, param2: number): number;
							public isCached(param0: string, param1: number, param2: number): boolean;
							public constructor(param0: java.io.File, param1: com.google.android.exoplayer2.upstream.cache.CacheEvictor, param2: com.google.android.exoplayer2.database.DatabaseProvider);
							public getKeys(): java.util.Set<string>;
							/** @deprecated */
							public constructor(param0: java.io.File, param1: com.google.android.exoplayer2.upstream.cache.CacheEvictor, param2: androidNative.Array<number>);
							/** @deprecated */
							public constructor(param0: java.io.File, param1: com.google.android.exoplayer2.upstream.cache.CacheEvictor);
							public static isCacheFolderLocked(param0: java.io.File): boolean;
							public releaseHoleSpan(param0: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public checkInitialization(): void;
							public startReadWrite(param0: string, param1: number, param2: number): com.google.android.exoplayer2.upstream.cache.CacheSpan;
							public removeResource(param0: string): void;
							public release(): void;
							public removeSpan(param0: com.google.android.exoplayer2.upstream.cache.CacheSpan): void;
							public static delete(param0: java.io.File, param1: com.google.android.exoplayer2.database.DatabaseProvider): void;
							public startFile(param0: string, param1: number, param2: number): java.io.File;
							public commitFile(param0: java.io.File, param1: number): void;
							/** @deprecated */
							public constructor(param0: java.io.File, param1: com.google.android.exoplayer2.upstream.cache.CacheEvictor, param2: androidNative.Array<number>, param3: boolean);
							public applyContentMetadataMutations(param0: string, param1: com.google.android.exoplayer2.upstream.cache.ContentMetadataMutations): void;
							public constructor(param0: java.io.File, param1: com.google.android.exoplayer2.upstream.cache.CacheEvictor, param2: com.google.android.exoplayer2.database.DatabaseProvider, param3: androidNative.Array<number>, param4: boolean, param5: boolean);
							public getCachedLength(param0: string, param1: number, param2: number): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module cache {
						export class SimpleCacheSpan extends com.google.android.exoplayer2.upstream.cache.CacheSpan {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan>;
							public static createLookup(param0: string, param1: number): com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan;
							public static createCacheEntry(param0: java.io.File, param1: number, param2: com.google.android.exoplayer2.upstream.cache.CachedContentIndex): com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan;
							public copyWithFileAndLastTouchTimestamp(param0: java.io.File, param1: number): com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan;
							public static getCacheFile(param0: java.io.File, param1: number, param2: number, param3: number): java.io.File;
							public static createHole(param0: string, param1: number, param2: number): com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan;
							public static createCacheEntry(param0: java.io.File, param1: number, param2: number, param3: com.google.android.exoplayer2.upstream.cache.CachedContentIndex): com.google.android.exoplayer2.upstream.cache.SimpleCacheSpan;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module crypto {
						export class AesCipherDataSink extends com.google.android.exoplayer2.upstream.DataSink {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.crypto.AesCipherDataSink>;
							public constructor(param0: androidNative.Array<number>, param1: com.google.android.exoplayer2.upstream.DataSink, param2: androidNative.Array<number>);
							public close(): void;
							public write(param0: androidNative.Array<number>, param1: number, param2: number): void;
							public constructor(param0: androidNative.Array<number>, param1: com.google.android.exoplayer2.upstream.DataSink);
							public open(param0: com.google.android.exoplayer2.upstream.DataSpec): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module crypto {
						export class AesCipherDataSource extends com.google.android.exoplayer2.upstream.DataSource {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.crypto.AesCipherDataSource>;
							public getUri(): globalAndroid.net.Uri;
							public close(): void;
							public open(param0: com.google.android.exoplayer2.upstream.DataSpec): number;
							public constructor(param0: androidNative.Array<number>, param1: com.google.android.exoplayer2.upstream.DataSource);
							public addTransferListener(param0: com.google.android.exoplayer2.upstream.TransferListener): void;
							public getResponseHeaders(): java.util.Map<string,java.util.List<string>>;
							public read(param0: androidNative.Array<number>, param1: number, param2: number): number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module crypto {
						export class AesFlushingCipher {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.crypto.AesFlushingCipher>;
							public constructor(param0: number, param1: androidNative.Array<number>, param2: number, param3: number);
							public updateInPlace(param0: androidNative.Array<number>, param1: number, param2: number): void;
							public update(param0: androidNative.Array<number>, param1: number, param2: number, param3: androidNative.Array<number>, param4: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module upstream {
					export module crypto {
						export class CryptoUtil {
							public static class: java.lang.Class<com.google.android.exoplayer2.upstream.crypto.CryptoUtil>;
							public static getFNV64Hash(param0: string): number;
						}
					}
				}
			}
		}
	}
}



declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class Assertions {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.Assertions>;
						public static checkIndex(param0: number, param1: number, param2: number): number;
						public static checkStateNotNull(param0: any): any;
						public static checkArgument(param0: boolean, param1: any): void;
						public static checkNotNull(param0: any): any;
						public static checkMainThread(): void;
						public static checkArgument(param0: boolean): void;
						public static checkNotEmpty(param0: string): string;
						public static checkStateNotNull(param0: any, param1: any): any;
						public static checkNotNull(param0: any, param1: any): any;
						public static checkNotEmpty(param0: string, param1: any): string;
						public static checkState(param0: boolean): void;
						public static checkState(param0: boolean, param1: any): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class AtomicFile {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.AtomicFile>;
						public openRead(): java.io.InputStream;
						public delete(): void;
						public constructor(param0: java.io.File);
						public exists(): boolean;
						public endWrite(param0: java.io.OutputStream): void;
						public startWrite(): java.io.OutputStream;
					}
					export module AtomicFile {
						export class AtomicFileOutputStream {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.AtomicFile.AtomicFileOutputStream>;
							public close(): void;
							public constructor(param0: java.io.File);
							public write(param0: androidNative.Array<number>): void;
							public write(param0: androidNative.Array<number>, param1: number, param2: number): void;
							public flush(): void;
							public write(param0: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class Clock {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.Clock>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.util.Clock interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							currentTimeMillis(): number;
							elapsedRealtime(): number;
							uptimeMillis(): number;
							sleep(param0: number): void;
							createHandler(param0: globalAndroid.os.Looper, param1: globalAndroid.os.Handler.Callback): com.google.android.exoplayer2.util.HandlerWrapper;
							<clinit>(): void;
						});
						public constructor();
						public static DEFAULT: com.google.android.exoplayer2.util.Clock;
						public currentTimeMillis(): number;
						public elapsedRealtime(): number;
						public createHandler(param0: globalAndroid.os.Looper, param1: globalAndroid.os.Handler.Callback): com.google.android.exoplayer2.util.HandlerWrapper;
						public uptimeMillis(): number;
						public sleep(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class CodecSpecificDataUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.CodecSpecificDataUtil>;
						public static buildNalUnit(param0: androidNative.Array<number>, param1: number, param2: number): androidNative.Array<number>;
						public static parseAlacAudioSpecificConfig(param0: androidNative.Array<number>): globalAndroid.util.Pair<java.lang.Integer,java.lang.Integer>;
						public static buildHevcCodecStringFromSps(param0: com.google.android.exoplayer2.util.ParsableNalUnitBitArray): string;
						public static buildCea708InitializationData(param0: boolean): java.util.List<native.Array<number>>;
						public static buildAvcCodecString(param0: number, param1: number, param2: number): string;
						public static splitNalUnits(param0: androidNative.Array<number>): androidNative.Array<native.Array<number>>;
						public static parseCea708InitializationData(param0: java.util.List<native.Array<number>>): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class ColorParser {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.ColorParser>;
						public static parseCssColor(param0: string): number;
						public static parseTtmlColor(param0: string): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class ConditionVariable {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.ConditionVariable>;
						public block(): void;
						public blockUninterruptible(): void;
						public constructor();
						public constructor(param0: com.google.android.exoplayer2.util.Clock);
						public block(param0: number): boolean;
						public isOpen(): boolean;
						public open(): boolean;
						public close(): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class Consumer<T>  extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.Consumer<any>>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.util.Consumer<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							accept(param0: T): void;
						});
						public constructor();
						public accept(param0: T): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class CopyOnWriteMultiset<E>  extends java.lang.Iterable<any> {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.CopyOnWriteMultiset<any>>;
						public constructor();
						public remove(param0: any): void;
						public add(param0: any): void;
						public iterator(): java.util.Iterator<any>;
						public elementSet(): java.util.Set<any>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class EGLSurfaceTexture {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.EGLSurfaceTexture>;
						public static SECURE_MODE_NONE: number;
						public static SECURE_MODE_SURFACELESS_CONTEXT: number;
						public static SECURE_MODE_PROTECTED_PBUFFER: number;
						public onFrameAvailable(param0: globalAndroid.graphics.SurfaceTexture): void;
						public run(): void;
						public getSurfaceTexture(): globalAndroid.graphics.SurfaceTexture;
						public release(): void;
						public init(param0: number): void;
						public constructor(param0: globalAndroid.os.Handler);
						public constructor(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.util.EGLSurfaceTexture.TextureImageListener);
					}
					export module EGLSurfaceTexture {
						export class GlException {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.EGLSurfaceTexture.GlException>;
						}
						export class SecureMode {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.EGLSurfaceTexture.SecureMode>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.util.EGLSurfaceTexture$SecureMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
						export class TextureImageListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.EGLSurfaceTexture.TextureImageListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.util.EGLSurfaceTexture$TextureImageListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onFrameAvailable(): void;
							});
							public constructor();
							public onFrameAvailable(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class ErrorMessageProvider<T>  extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.ErrorMessageProvider<any>>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.util.ErrorMessageProvider<any> interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getErrorMessage(param0: T): globalAndroid.util.Pair<java.lang.Integer,string>;
						});
						public constructor();
						public getErrorMessage(param0: T): globalAndroid.util.Pair<java.lang.Integer,string>;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class EventLogger extends com.google.android.exoplayer2.analytics.AnalyticsListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.EventLogger>;
						public onVideoEnabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onUpstreamDiscarded(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.MediaLoadData): void;
						public loge(param0: string): void;
						public onVolumeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onPlayerReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onAudioPositionAdvancing(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onVideoInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
						public onPlayerError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.ExoPlaybackException): void;
						public onIsPlayingChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
						public onMediaItemTransition(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.MediaItem, param2: number): void;
						/** @deprecated */
						public onPlayerStateChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean, param2: number): void;
						public onDroppedVideoFrames(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number): void;
						public onStaticMetadataChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.util.List<com.google.android.exoplayer2.metadata.Metadata>): void;
						public onDrmSessionReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						/** @deprecated */
						public onDecoderInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.Format): void;
						public onLoadCanceled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						public logd(param0: string): void;
						public onSeekStarted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onAudioDecoderReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
						/** @deprecated */
						public onSeekProcessed(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onIsLoadingChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
						public onTimelineChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onEvents(param0: com.google.android.exoplayer2.Player, param1: com.google.android.exoplayer2.analytics.AnalyticsListener.Events): void;
						public onVideoFrameProcessingOffset(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number): void;
						/** @deprecated */
						public onAudioInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format): void;
						/** @deprecated */
						public onDecoderDisabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onDownstreamFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onPlayWhenReadyChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean, param2: number): void;
						public onVideoDisabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onTracksChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.TrackGroupArray, param2: com.google.android.exoplayer2.trackselection.TrackSelectionArray): void;
						public onAudioInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
						public onLoadStarted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						/** @deprecated */
						public onVideoInputFormatChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.Format): void;
						public onDrmKeysRemoved(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onPlaybackSuppressionReasonChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onBandwidthEstimate(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number, param3: number): void;
						public onLoadCompleted(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData): void;
						public onDrmKeysLoaded(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onLoadError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.source.LoadEventInfo, param2: com.google.android.exoplayer2.source.MediaLoadData, param3: java.io.IOException, param4: boolean): void;
						public onRepeatModeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onShuffleModeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
						public constructor(param0: com.google.android.exoplayer2.trackselection.MappingTrackSelector, param1: string);
						/** @deprecated */
						public onDecoderEnabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onAudioDisabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onDrmKeysRestored(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public onSkipSilenceEnabledChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
						public onDrmSessionAcquired(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime): void;
						public constructor(param0: com.google.android.exoplayer2.trackselection.MappingTrackSelector);
						public onVideoDecoderInitialized(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: number): void;
						public onPlaybackParametersChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.PlaybackParameters): void;
						public onAudioAttributesChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.audio.AudioAttributes): void;
						public onSurfaceSizeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number): void;
						/** @deprecated */
						public onLoadingChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: boolean): void;
						public onPositionDiscontinuity(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onDrmSessionManagerError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.lang.Exception): void;
						public onPlaybackStateChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onAudioSessionIdChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number): void;
						public onAudioDecoderInitialized(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string, param2: number): void;
						public onAudioEnabled(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onVideoDecoderReleased(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: string): void;
						public onAudioSinkError(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: java.lang.Exception): void;
						public onMetadata(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: com.google.android.exoplayer2.metadata.Metadata): void;
						public onAudioUnderrun(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number, param3: number): void;
						public onRenderedFirstFrame(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: globalAndroid.view.Surface): void;
						/** @deprecated */
						public onDecoderInitialized(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: string, param3: number): void;
						public onVideoSizeChanged(param0: com.google.android.exoplayer2.analytics.AnalyticsListener.EventTime, param1: number, param2: number, param3: number, param4: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class FileTypes {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.FileTypes>;
						public static UNKNOWN: number;
						public static AC3: number;
						public static AC4: number;
						public static ADTS: number;
						public static AMR: number;
						public static FLAC: number;
						public static FLV: number;
						public static MATROSKA: number;
						public static MP3: number;
						public static MP4: number;
						public static OGG: number;
						public static PS: number;
						public static TS: number;
						public static WAV: number;
						public static WEBVTT: number;
						public static JPEG: number;
						public static inferFileTypeFromMimeType(param0: string): number;
						public static inferFileTypeFromResponseHeaders(param0: java.util.Map<string,java.util.List<string>>): number;
						public static inferFileTypeFromUri(param0: globalAndroid.net.Uri): number;
					}
					export module FileTypes {
						export class Type {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.FileTypes.Type>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.util.FileTypes$Type interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class FlacConstants {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.FlacConstants>;
						public static STREAM_MARKER_SIZE: number;
						public static METADATA_BLOCK_HEADER_SIZE: number;
						public static STREAM_INFO_BLOCK_SIZE: number;
						public static MIN_FRAME_HEADER_SIZE: number;
						public static MAX_FRAME_HEADER_SIZE: number;
						public static METADATA_TYPE_STREAM_INFO: number;
						public static METADATA_TYPE_SEEK_TABLE: number;
						public static METADATA_TYPE_VORBIS_COMMENT: number;
						public static METADATA_TYPE_PICTURE: number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class GlUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.GlUtil>;
						public static getAttributes(param0: number): androidNative.Array<com.google.android.exoplayer2.util.GlUtil.Attribute>;
						public static compileProgram(param0: androidNative.Array<string>, param1: androidNative.Array<string>): number;
						public static compileProgram(param0: string, param1: string): number;
						public static isProtectedContentExtensionSupported(param0: globalAndroid.content.Context): boolean;
						public static isSurfacelessContextExtensionSupported(): boolean;
						public static checkGlError(): void;
						public static createExternalTexture(): number;
						public static getUniforms(param0: number): androidNative.Array<com.google.android.exoplayer2.util.GlUtil.Uniform>;
						public static createBuffer(param0: number): java.nio.FloatBuffer;
						public static createBuffer(param0: androidNative.Array<number>): java.nio.FloatBuffer;
					}
					export module GlUtil {
						export class Attribute {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.GlUtil.Attribute>;
							public name: string;
							public constructor(param0: number, param1: number);
							public setBuffer(param0: androidNative.Array<number>, param1: number): void;
							public bind(): void;
						}
						export class Uniform {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.GlUtil.Uniform>;
							public name: string;
							public constructor(param0: number, param1: number);
							public setSamplerTexId(param0: number, param1: number): void;
							public setFloat(param0: number): void;
							public bind(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class HandlerWrapper {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.HandlerWrapper>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.util.HandlerWrapper interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getLooper(): globalAndroid.os.Looper;
							hasMessages(param0: number): boolean;
							obtainMessage(param0: number): globalAndroid.os.Message;
							obtainMessage(param0: number, param1: any): globalAndroid.os.Message;
							obtainMessage(param0: number, param1: number, param2: number): globalAndroid.os.Message;
							obtainMessage(param0: number, param1: number, param2: number, param3: any): globalAndroid.os.Message;
							sendEmptyMessage(param0: number): boolean;
							sendEmptyMessageDelayed(param0: number, param1: number): boolean;
							sendEmptyMessageAtTime(param0: number, param1: number): boolean;
							removeMessages(param0: number): void;
							removeCallbacksAndMessages(param0: any): void;
							post(param0: java.lang.Runnable): boolean;
							postDelayed(param0: java.lang.Runnable, param1: number): boolean;
						});
						public constructor();
						public obtainMessage(param0: number): globalAndroid.os.Message;
						public obtainMessage(param0: number, param1: number, param2: number): globalAndroid.os.Message;
						public postDelayed(param0: java.lang.Runnable, param1: number): boolean;
						public obtainMessage(param0: number, param1: any): globalAndroid.os.Message;
						public obtainMessage(param0: number, param1: number, param2: number, param3: any): globalAndroid.os.Message;
						public removeCallbacksAndMessages(param0: any): void;
						public sendEmptyMessageDelayed(param0: number, param1: number): boolean;
						public removeMessages(param0: number): void;
						public hasMessages(param0: number): boolean;
						public post(param0: java.lang.Runnable): boolean;
						public sendEmptyMessageAtTime(param0: number, param1: number): boolean;
						public getLooper(): globalAndroid.os.Looper;
						public sendEmptyMessage(param0: number): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class IntArrayQueue {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.IntArrayQueue>;
						public constructor();
						public capacity(): number;
						public add(param0: number): void;
						public isEmpty(): boolean;
						public remove(): number;
						public clear(): void;
						public size(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class LibraryLoader {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.LibraryLoader>;
						public isAvailable(): boolean;
						public constructor(param0: androidNative.Array<string>);
						public setLibraries(param0: androidNative.Array<string>): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class ListenerSet<T, E>  extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.ListenerSet<any,any>>;
						public copy(param0: globalAndroid.os.Looper, param1: com.google.android.exoplayer2.util.ListenerSet.IterationFinishedEvent<T,E>): com.google.android.exoplayer2.util.ListenerSet<T,E>;
						public sendEvent(param0: number, param1: com.google.android.exoplayer2.util.ListenerSet.Event<T>): void;
						public add(param0: T): void;
						public queueEvent(param0: number, param1: com.google.android.exoplayer2.util.ListenerSet.Event<T>): void;
						public constructor(param0: globalAndroid.os.Looper, param1: com.google.android.exoplayer2.util.Clock, param2: com.google.common.base.Supplier<E>, param3: com.google.android.exoplayer2.util.ListenerSet.IterationFinishedEvent<T,E>);
						public release(): void;
						public remove(param0: T): void;
						public lazyRelease(param0: number, param1: com.google.android.exoplayer2.util.ListenerSet.Event<T>): void;
						public flushEvents(): void;
					}
					export module ListenerSet {
						export class Event<T>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.ListenerSet.Event<any>>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.util.ListenerSet$Event interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								invoke(param0: T): void;
							});
							public constructor();
							public invoke(param0: T): void;
						}
						export class IterationFinishedEvent<T, E>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.ListenerSet.IterationFinishedEvent<any,any>>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.util.ListenerSet$IterationFinishedEvent interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								invoke(param0: T, param1: E): void;
							});
							public constructor();
							public invoke(param0: T, param1: E): void;
						}
						export class ListenerHolder<T, E>  extends java.lang.Object {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.ListenerSet.ListenerHolder<any,any>>;
							public listener: T;
							public constructor(param0: T, param1: com.google.common.base.Supplier<E>);
							public hashCode(): number;
							public invoke(param0: number, param1: com.google.android.exoplayer2.util.ListenerSet.Event<T>): void;
							public release(param0: com.google.android.exoplayer2.util.ListenerSet.IterationFinishedEvent<T,E>): void;
							public iterationFinished(param0: com.google.common.base.Supplier<E>, param1: com.google.android.exoplayer2.util.ListenerSet.IterationFinishedEvent<T,E>): void;
							public equals(param0: any): boolean;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class Log {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.Log>;
						public static LOG_LEVEL_ALL: number;
						public static LOG_LEVEL_INFO: number;
						public static LOG_LEVEL_WARNING: number;
						public static LOG_LEVEL_ERROR: number;
						public static LOG_LEVEL_OFF: number;
						public static w(param0: string, param1: string): void;
						public static setLogLevel(param0: number): void;
						public static getLogLevel(): number;
						public static d(param0: string, param1: string, param2: java.lang.Throwable): void;
						public getLogStackTraces(): boolean;
						public static e(param0: string, param1: string): void;
						public static i(param0: string, param1: string, param2: java.lang.Throwable): void;
						public static i(param0: string, param1: string): void;
						public static getThrowableString(param0: java.lang.Throwable): string;
						public static w(param0: string, param1: string, param2: java.lang.Throwable): void;
						public static d(param0: string, param1: string): void;
						public static e(param0: string, param1: string, param2: java.lang.Throwable): void;
						public static setLogStackTraces(param0: boolean): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class LongArray {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.LongArray>;
						public constructor();
						public constructor(param0: number);
						public toArray(): androidNative.Array<number>;
						public add(param0: number): void;
						public get(param0: number): number;
						public size(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class MediaClock {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.MediaClock>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.util.MediaClock interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							getPositionUs(): number;
							setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
							getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						});
						public constructor();
						public getPositionUs(): number;
						public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						public setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class MimeTypes {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.MimeTypes>;
						public static BASE_TYPE_VIDEO: string;
						public static BASE_TYPE_AUDIO: string;
						public static BASE_TYPE_TEXT: string;
						public static BASE_TYPE_IMAGE: string;
						public static BASE_TYPE_APPLICATION: string;
						public static VIDEO_MP4: string;
						public static VIDEO_MATROSKA: string;
						public static VIDEO_WEBM: string;
						public static VIDEO_H263: string;
						public static VIDEO_H264: string;
						public static VIDEO_H265: string;
						public static VIDEO_VP8: string;
						public static VIDEO_VP9: string;
						public static VIDEO_AV1: string;
						public static VIDEO_MP2T: string;
						public static VIDEO_MP4V: string;
						public static VIDEO_MPEG: string;
						public static VIDEO_PS: string;
						public static VIDEO_MPEG2: string;
						public static VIDEO_VC1: string;
						public static VIDEO_DIVX: string;
						public static VIDEO_FLV: string;
						public static VIDEO_DOLBY_VISION: string;
						public static VIDEO_OGG: string;
						public static VIDEO_UNKNOWN: string;
						public static AUDIO_MP4: string;
						public static AUDIO_AAC: string;
						public static AUDIO_MATROSKA: string;
						public static AUDIO_WEBM: string;
						public static AUDIO_MPEG: string;
						public static AUDIO_MPEG_L1: string;
						public static AUDIO_MPEG_L2: string;
						public static AUDIO_RAW: string;
						public static AUDIO_ALAW: string;
						public static AUDIO_MLAW: string;
						public static AUDIO_AC3: string;
						public static AUDIO_E_AC3: string;
						public static AUDIO_E_AC3_JOC: string;
						public static AUDIO_AC4: string;
						public static AUDIO_TRUEHD: string;
						public static AUDIO_DTS: string;
						public static AUDIO_DTS_HD: string;
						public static AUDIO_DTS_EXPRESS: string;
						public static AUDIO_VORBIS: string;
						public static AUDIO_OPUS: string;
						public static AUDIO_AMR: string;
						public static AUDIO_AMR_NB: string;
						public static AUDIO_AMR_WB: string;
						public static AUDIO_FLAC: string;
						public static AUDIO_ALAC: string;
						public static AUDIO_MSGSM: string;
						public static AUDIO_OGG: string;
						public static AUDIO_WAV: string;
						public static AUDIO_UNKNOWN: string;
						public static TEXT_VTT: string;
						public static TEXT_SSA: string;
						public static APPLICATION_MP4: string;
						public static APPLICATION_WEBM: string;
						public static APPLICATION_MATROSKA: string;
						public static APPLICATION_MPD: string;
						public static APPLICATION_M3U8: string;
						public static APPLICATION_SS: string;
						public static APPLICATION_ID3: string;
						public static APPLICATION_CEA608: string;
						public static APPLICATION_CEA708: string;
						public static APPLICATION_SUBRIP: string;
						public static APPLICATION_TTML: string;
						public static APPLICATION_TX3G: string;
						public static APPLICATION_MP4VTT: string;
						public static APPLICATION_MP4CEA608: string;
						public static APPLICATION_RAWCC: string;
						public static APPLICATION_VOBSUB: string;
						public static APPLICATION_PGS: string;
						public static APPLICATION_SCTE35: string;
						public static APPLICATION_CAMERA_MOTION: string;
						public static APPLICATION_EMSG: string;
						public static APPLICATION_DVBSUBS: string;
						public static APPLICATION_EXIF: string;
						public static APPLICATION_ICY: string;
						public static APPLICATION_AIT: string;
						public static IMAGE_JPEG: string;
						public static isAudio(param0: string): boolean;
						public static normalizeMimeType(param0: string): string;
						public static containsCodecsCorrespondingToMimeType(param0: string, param1: string): boolean;
						public static getTrackType(param0: string): number;
						public static allSamplesAreSyncSamples(param0: string, param1: string): boolean;
						public static getVideoMediaMimeType(param0: string): string;
						public static getTextMediaMimeType(param0: string): string;
						public static registerCustomMimeType(param0: string, param1: string, param2: number): void;
						public static getTrackTypeOfCodec(param0: string): number;
						public static getCodecsCorrespondingToMimeType(param0: string, param1: string): string;
						public static isVideo(param0: string): boolean;
						public static isMatroska(param0: string): boolean;
						public static getAudioMediaMimeType(param0: string): string;
						public static getEncoding(param0: string, param1: string): number;
						public static getMimeTypeFromMp4ObjectType(param0: number): string;
						public static getMediaMimeType(param0: string): string;
						public static isText(param0: string): boolean;
					}
					export module MimeTypes {
						export class CustomMimeType {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.MimeTypes.CustomMimeType>;
							public mimeType: string;
							public codecPrefix: string;
							public trackType: number;
							public constructor(param0: string, param1: string, param2: number);
						}
						export class Mp4aObjectType {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.MimeTypes.Mp4aObjectType>;
							public objectTypeIndication: number;
							public audioObjectTypeIndication: number;
							public constructor(param0: number, param1: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class MutableFlags {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.MutableFlags>;
						public contains(param0: number): boolean;
						public constructor();
						public add(param0: number): void;
						public get(param0: number): number;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public clear(): void;
						public containsAny(param0: androidNative.Array<number>): boolean;
						public size(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class NalUnitUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.NalUnitUtil>;
						public static NAL_START_CODE: androidNative.Array<number>;
						public static EXTENDED_SAR: number;
						public static ASPECT_RATIO_IDC_VALUES: androidNative.Array<number>;
						public static getH265NalUnitType(param0: androidNative.Array<number>, param1: number): number;
						public static unescapeStream(param0: androidNative.Array<number>, param1: number): number;
						public static clearPrefixFlags(param0: androidNative.Array<boolean>): void;
						public static discardToSps(param0: java.nio.ByteBuffer): void;
						public static isNalUnitSei(param0: string, param1: number): boolean;
						public static getNalUnitType(param0: androidNative.Array<number>, param1: number): number;
						public static parseSpsNalUnit(param0: androidNative.Array<number>, param1: number, param2: number): com.google.android.exoplayer2.util.NalUnitUtil.SpsData;
						public static parsePpsNalUnit(param0: androidNative.Array<number>, param1: number, param2: number): com.google.android.exoplayer2.util.NalUnitUtil.PpsData;
						public static findNalUnit(param0: androidNative.Array<number>, param1: number, param2: number, param3: androidNative.Array<boolean>): number;
					}
					export module NalUnitUtil {
						export class PpsData {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.NalUnitUtil.PpsData>;
							public picParameterSetId: number;
							public seqParameterSetId: number;
							public bottomFieldPicOrderInFramePresentFlag: boolean;
							public constructor(param0: number, param1: number, param2: boolean);
						}
						export class SpsData {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.NalUnitUtil.SpsData>;
							public profileIdc: number;
							public constraintsFlagsAndReservedZero2Bits: number;
							public levelIdc: number;
							public seqParameterSetId: number;
							public width: number;
							public height: number;
							public pixelWidthAspectRatio: number;
							public separateColorPlaneFlag: boolean;
							public frameMbsOnlyFlag: boolean;
							public frameNumLength: number;
							public picOrderCountType: number;
							public picOrderCntLsbLength: number;
							public deltaPicOrderAlwaysZeroFlag: boolean;
							public constructor(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number, param6: number, param7: boolean, param8: boolean, param9: number, param10: number, param11: number, param12: boolean);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class NonNullApi {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.NonNullApi>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.util.NonNullApi interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class NotificationUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.NotificationUtil>;
						public static IMPORTANCE_UNSPECIFIED: number;
						public static IMPORTANCE_NONE: number;
						public static IMPORTANCE_MIN: number;
						public static IMPORTANCE_LOW: number;
						public static IMPORTANCE_DEFAULT: number;
						public static IMPORTANCE_HIGH: number;
						/** @deprecated */
						public static createNotificationChannel(param0: globalAndroid.content.Context, param1: string, param2: number, param3: number): void;
						public static setNotification(param0: globalAndroid.content.Context, param1: number, param2: globalAndroid.app.Notification): void;
						public static createNotificationChannel(param0: globalAndroid.content.Context, param1: string, param2: number, param3: number, param4: number): void;
					}
					export module NotificationUtil {
						export class Importance {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.NotificationUtil.Importance>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.util.NotificationUtil$Importance interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class ParsableBitArray {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.ParsableBitArray>;
						public data: androidNative.Array<number>;
						public getBytePosition(): number;
						public readBytesAsString(param0: number, param1: java.nio.charset.Charset): string;
						public constructor();
						public constructor(param0: androidNative.Array<number>, param1: number);
						public constructor(param0: androidNative.Array<number>);
						public skipBits(param0: number): void;
						public readBytesAsString(param0: number): string;
						public getPosition(): number;
						public putInt(param0: number, param1: number): void;
						public byteAlign(): void;
						public readBit(): boolean;
						public bitsLeft(): number;
						public skipBytes(param0: number): void;
						public reset(param0: androidNative.Array<number>, param1: number): void;
						public reset(param0: androidNative.Array<number>): void;
						public reset(param0: com.google.android.exoplayer2.util.ParsableByteArray): void;
						public readBits(param0: number): number;
						public readBitsToLong(param0: number): number;
						public readBits(param0: androidNative.Array<number>, param1: number, param2: number): void;
						public setPosition(param0: number): void;
						public readBytes(param0: androidNative.Array<number>, param1: number, param2: number): void;
						public skipBit(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class ParsableByteArray {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.ParsableByteArray>;
						public readBytes(param0: com.google.android.exoplayer2.util.ParsableBitArray, param1: number): void;
						public readUnsignedIntToInt(): number;
						public readLittleEndianInt24(): number;
						public readDelimiterTerminatedString(param0: string): string;
						public skipBytes(param0: number): void;
						public peekChar(): string;
						public readLittleEndianInt(): number;
						public limit(): number;
						public readUnsignedInt24(): number;
						public readLong(): number;
						public readString(param0: number, param1: java.nio.charset.Charset): string;
						public constructor();
						public getPosition(): number;
						public readDouble(): number;
						public readNullTerminatedString(): string;
						public readLittleEndianLong(): number;
						public readSynchSafeInt(): number;
						public readString(param0: number): string;
						public setPosition(param0: number): void;
						public readBytes(param0: androidNative.Array<number>, param1: number, param2: number): void;
						public readLittleEndianUnsignedInt(): number;
						public readUnsignedFixedPoint1616(): number;
						public reset(param0: number): void;
						public bytesLeft(): number;
						public readLittleEndianUnsignedIntToInt(): number;
						public constructor(param0: androidNative.Array<number>);
						public readBytes(param0: java.nio.ByteBuffer, param1: number): void;
						public readInt(): number;
						public readUnsignedByte(): number;
						public readNullTerminatedString(param0: number): string;
						public readInt24(): number;
						public reset(param0: androidNative.Array<number>): void;
						public capacity(): number;
						public readUnsignedShort(): number;
						public readLittleEndianShort(): number;
						public setLimit(param0: number): void;
						public readLine(): string;
						public constructor(param0: androidNative.Array<number>, param1: number);
						public readLittleEndianUnsignedShort(): number;
						public getData(): androidNative.Array<number>;
						public readUnsignedLongToLong(): number;
						public readUnsignedInt(): number;
						public readShort(): number;
						public readLittleEndianUnsignedInt24(): number;
						public reset(param0: androidNative.Array<number>, param1: number): void;
						public peekUnsignedByte(): number;
						public ensureCapacity(param0: number): void;
						public constructor(param0: number);
						public readUtf8EncodedLong(): number;
						public readFloat(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class ParsableNalUnitBitArray {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.ParsableNalUnitBitArray>;
						public constructor(param0: androidNative.Array<number>, param1: number, param2: number);
						public skipBits(param0: number): void;
						public canReadBits(param0: number): boolean;
						public readBits(param0: number): number;
						public canReadExpGolombCodedNum(): boolean;
						public readBit(): boolean;
						public readSignedExpGolombCodedInt(): number;
						public skipBit(): void;
						public readUnsignedExpGolombCodedInt(): number;
						public reset(param0: androidNative.Array<number>, param1: number, param2: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class PriorityTaskManager {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.PriorityTaskManager>;
						public constructor();
						public proceedOrThrow(param0: number): void;
						public proceed(param0: number): void;
						public add(param0: number): void;
						public proceedNonBlocking(param0: number): boolean;
						public remove(param0: number): void;
					}
					export module PriorityTaskManager {
						export class PriorityTooLowException {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.PriorityTaskManager.PriorityTooLowException>;
							public constructor(param0: number, param1: number);
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class RepeatModeUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.RepeatModeUtil>;
						public static REPEAT_TOGGLE_MODE_NONE: number;
						public static REPEAT_TOGGLE_MODE_ONE: number;
						public static REPEAT_TOGGLE_MODE_ALL: number;
						public static getNextRepeatMode(param0: number, param1: number): number;
						public static isRepeatModeEnabled(param0: number, param1: number): boolean;
					}
					export module RepeatModeUtil {
						export class RepeatToggleModes {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.RepeatModeUtil.RepeatToggleModes>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.util.RepeatModeUtil$RepeatToggleModes interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
							});
							public constructor();
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class ReusableBufferedOutputStream {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.ReusableBufferedOutputStream>;
						public constructor(param0: java.io.OutputStream);
						public constructor(param0: java.io.OutputStream, param1: number);
						public reset(param0: java.io.OutputStream): void;
						public close(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export abstract class RunnableFutureTask<R, E>  extends java.util.concurrent.RunnableFuture<any> {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.RunnableFutureTask<any,any>>;
						public constructor();
						public isDone(): boolean;
						public doWork(): any;
						public blockUntilStarted(): void;
						public blockUntilFinished(): void;
						public run(): void;
						public isCancelled(): boolean;
						public cancel(param0: boolean): boolean;
						public get(param0: number, param1: java.util.concurrent.TimeUnit): any;
						public get(): any;
						public cancelWork(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class SlidingPercentile {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.SlidingPercentile>;
						public constructor(param0: number);
						public getPercentile(param0: number): number;
						public addSample(param0: number, param1: number): void;
						public reset(): void;
					}
					export module SlidingPercentile {
						export class Sample {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.SlidingPercentile.Sample>;
							public index: number;
							public weight: number;
							public value: number;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class SntpClient {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.SntpClient>;
						public static DEFAULT_NTP_HOST: string;
						public static initialize(param0: com.google.android.exoplayer2.upstream.Loader, param1: com.google.android.exoplayer2.util.SntpClient.InitializationCallback): void;
						public static setNtpHost(param0: string): void;
						public static getElapsedRealtimeOffsetMs(): number;
						public static getNtpHost(): string;
						public static isInitialized(): boolean;
					}
					export module SntpClient {
						export class InitializationCallback {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.SntpClient.InitializationCallback>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.util.SntpClient$InitializationCallback interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onInitialized(): void;
								onInitializationFailed(param0: java.io.IOException): void;
							});
							public constructor();
							public onInitialized(): void;
							public onInitializationFailed(param0: java.io.IOException): void;
						}
						export class NtpTimeCallback extends com.google.android.exoplayer2.upstream.Loader.Callback<com.google.android.exoplayer2.upstream.Loader.Loadable> {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.SntpClient.NtpTimeCallback>;
							public onLoadCompleted(param0: com.google.android.exoplayer2.upstream.Loader.Loadable, param1: number, param2: number): void;
							public onLoadError(param0: com.google.android.exoplayer2.upstream.Loader.Loadable, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							public onLoadError(param0: any, param1: number, param2: number, param3: java.io.IOException, param4: number): com.google.android.exoplayer2.upstream.Loader.LoadErrorAction;
							public onLoadCanceled(param0: com.google.android.exoplayer2.upstream.Loader.Loadable, param1: number, param2: number, param3: boolean): void;
							public onLoadCanceled(param0: any, param1: number, param2: number, param3: boolean): void;
							public onLoadCompleted(param0: any, param1: number, param2: number): void;
							public constructor(param0: com.google.android.exoplayer2.util.SntpClient.InitializationCallback);
						}
						export class NtpTimeLoadable extends com.google.android.exoplayer2.upstream.Loader.Loadable {
							public static class: java.lang.Class<com.google.android.exoplayer2.util.SntpClient.NtpTimeLoadable>;
							public cancelLoad(): void;
							public load(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class StandaloneMediaClock extends com.google.android.exoplayer2.util.MediaClock {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.StandaloneMediaClock>;
						public getPositionUs(): number;
						public start(): void;
						public constructor(param0: com.google.android.exoplayer2.util.Clock);
						public resetPosition(param0: number): void;
						public getPlaybackParameters(): com.google.android.exoplayer2.PlaybackParameters;
						public setPlaybackParameters(param0: com.google.android.exoplayer2.PlaybackParameters): void;
						public stop(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class SystemClock extends com.google.android.exoplayer2.util.Clock {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.SystemClock>;
						public constructor();
						public currentTimeMillis(): number;
						public elapsedRealtime(): number;
						public createHandler(param0: globalAndroid.os.Looper, param1: globalAndroid.os.Handler.Callback): com.google.android.exoplayer2.util.HandlerWrapper;
						public uptimeMillis(): number;
						public sleep(param0: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class SystemHandlerWrapper extends com.google.android.exoplayer2.util.HandlerWrapper {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.SystemHandlerWrapper>;
						public obtainMessage(param0: number): globalAndroid.os.Message;
						public obtainMessage(param0: number, param1: number, param2: number): globalAndroid.os.Message;
						public postDelayed(param0: java.lang.Runnable, param1: number): boolean;
						public obtainMessage(param0: number, param1: any): globalAndroid.os.Message;
						public obtainMessage(param0: number, param1: number, param2: number, param3: any): globalAndroid.os.Message;
						public removeCallbacksAndMessages(param0: any): void;
						public sendEmptyMessageDelayed(param0: number, param1: number): boolean;
						public removeMessages(param0: number): void;
						public hasMessages(param0: number): boolean;
						public post(param0: java.lang.Runnable): boolean;
						public constructor(param0: globalAndroid.os.Handler);
						public sendEmptyMessageAtTime(param0: number, param1: number): boolean;
						public getLooper(): globalAndroid.os.Looper;
						public sendEmptyMessage(param0: number): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class TimedValueQueue<V>  extends java.lang.Object {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.TimedValueQueue<any>>;
						public pollFloor(param0: number): V;
						public constructor();
						public poll(param0: number): V;
						public pollFirst(): V;
						public constructor(param0: number);
						public add(param0: number, param1: V): void;
						public clear(): void;
						public size(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class TimestampAdjuster {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.TimestampAdjuster>;
						public static DO_NOT_OFFSET: number;
						public getFirstSampleTimestampUs(): number;
						public static usToWrappedPts(param0: number): number;
						public static usToNonWrappedPts(param0: number): number;
						public waitUntilInitialized(): void;
						public constructor(param0: number);
						public setFirstSampleTimestampUs(param0: number): void;
						public getLastAdjustedTimestampUs(): number;
						public adjustSampleTimestamp(param0: number): number;
						public adjustTsTimestamp(param0: number): number;
						public static ptsToUs(param0: number): number;
						public reset(): void;
						public getTimestampOffsetUs(): number;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class TraceUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.TraceUtil>;
						public static beginSection(param0: string): void;
						public static endSection(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class UnknownNull {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.UnknownNull>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.util.UnknownNull interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
						});
						public constructor();
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class UriUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.UriUtil>;
						public static removeQueryParameter(param0: globalAndroid.net.Uri, param1: string): globalAndroid.net.Uri;
						public static resolve(param0: string, param1: string): string;
						public static resolveToUri(param0: string, param1: string): globalAndroid.net.Uri;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class Util {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.Util>;
						public static SDK_INT: number;
						public static DEVICE: string;
						public static MANUFACTURER: string;
						public static MODEL: string;
						public static DEVICE_DEBUG_INFO: string;
						public static EMPTY_BYTE_ARRAY: androidNative.Array<number>;
						public static ceilDivide(param0: number, param1: number): number;
						public static getCodecCountOfType(param0: string, param1: number): number;
						public static inferContentType(param0: globalAndroid.net.Uri): number;
						public static getPlayoutDurationForMediaDuration(param0: number, param1: number): number;
						public static subtractWithOverflowDefault(param0: number, param1: number, param2: number): number;
						public static writeBoolean(param0: globalAndroid.os.Parcel, param1: boolean): void;
						public static readToEnd(param0: com.google.android.exoplayer2.upstream.DataSource): androidNative.Array<number>;
						public static binarySearchCeil(param0: androidNative.Array<number>, param1: number, param2: boolean, param3: boolean): number;
						public static escapeFileName(param0: string): string;
						public static moveItems(param0: java.util.List, param1: number, param2: number, param3: number): void;
						public static removeRange(param0: java.util.List, param1: number, param2: number): void;
						public static nullSafeArrayConcatenation(param0: androidNative.Array<any>, param1: androidNative.Array<any>): androidNative.Array<any>;
						public static gzip(param0: androidNative.Array<number>): androidNative.Array<number>;
						public static normalizeLanguageCode(param0: string): string;
						public static minValue(param0: globalAndroid.util.SparseLongArray): number;
						public static getCurrentDisplayModeSize(param0: globalAndroid.content.Context): globalAndroid.graphics.Point;
						public static toLong(param0: number, param1: number): number;
						public static inflate(param0: com.google.android.exoplayer2.util.ParsableByteArray, param1: com.google.android.exoplayer2.util.ParsableByteArray, param2: java.util.zip.Inflater): boolean;
						public static createHandlerForCurrentOrMainLooper(param0: globalAndroid.os.Handler.Callback): globalAndroid.os.Handler;
						public static parseXsDateTime(param0: string): number;
						public static compareLong(param0: number, param1: number): number;
						public static maybeRequestReadExternalStoragePermission(param0: globalAndroid.app.Activity, param1: androidNative.Array<globalAndroid.net.Uri>): boolean;
						public static getStringForTime(param0: java.lang.StringBuilder, param1: java.util.Formatter, param2: number): string;
						public static tableExists(param0: globalAndroid.database.sqlite.SQLiteDatabase, param1: string): boolean;
						public static fixSmoothStreamingIsmManifestUri(param0: globalAndroid.net.Uri): globalAndroid.net.Uri;
						public static maybeRequestReadExternalStoragePermission(param0: globalAndroid.app.Activity, param1: androidNative.Array<com.google.android.exoplayer2.MediaItem>): boolean;
						public static formatInvariant(param0: string, param1: androidNative.Array<any>): string;
						public static toUnsignedLong(param0: number): number;
						public static inferContentType(param0: globalAndroid.net.Uri, param1: string): number;
						public static getCurrentDisplayModeSize(param0: globalAndroid.content.Context, param1: globalAndroid.view.Display): globalAndroid.graphics.Point;
						public static closeQuietly(param0: com.google.android.exoplayer2.upstream.DataSource): void;
						public static getAudioTrackChannelConfig(param0: number): number;
						public static split(param0: string, param1: string): androidNative.Array<string>;
						public static nullSafeArrayAppend(param0: androidNative.Array<any>, param1: any): androidNative.Array<any>;
						public static createHandlerForCurrentLooper(param0: globalAndroid.os.Handler.Callback): globalAndroid.os.Handler;
						public static createHandlerForCurrentOrMainLooper(): globalAndroid.os.Handler;
						public static splitCodecs(param0: string): androidNative.Array<string>;
						public static getPcmFrameSize(param0: number, param1: number): number;
						public static toUpperInvariant(param0: string): string;
						public static getMediaDurationForPlayoutDuration(param0: number, param1: number): number;
						public static getCodecsOfType(param0: string, param1: number): string;
						public static getAdaptiveMimeTypeForContentType(param0: number): string;
						public static getUserAgent(param0: globalAndroid.content.Context, param1: string): string;
						public static getBigEndianInt(param0: java.nio.ByteBuffer, param1: number): number;
						public static getUtf8Bytes(param0: string): androidNative.Array<number>;
						public static getSystemLanguageCodes(): androidNative.Array<string>;
						public static getTrackTypeString(param0: number): string;
						public static isLocalFileUri(param0: globalAndroid.net.Uri): boolean;
						public static newSingleThreadExecutor(param0: string): java.util.concurrent.ExecutorService;
						public static linearSearch(param0: androidNative.Array<number>, param1: number): number;
						public static recursiveDelete(param0: java.io.File): void;
						public static addWithOverflowDefault(param0: number, param1: number, param2: number): number;
						public static getBytesFromHexString(param0: string): androidNative.Array<number>;
						public static getNetworkType(param0: globalAndroid.content.Context): number;
						public static createTempFile(param0: globalAndroid.content.Context, param1: string): java.io.File;
						public static getStreamTypeForAudioUsage(param0: number): number;
						public static nullSafeListToArray(param0: java.util.List, param1: androidNative.Array<any>): void;
						public static getAudioContentTypeForStreamType(param0: number): number;
						public static postOrRun(param0: globalAndroid.os.Handler, param1: java.lang.Runnable): boolean;
						public static toByteArray(param0: java.io.InputStream): androidNative.Array<number>;
						public static binarySearchCeil(param0: java.util.List, param1: java.lang.Comparable, param2: boolean, param3: boolean): number;
						public static scaleLargeTimestampsInPlace(param0: androidNative.Array<number>, param1: number, param2: number): void;
						public static getNowUnixTimeMs(param0: number): number;
						public static toLowerInvariant(param0: string): string;
						public static inferContentType(param0: string): number;
						public static sneakyThrow(param0: java.lang.Throwable): void;
						public static crc32(param0: androidNative.Array<number>, param1: number, param2: number, param3: number): number;
						public static scaleLargeTimestamp(param0: number, param1: number, param2: number): number;
						public static getDrmUuid(param0: string): java.util.UUID;
						public static closeQuietly(param0: java.io.Closeable): void;
						public static binarySearchFloor(param0: com.google.android.exoplayer2.util.LongArray, param1: number, param2: boolean, param3: boolean): number;
						public static startForegroundService(param0: globalAndroid.content.Context, param1: globalAndroid.content.Intent): globalAndroid.content.ComponentName;
						public static isTv(param0: globalAndroid.content.Context): boolean;
						public static getIntegerCodeForString(param0: string): number;
						public static inferContentTypeForUriAndMimeType(param0: globalAndroid.net.Uri, param1: string): number;
						public static nullSafeArrayCopyOfRange(param0: androidNative.Array<any>, param1: number, param2: number): androidNative.Array<any>;
						public static getCountryCode(param0: globalAndroid.content.Context): string;
						public static nullSafeArrayCopy(param0: androidNative.Array<any>, param1: number): androidNative.Array<any>;
						public static castNonNull(param0: any): any;
						public static readExactly(param0: com.google.android.exoplayer2.upstream.DataSource, param1: number): androidNative.Array<number>;
						public static getPcmFormat(param0: number, param1: number, param2: number): com.google.android.exoplayer2.Format;
						public static readBoolean(param0: globalAndroid.os.Parcel): boolean;
						public static isEncodingLinearPcm(param0: number): boolean;
						public static isEncodingHighResolutionPcm(param0: number): boolean;
						public static fromUtf8Bytes(param0: androidNative.Array<number>, param1: number, param2: number): string;
						public static crc8(param0: androidNative.Array<number>, param1: number, param2: number, param3: number): number;
						public static getAudioUsageForStreamType(param0: number): number;
						public static getLocaleLanguageTag(param0: java.util.Locale): string;
						public static truncateAscii(param0: string, param1: number): string;
						public static createHandler(param0: globalAndroid.os.Looper, param1: globalAndroid.os.Handler.Callback): globalAndroid.os.Handler;
						public static createHandlerForCurrentLooper(): globalAndroid.os.Handler;
						public static constrainValue(param0: number, param1: number, param2: number): number;
						public static isLinebreak(param0: number): boolean;
						public static parseXsDuration(param0: string): number;
						public static fromUtf8Bytes(param0: androidNative.Array<number>): string;
						public static areEqual(param0: any, param1: any): boolean;
						public static unescapeFileName(param0: string): string;
						public static splitAtFirst(param0: string, param1: string): androidNative.Array<string>;
						public static contains(param0: androidNative.Array<any>, param1: any): boolean;
						public static binarySearchFloor(param0: java.util.List, param1: java.lang.Comparable, param2: boolean, param3: boolean): number;
						public static scaleLargeTimestamps(param0: java.util.List<java.lang.Long>, param1: number, param2: number): androidNative.Array<number>;
						public static toHexString(param0: androidNative.Array<number>): string;
						public static getCommaDelimitedSimpleClassNames(param0: androidNative.Array<any>): string;
						public static getPcmEncoding(param0: number): number;
						public static castNonNullTypeArray(param0: androidNative.Array<any>): androidNative.Array<any>;
						public static binarySearchFloor(param0: androidNative.Array<number>, param1: number, param2: boolean, param3: boolean): number;
						public static getDataUriForString(param0: string, param1: string): globalAndroid.net.Uri;
						public static createTempDirectory(param0: globalAndroid.content.Context, param1: string): java.io.File;
						public static getCurrentOrMainLooper(): globalAndroid.os.Looper;
						public static checkCleartextTrafficPermitted(param0: androidNative.Array<com.google.android.exoplayer2.MediaItem>): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module util {
					export class XmlPullParserUtil {
						public static class: java.lang.Class<com.google.android.exoplayer2.util.XmlPullParserUtil>;
						public static isStartTagIgnorePrefix(param0: org.xmlpull.v1.XmlPullParser, param1: string): boolean;
						public static isEndTag(param0: org.xmlpull.v1.XmlPullParser): boolean;
						public static getAttributeValue(param0: org.xmlpull.v1.XmlPullParser, param1: string): string;
						public static isStartTag(param0: org.xmlpull.v1.XmlPullParser): boolean;
						public static isEndTag(param0: org.xmlpull.v1.XmlPullParser, param1: string): boolean;
						public static isStartTag(param0: org.xmlpull.v1.XmlPullParser, param1: string): boolean;
						public static getAttributeValueIgnorePrefix(param0: org.xmlpull.v1.XmlPullParser, param1: string): string;
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class AvcConfig {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.AvcConfig>;
						public initializationData: java.util.List<native.Array<number>>;
						public nalUnitLengthFieldLength: number;
						public width: number;
						public height: number;
						public pixelWidthAspectRatio: number;
						public codecs: string;
						public static parse(param0: com.google.android.exoplayer2.util.ParsableByteArray): com.google.android.exoplayer2.video.AvcConfig;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class ColorInfo {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.ColorInfo>;
						public colorSpace: number;
						public colorRange: number;
						public colorTransfer: number;
						public hdrStaticInfo: androidNative.Array<number>;
						public static CREATOR: globalAndroid.os.Parcelable.Creator<com.google.android.exoplayer2.video.ColorInfo>;
						public describeContents(): number;
						public constructor(param0: number, param1: number, param2: number, param3: androidNative.Array<number>);
						public writeToParcel(param0: globalAndroid.os.Parcel, param1: number): void;
						public equals(param0: any): boolean;
						public hashCode(): number;
						public toString(): string;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export abstract class DecoderVideoRenderer extends com.google.android.exoplayer2.BaseRenderer {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.DecoderVideoRenderer>;
						public decoderCounters: com.google.android.exoplayer2.decoder.DecoderCounters;
						public shouldDropBuffersToKeyframe(param0: number, param1: number): boolean;
						public onPositionReset(param0: number, param1: boolean): void;
						public canReuseDecoder(param0: string, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.decoder.DecoderReuseEvaluation;
						public static create(param0: number): number;
						public static getTunnelingSupport(param0: number): number;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public onDisabled(): void;
						public onStreamChanged(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: number, param2: number): void;
						public isEnded(): boolean;
						public setDecoderOutputMode(param0: number): void;
						public renderOutputBufferToSurface(param0: com.google.android.exoplayer2.video.VideoDecoderOutputBuffer, param1: globalAndroid.view.Surface): void;
						public setPlaybackSpeed(param0: number, param1: number): void;
						public setCurrentStreamFinal(): void;
						public onInputFormatChanged(param0: com.google.android.exoplayer2.FormatHolder): void;
						public isReady(): boolean;
						public disable(): void;
						public handleMessage(param0: number, param1: any): void;
						public supportsFormat(param0: com.google.android.exoplayer2.Format): number;
						public createDecoder(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.drm.ExoMediaCrypto): com.google.android.exoplayer2.decoder.Decoder<com.google.android.exoplayer2.video.VideoDecoderInputBuffer,any,any>;
						public start(): void;
						public getState(): number;
						public onStopped(): void;
						public getReadingPositionUs(): number;
						public setOutputSurface(param0: globalAndroid.view.Surface): void;
						public onProcessedOutputBuffer(param0: number): void;
						public reset(): void;
						public constructor(param0: number, param1: globalAndroid.os.Handler, param2: com.google.android.exoplayer2.video.VideoRendererEventListener, param3: number);
						public setOutputBufferRenderer(param0: com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer): void;
						public onStarted(): void;
						public flushDecoder(): void;
						public render(param0: number, param1: number): void;
						public updateDroppedBufferCounters(param0: number): void;
						public getName(): string;
						public replaceStream(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: com.google.android.exoplayer2.source.SampleStream, param2: number, param3: number): void;
						public releaseDecoder(): void;
						public maybeDropBuffersToKeyframe(param0: number): boolean;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public renderOutputBuffer(param0: com.google.android.exoplayer2.video.VideoDecoderOutputBuffer, param1: number, param2: com.google.android.exoplayer2.Format): void;
						public static getAdaptiveSupport(param0: number): number;
						public shouldForceRenderOutputBuffer(param0: number, param1: number): boolean;
						public onQueueInputBuffer(param0: com.google.android.exoplayer2.video.VideoDecoderInputBuffer): void;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public dropOutputBuffer(param0: com.google.android.exoplayer2.video.VideoDecoderOutputBuffer): void;
						public resetPosition(param0: number): void;
						public enable(param0: com.google.android.exoplayer2.RendererConfiguration, param1: androidNative.Array<com.google.android.exoplayer2.Format>, param2: com.google.android.exoplayer2.source.SampleStream, param3: number, param4: boolean, param5: boolean, param6: number, param7: number): void;
						public hasReadStreamToEnd(): boolean;
						public setIndex(param0: number): void;
						public shouldDropOutputBuffer(param0: number, param1: number): boolean;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public onEnabled(param0: boolean, param1: boolean): void;
						public static getFormatSupport(param0: number): number;
						public skipOutputBuffer(param0: com.google.android.exoplayer2.video.VideoDecoderOutputBuffer): void;
						public static create(param0: number, param1: number, param2: number): number;
						public constructor(param0: number);
						public maybeThrowStreamError(): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class DolbyVisionConfig {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.DolbyVisionConfig>;
						public profile: number;
						public level: number;
						public codecs: string;
						public static parse(param0: com.google.android.exoplayer2.util.ParsableByteArray): com.google.android.exoplayer2.video.DolbyVisionConfig;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class DummySurface {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.DummySurface>;
						public secure: boolean;
						public static newInstanceV17(param0: globalAndroid.content.Context, param1: boolean): com.google.android.exoplayer2.video.DummySurface;
						public release(): void;
						public static isSecureSupported(param0: globalAndroid.content.Context): boolean;
					}
					export module DummySurface {
						export class DummySurfaceThread {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.DummySurface.DummySurfaceThread>;
							public constructor();
							public init(param0: number): com.google.android.exoplayer2.video.DummySurface;
							public handleMessage(param0: globalAndroid.os.Message): boolean;
							public release(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class FixedFrameRateEstimator {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.FixedFrameRateEstimator>;
						public static CONSECUTIVE_MATCHING_FRAME_DURATIONS_FOR_SYNC: number;
						public constructor();
						public onNextFrame(param0: number): void;
						public getFramesWithoutSyncCount(): number;
						public isSynced(): boolean;
						public getMatchingFrameDurationSumNs(): number;
						public reset(): void;
						public getFrameDurationNs(): number;
						public getFrameRate(): number;
					}
					export module FixedFrameRateEstimator {
						export class Matcher {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.FixedFrameRateEstimator.Matcher>;
							public constructor();
							public isLastFrameOutlier(): boolean;
							public getMatchingFrameDurationSumNs(): number;
							public isSynced(): boolean;
							public onNextFrame(param0: number): void;
							public getFrameDurationNs(): number;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class HevcConfig {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.HevcConfig>;
						public initializationData: java.util.List<native.Array<number>>;
						public nalUnitLengthFieldLength: number;
						public codecs: string;
						public static parse(param0: com.google.android.exoplayer2.util.ParsableByteArray): com.google.android.exoplayer2.video.HevcConfig;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class MediaCodecVideoDecoderException extends com.google.android.exoplayer2.mediacodec.MediaCodecDecoderException {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.MediaCodecVideoDecoderException>;
						public surfaceIdentityHashCode: number;
						public isSurfaceValid: boolean;
						public constructor(param0: java.lang.Throwable, param1: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, param2: globalAndroid.view.Surface);
						public constructor(param0: java.lang.Throwable, param1: com.google.android.exoplayer2.mediacodec.MediaCodecInfo);
						public constructor(param0: java.lang.Throwable);
						public constructor(param0: string, param1: java.lang.Throwable);
						public constructor(param0: string);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class MediaCodecVideoRenderer extends com.google.android.exoplayer2.mediacodec.MediaCodecRenderer {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.MediaCodecVideoRenderer>;
						public supportsFormat(param0: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param1: com.google.android.exoplayer2.Format): number;
						public renderOutputBufferV21(param0: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, param1: number, param2: number, param3: number): void;
						public constructor(param0: number, param1: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter.Factory, param2: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param3: boolean, param4: number);
						public onPositionReset(param0: number, param1: boolean): void;
						public static getMaxInputSize(param0: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, param1: com.google.android.exoplayer2.Format): number;
						public renderOutputBuffer(param0: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, param1: number, param2: number): void;
						public static create(param0: number): number;
						public onProcessedTunneledBuffer(param0: number): void;
						public static getTunnelingSupport(param0: number): number;
						public getStream(): com.google.android.exoplayer2.source.SampleStream;
						public onDisabled(): void;
						public isEnded(): boolean;
						public getSurface(): globalAndroid.view.Surface;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param2: number);
						public resetCodecStateForFlush(): void;
						public codecNeedsSetOutputSurfaceWorkaround(param0: string): boolean;
						public getDecoderInfos(param0: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param1: com.google.android.exoplayer2.Format, param2: boolean): java.util.List<com.google.android.exoplayer2.mediacodec.MediaCodecInfo>;
						public setPlaybackSpeed(param0: number, param1: number): void;
						public skipOutputBuffer(param0: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, param1: number, param2: number): void;
						public setCurrentStreamFinal(): void;
						public createDecoderException(param0: java.lang.Throwable, param1: com.google.android.exoplayer2.mediacodec.MediaCodecInfo): com.google.android.exoplayer2.mediacodec.MediaCodecDecoderException;
						public getCodecOperatingRateV23(param0: number, param1: com.google.android.exoplayer2.Format, param2: androidNative.Array<com.google.android.exoplayer2.Format>): number;
						public shouldDropOutputBuffer(param0: number, param1: number, param2: boolean): boolean;
						public isReady(): boolean;
						public disable(): void;
						public processOutputBuffer(param0: number, param1: number, param2: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, param3: java.nio.ByteBuffer, param4: number, param5: number, param6: number, param7: number, param8: boolean, param9: boolean, param10: com.google.android.exoplayer2.Format): boolean;
						public onCodecInitialized(param0: string, param1: number, param2: number): void;
						public handleMessage(param0: number, param1: any): void;
						public getCodecMaxValues(param0: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, param1: com.google.android.exoplayer2.Format, param2: androidNative.Array<com.google.android.exoplayer2.Format>): com.google.android.exoplayer2.video.MediaCodecVideoRenderer.CodecMaxValues;
						public canReuseCodec(param0: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, param1: com.google.android.exoplayer2.Format, param2: com.google.android.exoplayer2.Format): com.google.android.exoplayer2.decoder.DecoderReuseEvaluation;
						public supportsFormat(param0: com.google.android.exoplayer2.Format): number;
						public start(): void;
						public getState(): number;
						public configureCodec(param0: com.google.android.exoplayer2.mediacodec.MediaCodecInfo, param1: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, param2: com.google.android.exoplayer2.Format, param3: globalAndroid.media.MediaCrypto, param4: number): void;
						public handleInputBufferSupplementalData(param0: com.google.android.exoplayer2.decoder.DecoderInputBuffer): void;
						public onReset(): void;
						public onStopped(): void;
						public getReadingPositionUs(): number;
						public onProcessedOutputBuffer(param0: number): void;
						public reset(): void;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param2: number, param3: globalAndroid.os.Handler, param4: com.google.android.exoplayer2.video.VideoRendererEventListener, param5: number);
						public onQueueInputBuffer(param0: com.google.android.exoplayer2.decoder.DecoderInputBuffer): void;
						public getCodecNeedsEosPropagation(): boolean;
						public onStarted(): void;
						public shouldDropBuffersToKeyframe(param0: number, param1: number, param2: boolean): boolean;
						public updateDroppedBufferCounters(param0: number): void;
						public render(param0: number, param1: number): void;
						public getName(): string;
						public setOutputSurfaceV23(param0: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, param1: globalAndroid.view.Surface): void;
						public replaceStream(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: com.google.android.exoplayer2.source.SampleStream, param2: number, param3: number): void;
						public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
						public isCurrentStreamFinal(): boolean;
						public dropOutputBuffer(param0: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, param1: number, param2: number): void;
						public static getAdaptiveSupport(param0: number): number;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.mediacodec.MediaCodecSelector);
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param2: number, param3: boolean, param4: globalAndroid.os.Handler, param5: com.google.android.exoplayer2.video.VideoRendererEventListener, param6: number);
						public onCodecReleased(param0: string): void;
						public shouldForceRenderOutputBuffer(param0: number, param1: number): boolean;
						public onInputFormatChanged(param0: com.google.android.exoplayer2.FormatHolder): com.google.android.exoplayer2.decoder.DecoderReuseEvaluation;
						public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
						public maybeDropBuffersToKeyframe(param0: number, param1: boolean): boolean;
						public updateVideoFrameProcessingOffsetCounters(param0: number): void;
						public resetPosition(param0: number): void;
						public getMediaFormat(param0: com.google.android.exoplayer2.Format, param1: string, param2: com.google.android.exoplayer2.video.MediaCodecVideoRenderer.CodecMaxValues, param3: number, param4: boolean, param5: number): globalAndroid.media.MediaFormat;
						public enable(param0: com.google.android.exoplayer2.RendererConfiguration, param1: androidNative.Array<com.google.android.exoplayer2.Format>, param2: com.google.android.exoplayer2.source.SampleStream, param3: number, param4: boolean, param5: boolean, param6: number, param7: number): void;
						public hasReadStreamToEnd(): boolean;
						public setIndex(param0: number): void;
						public onProcessedStreamChange(): void;
						public getTrackType(): number;
						public supportsMixedMimeTypeAdaptation(): number;
						public stop(): void;
						public onOutputFormatChanged(param0: com.google.android.exoplayer2.Format, param1: globalAndroid.media.MediaFormat): void;
						public onEnabled(param0: boolean, param1: boolean): void;
						public static getFormatSupport(param0: number): number;
						public shouldInitCodec(param0: com.google.android.exoplayer2.mediacodec.MediaCodecInfo): boolean;
						public constructor(param0: globalAndroid.content.Context, param1: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter.Factory, param2: com.google.android.exoplayer2.mediacodec.MediaCodecSelector, param3: number, param4: boolean, param5: globalAndroid.os.Handler, param6: com.google.android.exoplayer2.video.VideoRendererEventListener, param7: number);
						public static create(param0: number, param1: number, param2: number): number;
						public constructor(param0: number);
						public maybeThrowStreamError(): void;
					}
					export module MediaCodecVideoRenderer {
						export class CodecMaxValues {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.MediaCodecVideoRenderer.CodecMaxValues>;
							public width: number;
							public height: number;
							public inputSize: number;
							public constructor(param0: number, param1: number, param2: number);
						}
						export class OnFrameRenderedListenerV23 extends com.google.android.exoplayer2.mediacodec.MediaCodecAdapter.OnFrameRenderedListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.MediaCodecVideoRenderer.OnFrameRenderedListenerV23>;
							public constructor(param0: com.google.android.exoplayer2.video.MediaCodecVideoRenderer, param1: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter);
							public handleMessage(param0: globalAndroid.os.Message): boolean;
							public onFrameRendered(param0: com.google.android.exoplayer2.mediacodec.MediaCodecAdapter, param1: number, param2: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoDecoderGLFrameRenderer extends com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoDecoderGLFrameRenderer>;
						public onSurfaceChanged(param0: javax.microedition.khronos.opengles.GL10, param1: number, param2: number): void;
						public onSurfaceCreated(param0: javax.microedition.khronos.opengles.GL10, param1: javax.microedition.khronos.egl.EGLConfig): void;
						public setOutputBuffer(param0: com.google.android.exoplayer2.video.VideoDecoderOutputBuffer): void;
						public constructor(param0: globalAndroid.opengl.GLSurfaceView);
						public onDrawFrame(param0: javax.microedition.khronos.opengles.GL10): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoDecoderGLSurfaceView {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoDecoderGLSurfaceView>;
						public constructor(param0: globalAndroid.content.Context);
						public constructor(param0: globalAndroid.content.Context, param1: globalAndroid.util.AttributeSet);
						public getVideoDecoderOutputBufferRenderer(): com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoDecoderInputBuffer extends com.google.android.exoplayer2.decoder.DecoderInputBuffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoDecoderInputBuffer>;
						public format: com.google.android.exoplayer2.Format;
						public constructor();
						public constructor(param0: number);
						public constructor(param0: number, param1: number);
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoDecoderOutputBuffer extends com.google.android.exoplayer2.decoder.OutputBuffer {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoDecoderOutputBuffer>;
						public static COLORSPACE_UNKNOWN: number;
						public static COLORSPACE_BT601: number;
						public static COLORSPACE_BT709: number;
						public static COLORSPACE_BT2020: number;
						public decoderPrivate: number;
						public mode: number;
						public data: java.nio.ByteBuffer;
						public width: number;
						public height: number;
						public format: com.google.android.exoplayer2.Format;
						public yuvPlanes: androidNative.Array<java.nio.ByteBuffer>;
						public yuvStrides: androidNative.Array<number>;
						public colorspace: number;
						public supplementalData: java.nio.ByteBuffer;
						public constructor();
						public constructor(param0: com.google.android.exoplayer2.decoder.OutputBuffer.Owner<com.google.android.exoplayer2.video.VideoDecoderOutputBuffer>);
						public init(param0: number, param1: number, param2: java.nio.ByteBuffer): void;
						public release(): void;
						public initForPrivateFrame(param0: number, param1: number): void;
						public initForYuvFrame(param0: number, param1: number, param2: number, param3: number, param4: number): boolean;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoDecoderOutputBufferRenderer {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.video.VideoDecoderOutputBufferRenderer interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							setOutputBuffer(param0: com.google.android.exoplayer2.video.VideoDecoderOutputBuffer): void;
						});
						public constructor();
						public setOutputBuffer(param0: com.google.android.exoplayer2.video.VideoDecoderOutputBuffer): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoFrameMetadataListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoFrameMetadataListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.video.VideoFrameMetadataListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onVideoFrameAboutToBeRendered(param0: number, param1: number, param2: com.google.android.exoplayer2.Format, param3: globalAndroid.media.MediaFormat): void;
						});
						public constructor();
						public onVideoFrameAboutToBeRendered(param0: number, param1: number, param2: com.google.android.exoplayer2.Format, param3: globalAndroid.media.MediaFormat): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoFrameReleaseHelper {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoFrameReleaseHelper>;
						public onSurfaceChanged(param0: globalAndroid.view.Surface): void;
						public onNextFrame(param0: number): void;
						public constructor(param0: globalAndroid.content.Context);
						public onEnabled(): void;
						public onPlaybackSpeed(param0: number): void;
						public onDisabled(): void;
						public onStarted(): void;
						public onStopped(): void;
						public adjustReleaseTime(param0: number): number;
						public onFormatChanged(param0: number): void;
						public onPositionReset(): void;
					}
					export module VideoFrameReleaseHelper {
						export class DefaultDisplayListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoFrameReleaseHelper.DefaultDisplayListener>;
							public unregister(): void;
							public constructor(param0: com.google.android.exoplayer2.video.VideoFrameReleaseHelper, param1: globalAndroid.hardware.display.DisplayManager);
							public onDisplayRemoved(param0: number): void;
							public onDisplayChanged(param0: number): void;
							public register(): void;
							public onDisplayAdded(param0: number): void;
						}
						export class VSyncSampler {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoFrameReleaseHelper.VSyncSampler>;
							public sampledVsyncTimeNs: number;
							public addObserver(): void;
							public removeObserver(): void;
							public doFrame(param0: number): void;
							public handleMessage(param0: globalAndroid.os.Message): boolean;
							public static getInstance(): com.google.android.exoplayer2.video.VideoFrameReleaseHelper.VSyncSampler;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.video.VideoListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onVideoSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
							onSurfaceSizeChanged(param0: number, param1: number): void;
							onRenderedFirstFrame(): void;
						});
						public constructor();
						public onRenderedFirstFrame(): void;
						public onVideoSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
						public onSurfaceSizeChanged(param0: number, param1: number): void;
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export class VideoRendererEventListener {
						public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoRendererEventListener>;
						/**
						 * Constructs a new instance of the com.google.android.exoplayer2.video.VideoRendererEventListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
						 */
						public constructor(implementation: {
							onVideoEnabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							onVideoDecoderInitialized(param0: string, param1: number, param2: number): void;
							onVideoInputFormatChanged(param0: com.google.android.exoplayer2.Format): void;
							onVideoInputFormatChanged(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
							onDroppedFrames(param0: number, param1: number): void;
							onVideoFrameProcessingOffset(param0: number, param1: number): void;
							onVideoSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
							onRenderedFirstFrame(param0: globalAndroid.view.Surface): void;
							onVideoDecoderReleased(param0: string): void;
							onVideoDisabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						});
						public constructor();
						public onVideoEnabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
						public onVideoInputFormatChanged(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
						public onVideoDecoderReleased(param0: string): void;
						public onVideoSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
						public onDroppedFrames(param0: number, param1: number): void;
						/** @deprecated */
						public onVideoInputFormatChanged(param0: com.google.android.exoplayer2.Format): void;
						public onRenderedFirstFrame(param0: globalAndroid.view.Surface): void;
						public onVideoFrameProcessingOffset(param0: number, param1: number): void;
						public onVideoDecoderInitialized(param0: string, param1: number, param2: number): void;
						public onVideoDisabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
					}
					export module VideoRendererEventListener {
						export class EventDispatcher {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.VideoRendererEventListener.EventDispatcher>;
							public reportVideoFrameProcessingOffset(param0: number, param1: number): void;
							public renderedFirstFrame(param0: globalAndroid.view.Surface): void;
							public enabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							public disabled(param0: com.google.android.exoplayer2.decoder.DecoderCounters): void;
							public droppedFrames(param0: number, param1: number): void;
							public constructor(param0: globalAndroid.os.Handler, param1: com.google.android.exoplayer2.video.VideoRendererEventListener);
							public decoderInitialized(param0: string, param1: number, param2: number): void;
							public decoderReleased(param0: string): void;
							public inputFormatChanged(param0: com.google.android.exoplayer2.Format, param1: com.google.android.exoplayer2.decoder.DecoderReuseEvaluation): void;
							public videoSizeChanged(param0: number, param1: number, param2: number, param3: number): void;
						}
					}
				}
			}
		}
	}
}


declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export module spherical {
						export class CameraMotionListener {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.CameraMotionListener>;
							/**
							 * Constructs a new instance of the com.google.android.exoplayer2.video.spherical.CameraMotionListener interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
							 */
							public constructor(implementation: {
								onCameraMotion(param0: number, param1: androidNative.Array<number>): void;
								onCameraMotionReset(): void;
							});
							public constructor();
							public onCameraMotion(param0: number, param1: androidNative.Array<number>): void;
							public onCameraMotionReset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export module spherical {
						export class CameraMotionRenderer extends com.google.android.exoplayer2.BaseRenderer {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.CameraMotionRenderer>;
							public isEnded(): boolean;
							public static getTunnelingSupport(param0: number): number;
							public resetPosition(param0: number): void;
							public supportsFormat(param0: com.google.android.exoplayer2.Format): number;
							public static getAdaptiveSupport(param0: number): number;
							public getMediaClock(): com.google.android.exoplayer2.util.MediaClock;
							public reset(): void;
							public disable(): void;
							public setIndex(param0: number): void;
							public isCurrentStreamFinal(): boolean;
							public onPositionReset(param0: number, param1: boolean): void;
							public stop(): void;
							public start(): void;
							public handleMessage(param0: number, param1: any): void;
							public getStream(): com.google.android.exoplayer2.source.SampleStream;
							public getTrackType(): number;
							public onStreamChanged(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: number, param2: number): void;
							public constructor();
							public enable(param0: com.google.android.exoplayer2.RendererConfiguration, param1: androidNative.Array<com.google.android.exoplayer2.Format>, param2: com.google.android.exoplayer2.source.SampleStream, param3: number, param4: boolean, param5: boolean, param6: number, param7: number): void;
							public hasReadStreamToEnd(): boolean;
							public setCurrentStreamFinal(): void;
							public getState(): number;
							public isReady(): boolean;
							public static create(param0: number): number;
							public constructor(param0: number);
							public supportsMixedMimeTypeAdaptation(): number;
							public maybeThrowStreamError(): void;
							public getCapabilities(): com.google.android.exoplayer2.RendererCapabilities;
							public getReadingPositionUs(): number;
							public static getFormatSupport(param0: number): number;
							public replaceStream(param0: androidNative.Array<com.google.android.exoplayer2.Format>, param1: com.google.android.exoplayer2.source.SampleStream, param2: number, param3: number): void;
							public getName(): string;
							public static create(param0: number, param1: number, param2: number): number;
							public setPlaybackSpeed(param0: number, param1: number): void;
							public onDisabled(): void;
							public render(param0: number, param1: number): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export module spherical {
						export class FrameRotationQueue {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.FrameRotationQueue>;
							public constructor();
							public pollRotationMatrix(param0: androidNative.Array<number>, param1: number): boolean;
							public setRotation(param0: number, param1: androidNative.Array<number>): void;
							public static computeRecenterMatrix(param0: androidNative.Array<number>, param1: androidNative.Array<number>): void;
							public reset(): void;
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export module spherical {
						export class Projection {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.Projection>;
							public static DRAW_MODE_TRIANGLES: number;
							public static DRAW_MODE_TRIANGLES_STRIP: number;
							public static DRAW_MODE_TRIANGLES_FAN: number;
							public static TEXTURE_COORDS_PER_VERTEX: number;
							public static POSITION_COORDS_PER_VERTEX: number;
							public leftMesh: com.google.android.exoplayer2.video.spherical.Projection.Mesh;
							public rightMesh: com.google.android.exoplayer2.video.spherical.Projection.Mesh;
							public stereoMode: number;
							public singleMesh: boolean;
							public constructor(param0: com.google.android.exoplayer2.video.spherical.Projection.Mesh, param1: com.google.android.exoplayer2.video.spherical.Projection.Mesh, param2: number);
							public constructor(param0: com.google.android.exoplayer2.video.spherical.Projection.Mesh, param1: number);
							public static createEquirectangular(param0: number): com.google.android.exoplayer2.video.spherical.Projection;
							public static createEquirectangular(param0: number, param1: number, param2: number, param3: number, param4: number, param5: number): com.google.android.exoplayer2.video.spherical.Projection;
						}
						export module Projection {
							export class DrawMode {
								public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.Projection.DrawMode>;
								/**
								 * Constructs a new instance of the com.google.android.exoplayer2.video.spherical.Projection$DrawMode interface with the provided implementation. An empty constructor exists calling super() when extending the interface class.
								 */
								public constructor(implementation: {
								});
								public constructor();
							}
							export class Mesh {
								public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.Projection.Mesh>;
								public getSubMeshCount(): number;
								public constructor(param0: androidNative.Array<com.google.android.exoplayer2.video.spherical.Projection.SubMesh>);
								public getSubMesh(param0: number): com.google.android.exoplayer2.video.spherical.Projection.SubMesh;
							}
							export class SubMesh {
								public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.Projection.SubMesh>;
								public static VIDEO_TEXTURE_ID: number;
								public textureId: number;
								public mode: number;
								public vertices: androidNative.Array<number>;
								public textureCoords: androidNative.Array<number>;
								public getVertexCount(): number;
								public constructor(param0: number, param1: androidNative.Array<number>, param2: androidNative.Array<number>, param3: number);
							}
						}
					}
				}
			}
		}
	}
}

declare module com {
	export module google {
		export module android {
			export module exoplayer2 {
				export module video {
					export module spherical {
						export class ProjectionDecoder {
							public static class: java.lang.Class<com.google.android.exoplayer2.video.spherical.ProjectionDecoder>;
							public static decode(param0: androidNative.Array<number>, param1: number): com.google.android.exoplayer2.video.spherical.Projection;
						}
					}
				}
			}
		}
	}
}


//Generics information:
//com.google.android.exoplayer2.audio.DecoderAudioRenderer:1
//com.google.android.exoplayer2.audio.DefaultAudioSink.PendingExceptionHolder:1
//com.google.android.exoplayer2.decoder.Decoder:3
//com.google.android.exoplayer2.decoder.OutputBuffer.Owner:1
//com.google.android.exoplayer2.decoder.SimpleDecoder:3
//com.google.android.exoplayer2.mediacodec.MediaCodecUtil.ScoreProvider:1
//com.google.android.exoplayer2.offline.FilterableManifest:1
//com.google.android.exoplayer2.offline.FilteringManifestParser:1
//com.google.android.exoplayer2.offline.SegmentDownloader:1
//com.google.android.exoplayer2.source.CompositeMediaSource:1
//com.google.android.exoplayer2.source.ConcatenatingMediaSource.MessageData:1
//com.google.android.exoplayer2.source.SequenceableLoader.Callback:1
//com.google.android.exoplayer2.source.chunk.ChunkSampleStream:1
//com.google.android.exoplayer2.source.chunk.ChunkSampleStream.ReleaseCallback:1
//com.google.android.exoplayer2.upstream.Loader.Callback:1
//com.google.android.exoplayer2.upstream.Loader.LoadTask:1
//com.google.android.exoplayer2.upstream.ParsingLoadable:1
//com.google.android.exoplayer2.upstream.ParsingLoadable.Parser:1
//com.google.android.exoplayer2.util.Consumer:1
//com.google.android.exoplayer2.util.CopyOnWriteMultiset:1
//com.google.android.exoplayer2.util.ErrorMessageProvider:1
//com.google.android.exoplayer2.util.ListenerSet:2
//com.google.android.exoplayer2.util.ListenerSet.Event:1
//com.google.android.exoplayer2.util.ListenerSet.IterationFinishedEvent:2
//com.google.android.exoplayer2.util.ListenerSet.ListenerHolder:2
//com.google.android.exoplayer2.util.RunnableFutureTask:2
//com.google.android.exoplayer2.util.TimedValueQueue:1

